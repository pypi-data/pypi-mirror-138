# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow/core/protobuf/ssl.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='tensorflow/core/protobuf/ssl.proto',
  package='tensorflow',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\"tensorflow/core/protobuf/ssl.proto\x12\ntensorflow\"9\n\x0ePemKeyCertPair\x12\x13\n\x0bprivate_key\x18\x01 \x01(\t\x12\x12\n\ncert_chain\x18\x02 \x01(\t\"\xba\x01\n\x0eServerSSLCerts\x12\x16\n\x0epem_root_certs\x18\x01 \x01(\t\x12\x36\n\x12pem_key_cert_pairs\x18\x02 \x03(\x0b\x32\x1a.tensorflow.PemKeyCertPair\x12X\n#ssl_client_certificate_request_type\x18\x03 \x01(\x0e\x32+.tensorflow.SslClientCertificateRequestType\"P\n\rClientSSLCert\x12\x16\n\x0epem_root_certs\x18\x01 \x01(\t\x12\x13\n\x0bprivate_key\x18\x02 \x01(\t\x12\x12\n\ncert_chain\x18\x03 \x01(\t*\xa8\x02\n\x1fSslClientCertificateRequestType\x12\'\n#SSL_DONT_REQUEST_CLIENT_CERTIFICATE\x10\x00\x12\x32\n.SSL_REQUEST_CLIENT_CERTIFICATE_BUT_DONT_VERIFY\x10\x01\x12-\n)SSL_REQUEST_CLIENT_CERTIFICATE_AND_VERIFY\x10\x02\x12>\n:SSL_REQUEST_AND_REQUIRE_CLIENT_CERTIFICATE_BUT_DONT_VERIFY\x10\x03\x12\x39\n5SSL_REQUEST_AND_REQUIRE_CLIENT_CERTIFICATE_AND_VERIFY\x10\x04\x62\x06proto3'
)

_SSLCLIENTCERTIFICATEREQUESTTYPE = _descriptor.EnumDescriptor(
  name='SslClientCertificateRequestType',
  full_name='tensorflow.SslClientCertificateRequestType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SSL_DONT_REQUEST_CLIENT_CERTIFICATE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SSL_REQUEST_CLIENT_CERTIFICATE_BUT_DONT_VERIFY', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SSL_REQUEST_CLIENT_CERTIFICATE_AND_VERIFY', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SSL_REQUEST_AND_REQUIRE_CLIENT_CERTIFICATE_BUT_DONT_VERIFY', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SSL_REQUEST_AND_REQUIRE_CLIENT_CERTIFICATE_AND_VERIFY', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=381,
  serialized_end=677,
)
_sym_db.RegisterEnumDescriptor(_SSLCLIENTCERTIFICATEREQUESTTYPE)

SslClientCertificateRequestType = enum_type_wrapper.EnumTypeWrapper(_SSLCLIENTCERTIFICATEREQUESTTYPE)
SSL_DONT_REQUEST_CLIENT_CERTIFICATE = 0
SSL_REQUEST_CLIENT_CERTIFICATE_BUT_DONT_VERIFY = 1
SSL_REQUEST_CLIENT_CERTIFICATE_AND_VERIFY = 2
SSL_REQUEST_AND_REQUIRE_CLIENT_CERTIFICATE_BUT_DONT_VERIFY = 3
SSL_REQUEST_AND_REQUIRE_CLIENT_CERTIFICATE_AND_VERIFY = 4



_PEMKEYCERTPAIR = _descriptor.Descriptor(
  name='PemKeyCertPair',
  full_name='tensorflow.PemKeyCertPair',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='private_key', full_name='tensorflow.PemKeyCertPair.private_key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cert_chain', full_name='tensorflow.PemKeyCertPair.cert_chain', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=50,
  serialized_end=107,
)


_SERVERSSLCERTS = _descriptor.Descriptor(
  name='ServerSSLCerts',
  full_name='tensorflow.ServerSSLCerts',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='pem_root_certs', full_name='tensorflow.ServerSSLCerts.pem_root_certs', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pem_key_cert_pairs', full_name='tensorflow.ServerSSLCerts.pem_key_cert_pairs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ssl_client_certificate_request_type', full_name='tensorflow.ServerSSLCerts.ssl_client_certificate_request_type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=110,
  serialized_end=296,
)


_CLIENTSSLCERT = _descriptor.Descriptor(
  name='ClientSSLCert',
  full_name='tensorflow.ClientSSLCert',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='pem_root_certs', full_name='tensorflow.ClientSSLCert.pem_root_certs', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='private_key', full_name='tensorflow.ClientSSLCert.private_key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cert_chain', full_name='tensorflow.ClientSSLCert.cert_chain', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=298,
  serialized_end=378,
)

_SERVERSSLCERTS.fields_by_name['pem_key_cert_pairs'].message_type = _PEMKEYCERTPAIR
_SERVERSSLCERTS.fields_by_name['ssl_client_certificate_request_type'].enum_type = _SSLCLIENTCERTIFICATEREQUESTTYPE
DESCRIPTOR.message_types_by_name['PemKeyCertPair'] = _PEMKEYCERTPAIR
DESCRIPTOR.message_types_by_name['ServerSSLCerts'] = _SERVERSSLCERTS
DESCRIPTOR.message_types_by_name['ClientSSLCert'] = _CLIENTSSLCERT
DESCRIPTOR.enum_types_by_name['SslClientCertificateRequestType'] = _SSLCLIENTCERTIFICATEREQUESTTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

PemKeyCertPair = _reflection.GeneratedProtocolMessageType('PemKeyCertPair', (_message.Message,), {
  'DESCRIPTOR' : _PEMKEYCERTPAIR,
  '__module__' : 'tensorflow.core.protobuf.ssl_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.PemKeyCertPair)
  })
_sym_db.RegisterMessage(PemKeyCertPair)

ServerSSLCerts = _reflection.GeneratedProtocolMessageType('ServerSSLCerts', (_message.Message,), {
  'DESCRIPTOR' : _SERVERSSLCERTS,
  '__module__' : 'tensorflow.core.protobuf.ssl_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.ServerSSLCerts)
  })
_sym_db.RegisterMessage(ServerSSLCerts)

ClientSSLCert = _reflection.GeneratedProtocolMessageType('ClientSSLCert', (_message.Message,), {
  'DESCRIPTOR' : _CLIENTSSLCERT,
  '__module__' : 'tensorflow.core.protobuf.ssl_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.ClientSSLCert)
  })
_sym_db.RegisterMessage(ClientSSLCert)


# @@protoc_insertion_point(module_scope)
