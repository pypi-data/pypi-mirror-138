import numpy as np

mgc = [4,1,3,1,3,2,3,4,2,1,3,1,4,4,2,3,1,3,1,2,1,4,3,4,1,2,1,4]

t_fit = np.array([[ 5,  9,  6,  9,  6,  6,  5, 10,  5, 10,  5, 10,  5,  5],
                  [ 4,  7,  5,  7,  5,  5,  4,  8,  4,  8,  4,  8,  4,  4],
                  [ 5,  8,  7,  8,  7,  7,  5, 10,  5, 10,  5, 10,  5,  5],
                  [ 7, 10, 11, 10, 11, 11,  7, 14,  7, 14,  7, 14,  7,  7],
                  [ 3,  5,  4,  5,  4,  4,  3,  6,  3,  6,  3,  6,  3,  3],
                  [ 4,  7,  5,  7,  5,  5,  4,  8,  4,  8,  4,  8,  4,  4],
                  [ 8, 12, 12, 12, 12, 12,  8, 16,  8, 16,  8, 16,  8,  8],
                  [ 5,  7,  8,  7,  8,  8,  5, 10,  5, 10,  5, 10,  5,  5],
                  [ 4,  5,  7,  5,  7,  7,  4,  8,  4,  8,  4,  8,  4,  4],
                  [ 3,  4,  5,  4,  5,  5,  3,  6,  3,  6,  3,  6,  3,  3],
                  [ 5,  6,  9,  6,  9,  9,  5, 10,  5, 10,  5, 10,  5,  5],
                  [ 7, 10, 11, 10, 11, 11,  7, 14,  7, 14,  7, 14,  7,  7],
                  [ 3,  4,  5,  4,  5,  5,  3,  6,  3,  6,  3,  6,  3,  3],
                  [ 5,  6,  9,  6,  9,  9,  5, 10,  5, 10,  5, 10,  5,  5]]).flatten()

def go_monkey_go(genetic_code):
    code = np.array(genetic_code).reshape((14,2))
    task = [1,2,1,2,1,1,1,2,1,2,1,2,1,1,1,1,2,1,2,2,1,2,1,2,1,2,1,1]
    task = np.array(task).reshape((2,14))
    p_fit = code.dot(task).flatten()
    fitness = len(np.where(p_fit == t_fit)[0])
    return fitness
