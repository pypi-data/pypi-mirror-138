"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import arg_services.nlp.v1.nlp_pb2
import grpc

class NlpServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    DocBin: grpc.UnaryUnaryMultiCallable[
        arg_services.nlp.v1.nlp_pb2.DocBinRequest,
        arg_services.nlp.v1.nlp_pb2.DocBinResponse]

    Vectors: grpc.UnaryUnaryMultiCallable[
        arg_services.nlp.v1.nlp_pb2.VectorsRequest,
        arg_services.nlp.v1.nlp_pb2.VectorsResponse]

    Similarities: grpc.UnaryUnaryMultiCallable[
        arg_services.nlp.v1.nlp_pb2.SimilaritiesRequest,
        arg_services.nlp.v1.nlp_pb2.SimilaritiesResponse]
    """rpc ResetCache (ResetCacheRequest) returns (ResetCacheResponse);"""


class NlpServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def DocBin(self,
        request: arg_services.nlp.v1.nlp_pb2.DocBinRequest,
        context: grpc.ServicerContext,
    ) -> arg_services.nlp.v1.nlp_pb2.DocBinResponse: ...

    @abc.abstractmethod
    def Vectors(self,
        request: arg_services.nlp.v1.nlp_pb2.VectorsRequest,
        context: grpc.ServicerContext,
    ) -> arg_services.nlp.v1.nlp_pb2.VectorsResponse: ...

    @abc.abstractmethod
    def Similarities(self,
        request: arg_services.nlp.v1.nlp_pb2.SimilaritiesRequest,
        context: grpc.ServicerContext,
    ) -> arg_services.nlp.v1.nlp_pb2.SimilaritiesResponse:
        """rpc ResetCache (ResetCacheRequest) returns (ResetCacheResponse);"""
        pass


def add_NlpServiceServicer_to_server(servicer: NlpServiceServicer, server: grpc.Server) -> None: ...
