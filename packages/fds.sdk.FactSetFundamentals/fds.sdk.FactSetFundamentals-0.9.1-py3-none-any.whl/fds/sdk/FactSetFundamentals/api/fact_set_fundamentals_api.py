"""
    FactSet Fundamentals API

    Gain access to current, comprehensive, and comparative information on securities in worldwide developed and emerging markets. Composed of annual and interim/quarterly data, detailed historical financial statement content, per share data, and calculated ratios, FactSet Fundamentals provides you with the information you need for a global investment perspective.   # noqa: E501

    The version of the OpenAPI document: 1.0.2
    Contact: api@factset.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from fds.sdk.FactSetFundamentals.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.FactSetFundamentals.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.FactSetFundamentals.model.error_response import ErrorResponse
from fds.sdk.FactSetFundamentals.model.fundamentals_request import FundamentalsRequest
from fds.sdk.FactSetFundamentals.model.fundamentals_response import FundamentalsResponse


class FactSetFundamentalsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.get_fds_fundamentals_endpoint = _Endpoint(
            settings={
                'response_type': (FundamentalsResponse,),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/factset-fundamentals/v1/fundamentals',
                'operation_id': 'get_fds_fundamentals',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'ids',
                    'metrics',
                    'periodicity',
                    'fiscal_period_start',
                    'fiscal_period_end',
                    'currency',
                    'restated',
                ],
                'required': [
                    'ids',
                    'metrics',
                ],
                'nullable': [
                ],
                'enum': [
                    'periodicity',
                    'restated',
                ],
                'validation': [
                    'ids',
                    'metrics',
                ]
            },
            root_map={
                'validations': {
                    ('ids',): {

                        'max_items': 1000,
                        'min_items': 1,
                    },
                    ('metrics',): {

                        'max_items': 1600,
                        'min_items': 1,
                    },
                },
                'allowed_values': {
                    ('periodicity',): {

                        "ANN": "ANN",
                        "ANN_R": "ANN_R",
                        "QTR": "QTR",
                        "QTR_R": "QTR_R",
                        "SEMI": "SEMI",
                        "LTM": "LTM",
                        "LTMSG": "LTMSG",
                        "YTD": "YTD"
                    },
                    ('restated',): {

                        "RP": "RP",
                        "RF": "RF"
                    },
                },
                'openapi_types': {
                    'ids':
                        ([str],),
                    'metrics':
                        ([str],),
                    'periodicity':
                        (str,),
                    'fiscal_period_start':
                        (str,),
                    'fiscal_period_end':
                        (str,),
                    'currency':
                        (str,),
                    'restated':
                        (str,),
                },
                'attribute_map': {
                    'ids': 'ids',
                    'metrics': 'metrics',
                    'periodicity': 'periodicity',
                    'fiscal_period_start': 'fiscalPeriodStart',
                    'fiscal_period_end': 'fiscalPeriodEnd',
                    'currency': 'currency',
                    'restated': 'restated',
                },
                'location_map': {
                    'ids': 'query',
                    'metrics': 'query',
                    'periodicity': 'query',
                    'fiscal_period_start': 'query',
                    'fiscal_period_end': 'query',
                    'currency': 'query',
                    'restated': 'query',
                },
                'collection_format_map': {
                    'ids': 'csv',
                    'metrics': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_fds_fundamentals_for_list_endpoint = _Endpoint(
            settings={
                'response_type': (FundamentalsResponse,),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/factset-fundamentals/v1/fundamentals',
                'operation_id': 'get_fds_fundamentals_for_list',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'fundamentals_request',
                ],
                'required': [
                    'fundamentals_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'fundamentals_request':
                        (FundamentalsRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'fundamentals_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def get_fds_fundamentals(
        self,
        ids,
        metrics,
        **kwargs
    ):
        """Returns the Company Fundamental Data.  # noqa: E501

        Retrieves FactSet Fundamental standardized data for an individual security. Use the /metrics endpoint to retrieve a full list of valid metrics or data items.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_fds_fundamentals(ids, metrics, async_req=True)
        >>> result = thread.get()

        Args:
            ids ([str]): Security or Entity identifiers. FactSet Identifiers, tickers, CUSIP and SEDOL are accepted as input. <p>***ids limit** =  1000 per request*</p> *<p>Make note, GET Method URL request lines are also limited to a total length of 8192 bytes (8KB). In cases where the service allows for thousands of ids, which may lead to exceeding this request line limit of 8KB, its advised for any requests with large request lines to be requested through the respective \"POST\" method.</p>* 
            metrics ([str]): Requested List of Financial Statement Items or Ratios. Use /metrics endpoint for a complete list of available FF_* metric items. <p>*When requesting multiple metrics, you cannot mix metric data types (e.g. strings and floats). Please use /metrics endpoints for context on metric dataType to avoid null data.*</p> <p>***metrics limit** =  1600 per request*</p> *<p>Make note, GET Method URL request lines are also limited to a total length of 8192 bytes (8KB). In cases where the service allows for thousands of metrics, which may lead to exceeding this request line limit of 8KB, its advised for any requests with large request lines to be requested through the respective \"POST\" method.</p>* 

        Keyword Args:
            periodicity (str): Periodicity or frequency of the fiscal periods, where   * **ANN**  = Annual - Original,   * **ANN_R** = Annual - Latest - *Includes Restatements*,   * **QTR**  = Quarterly - Original,   * **QTR_R** = Quarterly - Latest - *Includes Restatements*,   * **SEMI** = Semi-Annual,   * **LTM**  = Last Twelve Months,   * **LTMSG** = Last Twelve Months Global [OA17959](https://my.apps.factset.com/oa/pages/17959),   * **YTD** = Year-to-date. . [optional] if omitted the server will use the default value of "QTR"
            fiscal_period_start (str): Fiscal period start expressed as YYYY-MM-DD.  Calendar date that will fall back to most recent completed period during resolution. . [optional]
            fiscal_period_end (str): Fiscal period end expressed YYYY-MM-DD.  Calendar date that will fall back to most recent completed period during resolution. . [optional]
            currency (str): Currency code for currency values. For a list of currency ISO codes, visit Online Assistant Page [OA1470](https://my.apps.factset.com/oa/pages/1470). . [optional] if omitted the server will use the default value of "LOCAL"
            restated (str): Update Status Flag:   * **RP** = Include preliminary data,   * **RF** = Only final data . [optional] if omitted the server will use the default value of "RP"
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            FundamentalsResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['ids'] = \
            ids
        kwargs['metrics'] = \
            metrics
        return self.get_fds_fundamentals_endpoint.call_with_http_info(**kwargs)

    def get_fds_fundamentals_for_list(
        self,
        fundamentals_request,
        **kwargs
    ):
        """Returns the Company Fundamental Data.  # noqa: E501

        Retrieves FactSet Fundamental standardized data for an individual security. Use the /metrics endpoint to retrieve a full list of valid metrics or data items.     # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_fds_fundamentals_for_list(fundamentals_request, async_req=True)
        >>> result = thread.get()

        Args:
            fundamentals_request (FundamentalsRequest): Request object for requesting fundamentals data

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            FundamentalsResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['fundamentals_request'] = \
            fundamentals_request
        return self.get_fds_fundamentals_for_list_endpoint.call_with_http_info(**kwargs)

