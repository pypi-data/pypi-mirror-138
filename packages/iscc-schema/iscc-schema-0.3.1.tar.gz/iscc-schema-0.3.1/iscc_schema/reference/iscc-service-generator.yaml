openapi: 3.0.0
info:
  title: ISCC Generator Service
  version: 1.5.0
  x-logo:
    url: https://schema.iscc.codes/images/iscc-logo-blue.png
    altText: ISCC Logo
  license:
    name: Apache License 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  description: '## About this spec


    The ISCC Generator Service API is an implementation-agnostig API


    - For use and implementation by ISCC service providers

    - For use by Web and GUI-based applications via REST client

    '
  contact:
    name: ISCC Foundation
    url: https://iscc.foundation
    email: tp@iscc.foundation
servers:
- url: http://127.0.0.1:8000
  description: Development
- description: Testing
  url: https://api-test.iscc.id
tags:
- name: generate
  description: Generate ISCCs
- name: retrieve
  description: Retrieve ISCCs
- name: delete
  description: Delete ISCCs
paths:
  /iscc_code:
    post:
      summary: Generate ISCC-CODE
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iscc-response'
          headers:
            iscc-task-id:
              schema:
                type: string
                example: 068a358ce0ca48dd906c740d3cb452d4
              description: ID of the background task that processed the ISCC
        '202':
          description: Accepted
          headers:
            iscc-task-id:
              schema:
                type: string
              description: ID of the background task that processed the ISCC
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_url:
                    type: string
                    description: ID of the ISCC processing task.
                    format: uri-reference
                    example: /task/kjdsf09asudf09
                required:
                - task_url
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: generate-iscc-code
      description: 'Create an ISCC-CODE for a media file. You may upload a file or provide
        an URL of the file to be processed. '
      requestBody:
        content:
          multipart/form-data:
            schema:
              allOf:
              - type: object
                properties:
                  source_file:
                    type: string
                    format: binary
                    description: The file used for generating the ISCC
                    writeOnly: true
                  source_url:
                    type: string
                    format: uri
                    example: https://picsum.photos/200/300.jpg
                    maxLength: 2048
                    description: URL of file used for generating the ISCC
                    writeOnly: true
              - $ref: '#/components/schemas/Iscc-request'
            examples: {}
        description: Request for generating an ISCC-CODE. Either `source_file` or `source_url`
          must be provided. All other fields are optional.
      tags:
      - generate
  /iscc_code/{iscc}:
    parameters:
    - schema:
        type: string
      name: iscc
      in: path
      required: true
      description: ISCC-CODE
    get:
      summary: Get ISCC-CODE
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iscc-response'
        '404':
          description: Not Found
      operationId: get-iscc-code
      description: Retrieve metadata for given ISCC-CODE
      tags:
      - retrieve
    delete:
      summary: Delete ISCC-CODE
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      operationId: delete-iscc-code
      description: Delete ISCC-CODE entry
      tags:
      - delete
  /iscc_id:
    post:
      summary: Generate ISCC-ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iscc-id'
        '404':
          description: Not Found
      operationId: generate-iscc-id
      description: Pre-generate an unconfirmed ISCC-ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Iscc-id'
        description: Request pre-generated unconfirmed ISCC-ID.
      tags:
      - generate
  /iscc_id/{iscc}:
    parameters:
    - schema:
        type: string
      name: iscc
      in: path
      required: true
      description: ISCC-ID
    get:
      summary: Get ISCC-ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iscc-id'
        '404':
          description: Not Found
      operationId: get-iscc-id
      description: Retrieve information for given ISCC-ID
      tags:
      - retrieve
    delete:
      summary: Delete ISCC-ID
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      operationId: delete-iscc-id
      description: Delete ISCC-ID entry
      tags:
      - delete
  /task/{task_id}:
    parameters:
    - schema:
        type: string
      name: task_id
      in: path
      required: true
      description: Task-ID
    get:
      summary: Get Task
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: string
                    example: 068a358ce0ca48dd906c740d3cb452d4
                    description: Unique identifier of the task.
                    readOnly: true
                  result_url:
                    type: string
                    format: uri-reference
                    example: /iscc_code/ISCC:KACYPXW445FTYNJ3CYSXHAFJMA2HUWULUNRFE3BLHRSCXYH2M5AEGQY
                    description: URL of the task result.
                    readOnly: true
                  started:
                    type: string
                    format: date-time
                    example: '2021-01-21T17:32:28Z'
                    description: Timestamp when the task was picked up by a worker
                    readOnly: true
                  stopped:
                    type: string
                    format: date-time
                    example: '2021-01-21T17:34:36Z'
                    description: Timestamp of task completion
                    readOnly: true
                  success:
                    type: boolean
                    description: Whether the task succeeded
                    readOnly: true
                required:
                - task_id
        '404':
          description: Not Found
      operationId: get-task
      description: Returns status of Task
      tags:
      - retrieve
  /media/{media_id}:
    parameters:
    - schema:
        type: string
        example: "\td8541cb6f21e952c2c532535c77ac145c09ee1e4184e7f4b19d07c836f83d16a"
      name: media_id
      in: path
      required: true
      description: Media-ID
    get:
      summary: Get Media
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
                properties: {}
        '404':
          description: Not Found
      operationId: get-media
      description: Download media item associated with an ISCC
      tags:
      - retrieve
  /nft:
    post:
      summary: Generate NFT
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nft'
        '405':
          description: Method Not Allowed
        '500':
          description: Internal Server Error
      operationId: generate--nft
      description: Create an NFT package for a given ISCC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nft'
        description: An ISCC-CODE or ISCC-ID for which to create an NFT package
      tags:
      - generate
    parameters: []
  /nft/{id}:
    parameters:
    - schema:
        type: string
      name: id
      in: path
      required: true
    get:
      summary: Get NFT
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nft'
        '404':
          description: Not Found
      operationId: get-nft
      description: Returns a bundled package of IDs and data to be used for NFT minting
      tags:
      - retrieve
    delete:
      summary: Delete NFT
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      operationId: deleta-nft
      description: Delete ISCC-NFT Package
      tags:
      - delete
components:
  schemas:
    Iscc-id:
      title: ISCC-ID
      type: object
      description: An ISCC-ID
      properties:
        iscc_id:
          type: string
          format: uri
          example: ISCC:MEADJVWXP67HW7NI
          description: A globaly unique, owned ISCC-ID (unconfirmed)
          readOnly: true
        iscc_code:
          type: string
          description: The ISCC-CODE from wich the ISCC-ID will be minted.
          example: ISCC:KQDZJFP6WBM3IIFZ7CRXCNDCNUU3ZEWGL5HAKHNMYHLN2WULPN3ZFHJO7AUS6VQQVM7Q
        chain:
          type: string
          description: The blockchain on wich the ISCC-CODE will be declared.
          example: ETHEREUM
          enum:
          - PRIVATE
          - BITCOIN
          - ETHEREUM
          - POLYGON
        wallet:
          type: string
          description: The wallet-address that will sign the ISCC declaration.
          example: '0xb794f5ea0ba39494ce839613fffba74279579268'
        counter:
          type: integer
          description: The uniqueness counter of the ISCC-ID.
          example: 2
      required:
      - iscc_code
      - chain
      - wallet
      examples:
      - iscc_id: ISCC:MEADJVWXP67HW7NI
        iscc_code: ISCC:KQDZJFP6WBM3IIFZ7CRXCNDCNUU3ZEWGL5HAKHNMYHLN2WULPN3ZFHJO7AUS6VQQVM7Q
        chain: ETHEREUM
        wallet: '0xb794f5ea0ba39494ce839613fffba74279579268'
        counter: 2
    Iscc-request:
      title: IsccRequest
      type: object
      description: A request for generating an ISCC-CODE
      properties:
        source_file:
          type: string
          format: binary
          description: The file used for generating the ISCC
          writeOnly: true
        source_url:
          type: string
          format: uri
          example: https://picsum.photos/200/300.jpg
          maxLength: 2048
          description: URL of file used for generating the ISCC
          writeOnly: true
        name:
          type: string
          minLength: 1
          maxLength: 128
          example: The Never Ending Story
          description: The title or name of the intangible creation manifested by the identified
            *digital content*. **Used as input for ISCC Meta-Code generation**.
        description:
          type: string
          example: a 1984 fantasy film co-written and directed by *Wolfgang Petersen*
          minLength: 1
          maxLength: 1024
          description: Description of the *digital content* identified by the **ISCC**. **Used
            as input for ISCC Meta-Code generation**. Any user presentable text string (including
            Markdown text) indicative of the identity  of the referent may be used.
        metadata:
          type: object
          description: Descriptive, industry-sector or use-case specific structured JSON or
            JSON-LD metadata. Used as sole input for Meta-Code and Meta-Hash generation if
            supplied.
          example:
            custom_field: custom_value
        creator:
          type: string
          description: An entity primarily responsible for making the resource.
          example: Joanne K. Rowling
        license:
          type: string
          format: uri
          description: URI of license for the identified *digital content*. **Supports URI
            template `{iscc-id}`**.
          example: https://example.com/license-terms-for-this-item
        acquire:
          type: string
          format: uri
          description: This field must contain a valid URL referring to a page showing information
            about how one can acquire a license for the item. This may be a page of a web
            shop or NFT marketplace ready for providing a license. **Supports URI template
            `{iscc-id}`**.
          example: https://example.com/buy-license-for-item-here
        credit:
          type: string
          description: A line of text that you expect users of the image (such as Google Images)
            to display alongside the image.
          example: Frank Farian - Getty Images
        rights:
          type: string
          description: Contains any necessary copyright notice and should identify the current
            owner of the copyright of this work with associated intellectual property rights.
          example: © Copyright 2022 ISCC Foundation - www.iscc.codes
    Iscc-response:
      title: iscc-response
      type: object
      description: Result of ISCC Processing
      properties:
        '@context':
          type: string
          format: uri
          default: http://purl.org/iscc/context
          description: The [JSON-LD](https://json-ld.org/) Context URI for ISCC metadata.
          readOnly: true
        '@type':
          type: string
          default: CreativeWork
          enum:
          - CreativeWork
          - TextDigitalDocument
          - ImageObject
          - AudioObject
          - VideoObject
          description: The type of digital content according to schema.org classes (TextDigitalDocument,
            ImageObject, AudioObject, VideoObject).
          readOnly: true
        $schema:
          type: string
          format: uri
          default: http://purl.org/iscc/schema
          description: The [JSON Schema](https://json-schema.org/) URI for ISCC metadata.
          readOnly: true
        iscc:
          type: string
          description: An **ISCC-CODE** in canonical representation. This is the minimal required
            field for a valid ISCC Metadata object.
          example: ISCC:KACYPXW445FTYNJ3CYSXHAFJMA2HUWULUNRFE3BLHRSCXYH2M5AEGQY
          minLength: 15
          maxLength: 73
          pattern: ^ISCC:[A-Z2-7]{10,73}$
        name:
          type: string
          maxLength: 128
          example: The Never Ending Story
          description: The title or name of the intangible creation manifested by the identified
            *digital content*. **Used as input for ISCC Meta-Code generation**.
          x-iscc-context: http://schema.org/name
          x-iscc-schema-doc: The name of the item.
          x-iscc-embed: Use `Iptc.Application2.Headline` and `Xmp.photoshop.Headline` for
            image embedding
        description:
          type: string
          example: a 1984 fantasy film co-written and directed by *Wolfgang Petersen*
          maxLength: 1024
          description: Description of the *digital content* identified by the **ISCC**. **Used
            as input for ISCC Meta-Code generation**. Any user presentable text string (including
            Markdown text) indicative of the identity  of the referent may be used.
          x-iscc-context: http://schema.org/disambiguatingDescription
          x-iscc-schema-doc: A sub property of description. A short description of the item
            used to disambiguate from other, similar items. Information from other properties
            (in particular, name) may be necessary for the description to be useful for disambiguation.
          x-iscc-embed: Use `Exif.Image.ImageDescription`, `Iptc.Application2.Caption` and
            `Xmp.dc.description` for image embedding.
        metadata:
          type: object
          description: Structured JSON or JSON-LD metadata. Used as sole input for Meta-Code
            and Meta-Hash generation if supplied.
          example:
            custom_field: custom_value
          x-iscc-context: http://purl.org/iscc/terms/#metadata
        creator:
          type: string
          description: An entity primarily responsible for making the resource.
          example: Joanne K. Rowling
          x-iscc-context: http://schema.org/creator
          x-iscc-schema-doc: The creator/author of this CreativeWork. This is the same as
            the Author property for CreativeWork.
          x-iscc-embed: Use `Exif.Image.Artist`, `Iptc.Application2.Byline` and `Xmp.dc.creator`
            for emedding this field into image metadata.
        license:
          type: string
          format: uri
          description: URI of license for the identified *digital content*. **Supports URI
            template `{iscc-id}`**.
          example: https://example.com/license-terms-for-this-item
          x-iscc-context: http://schema.org/license
          x-iscc-schema-doc: A license document that applies to this content, typically indicated
            by URL.
          x-iscc-embed: Use `Xmp.xmpRights.WebStatement` for embedding as image metadata.
        acquire:
          type: string
          format: uri
          description: This field must contain a valid URL referring to a page showing information
            about how one can acquire a license for the item. This may be a page of a web
            shop or NFT marketplace ready for providing a license. **Supports URI template
            `{iscc-id}`**.
          example: https://example.com/buy-license-for-item-here
          x-iscc-context: http://schema.org/acquireLicensePage
          x-iscc-schema-doc: Indicates a page documenting how licenses can be purchased or
            otherwise acquired, for the current item.
          x-iscc-embed: Use `Xmp.plus.Licensor[1]/plus:LicensorURL` for embedding in images.
        credit:
          type: string
          description: A line of text that you expect users of the image (such as Google Images)
            to display alongside the image.
          example: Frank Farian - Getty Images
          x-iscc-context: http://schema.org/creditText
          x-iscc-schema-doc: Text that can be used to credit person(s) and/or organization(s)
            associated with a published Creative Work.
          x-iscc-embed: Use `Iptc.Application2.Credit` and `Xmp.photoshop.Credit` for metadata
            embedding.
        rights:
          type: string
          description: Contains any necessary copyright notice and should identify the current
            owner of the copyright of this work with associated intellectual property rights.
          example: © Copyright 2022 ISCC Foundation - www.iscc.codes
          x-iscc-context: http://schema.org/copyrightNotice
          x-iscc-schema-doc: Text of a notice appropriate for describing the copyright aspects
            of this Creative Work, ideally indicating the owner of the copyright for the Work.
          x-iscc-embed: Use `Exif.Image.Copyright`, `Iptc.Application2.Copyright` and `Xmp.dc.rights`
            for embedding.
        preview:
          type: string
          format: uri
          description: URI for a small user-presentable thumbnail image that serves as a preview
            of the *digital content*. The URI may be a Data-URL [RFC2397](https://datatracker.ietf.org/doc/html/rfc2397)
          example: https://picsum.photos/200/300.jpg
          x-iscc-context: http://schema.org/image
          x-iscc-schema-doc: An image of the item. This can be a URL or a fully described
            ImageObject.
        content:
          description: URI of the *digital content* that was used to create this ISCC.
          type: string
          format: uri
          x-iscc-context: http://schema.org/contentUrl
          x-iscc-schema-doc: Actual bytes of the media object, for example the image file
            or video file.
        created:
          description: Datetime the ISCC was created for the item.
          type: string
          format: date-time
          x-iscc-context: http://schema.org/dateCreated
          x-iscc-schema-doc: The date on which the CreativeWork was created or the item was
            added to a DataFeed.
          readOnly: true
        filename:
          type: string
          description: Filename of the referenced **digital content** (automatically used
            as fallback if the `name` field was not specified for ISCC processing)
          x-iscc-context: http://purl.org/iscc/terms/#filename
          readOnly: true
        filesize:
          type: integer
          description: File size of media asset in number of bytes.
          example: somefile.jpg
          x-iscc-context: http://schema.org/fileSize
          x-iscc-schema-doc: Size of the application / package (e.g. 18MB). In the absence
            of a unit (MB, KB etc.), KB will be assumed.
          readOnly: true
        mediatype:
          type: string
          description: An [IANA Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)
            (MIME type)
          example: image/png
          x-iscc-context: http://schema.org/encodingFormat
          x-iscc-schema-doc: Media type typically expressed using a MIME format (see IANA
            site and MDN reference) e.g. application/zip for a SoftwareApplication binary,
            audio/mpeg for .mp3 etc.). In cases where a CreativeWork has several media type
            representations, encoding can be used to indicate each MediaObject alongside particular
            encodingFormat information. Unregistered or niche encoding and file formats can
            be indicated instead via the most appropriate URL, e.g. defining Web page or a
            Wikipedia/Wikidata entry.
          readOnly: true
        duration:
          type: number
          example: 60.251
          description: Duration of audio-visual media in secondes.
          x-iscc-context: http://schema.org/duration
          x-iscc-schema-doc: The duration of the item (movie, audio recording, event, etc.)
            in [ISO 8601 date format](https://en.wikipedia.org/wiki/ISO_8601).
          format: float
          readOnly: true
        fps:
          type: number
          description: Frames per second of video assets.
          format: float
          example: 24
          x-iscc-context: http://purl.org/iscc/terms/#fps
          minimum: 1
          readOnly: true
        width:
          type: integer
          description: Width of visual media in number of pixels.
          format: int32
          example: 640
          x-iscc-context: http://purl.org/iscc/terms/#width
          readOnly: true
        height:
          type: integer
          description: Height of visual media in number of pixels.
          format: int32
          example: 480
          minimum: 1
          x-iscc-context: http://purl.org/iscc/terms/#height
          readOnly: true
        characters:
          type: integer
          description: Number of text characters (code points after Unicode normalization)
          example: 55689
          x-iscc-context: http://purl.org/iscc/terms/#characters
          readOnly: true
        pages:
          type: integer
          description: Number of pages (for paged documents only)
          example: 77
          x-iscc-context: http://schema.org/numberOfPages
          x-iscc-schema-doc: The number of pages in the book.
          readOnly: true
        language:
          description: Language(s) of content [BCP 47](https://tools.ietf.org/search/bcp47).
          example: en-US
          oneOf:
          - type: string
          - type: array
            items:
            - type: string
          x-iscc-context: http://schema.org/inLanguage
          x-iscc-schema-doc: The language of the content or performance or used in an action.
            Please use one of the language codes from the [IETF BCP 47 standard](https://www.rfc-editor.org/info/bcp47).
            See also [availableLanguage](https://schema.org/availableLanguage).
        features:
          type: array
          description: Granular features of the *digital content*.
          x-iscc-context: http://purl.org/iscc/terms/#features
          items:
            type: object
          readOnly: true
        generator:
          type: string
          description: Name and version of the software that generated the ISCC
          example: ISCC Generator Service - v1.5.0
          readOnly: true
        tophash:
          type: string
          minLength: 40
          example: bdyqnosmb56tqudeibogyygmf2b25xs7wpg4zux4zcts2v6llqmnj4ja
          description: A [Multihash](https://multiformats.io/multihash/) of the concatenation
            (binding) of metahash and datahash (default blake3).
          x-iscc-context: http://purl.org/iscc/terms/#tophash
          readOnly: true
        metahash:
          type: string
          minLength: 40
          example: bdyqed6bziei6w4j2eilfyrwjbk4pb7mtthesakh5nuuisrfsh72365q
          description: A [Multihash](https://multiformats.io/multihash/) of the supplied metadata
            (default blake3). The hash is created from `name` and `description` fields or
            `metadata` if supplied. For deterministic results [JSC RFC5452](https://datatracker.ietf.org/doc/html/rfc8785)
            canonicalization is applied to `metadata` before hashing if it is a JSON object.
          x-iscc-context: http://purl.org/iscc/terms/#metahash
          readOnly: true
        datahash:
          type: string
          minLength: 40
          example: bdyqk6e2jxh27tingubae32rw3teutg6lexe23qisw7gjve6k4qpteyq
          description: A [Multihash](https://multiformats.io/multihash/) of the *digital content*
            (default blake3).
          x-iscc-context: http://purl.org/iscc/terms/#datahash
          readOnly: true
    Nft:
      title: nft
      type: object
      description: An ISCC NFT package to be used for NFT minting
      properties:
        iscc:
          type: string
          description: The ISCC-ID or ISCC-CODE for which to create an NFT Package
          example: ISCC:MEADJVWXP67HW7NI
          writeOnly: true
        iscc_code:
          type: string
          description: ISCC-CODE to be passed to the ISCC declaration contract.
          example: ISCC:KQDZJFP6WBM3IIFZ7CRXCNDCNUU3ZEWGL5HAKHNMYHLN2WULPN3ZFHJO7AUS6VQQVM7Q
          readOnly: true
        token_id:
          type: string
          description: Token-ID to be passed to the NFT minting contract. (The Token-ID is
            an integer representation (uint256) of the `ipfs_metadata_cid` without the static
            CID prefix.
          example: '24264217585278480942562880083667472973488514177954865383155936279336351816001166239115842587'
          pattern: ^(0|[1-9][0-9]*)$
          readOnly: true
        ipfs_metadata_cid:
          type: string
          description: 'The IPFS CIDv1 of the NFT Metadata '
          example: bafkreiez43ignrqddzxy5faretffft3zbx43of4jxarbvav6jrqdlyfvpm
          readOnly: true
        ipfs_metadata_payload:
          type: string
          description: The base64-encoded payload of the metadata.
          format: byte
          example: ew0KICAidmVyc2lvbiI6ICIwLTAtMCIsDQogICJpc2NjIjogIktFRFpLTkRFWlFWQ0tXSEtWNDdOQUE0RzZGRUg1UVlPR002SVNGSjNZVFEzUFJUUVhORkY3TVkiLA0KICAidGl0bGUiOiAiSVNDQyBMb2dvIiwNCiAgImZpbGVuYW1lIjogImlzY2MtbG9nby5wbmciLA0KICAiZmlsZXNpemUiOiAyODkyMiwNCiAgIm1lZGlhdHlwZSI6ICJpbWFnZS9wbmciLA0KICAidG9waGFzaCI6ICJkYzgyZWIzMjk4MzAyZGVhYjIyOTFhNzBkMDcxYTc1YWNmYjJmZTA2YTg0OWExZGNiYTU0YWMyMGYxYTI4Y2ZiIiwNCiAgIm1ldGFoYXNoIjogIjJhYjEzNjJhOTYyNDUzOTIzMzM3YTRhYTA1NTQ1N2U4Y2Q2ZGQ5MjVmNjIwYThlNzA2YmJjNmYzZDdjNTNkYmMiLA0KICAiZGF0YWhhc2giOiAiZTFiN2M2NzBiYjRhNWZiM2QzZjA1Zjc4NTRiMThiOTBkMDg1NmEzYmNlNDA3ZjM5ZGM4YzY5NjJlNTE3MWM3ZCIsDQogICJnbXQiOiAiaW1hZ2UiLA0KICAid2lkdGgiOiAxMTgyLA0KICAiaGVpZ2h0IjogMzczDQp9DQo=
          readOnly: true
        ipfs_image_cid:
          type: string
          description: The IPFS CIDv1 of the NFT image.
          example: bafybeihcck6iocb2steuf4zwq53nfyce34xamke5za7gaq2qqoshmgab6u
          readOnly: true
        ipfs_image_uri:
          type: string
          description: The URI to the NFT image (either a local relative URL or a Data-URI
            depending on server configuration)
          format: uri
          example: /media/d8541cb6f21e952c2c532535c77ac145c09ee1e4184e7f4b19d07c836f83d16a
          readOnly: true
  examples: {}
