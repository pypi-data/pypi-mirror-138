# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.14.1
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_main_window(object):
    def setupUi(self, main_window):
        main_window.setObjectName("main_window")
        main_window.resize(853, 408)
        self.centralwidget = QtWidgets.QWidget(main_window)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.tree = QtWidgets.QTreeWidget(self.centralwidget)
        self.tree.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.tree.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tree.setAlternatingRowColors(True)
        self.tree.setSelectionMode(QtWidgets.QAbstractItemView.NoSelection)
        self.tree.setAnimated(True)
        self.tree.setColumnCount(2)
        self.tree.setObjectName("tree")
        self.tree.headerItem().setText(0, "1")
        self.tree.headerItem().setText(1, "2")
        self.tree.header().setDefaultSectionSize(400)
        self.tree.header().setSortIndicatorShown(True)
        self.verticalLayout_2.addWidget(self.tree)
        self.copia_local_nome = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.copia_local_nome.setFont(font)
        self.copia_local_nome.setTextFormat(QtCore.Qt.RichText)
        self.copia_local_nome.setObjectName("copia_local_nome")
        self.verticalLayout_2.addWidget(self.copia_local_nome)
        self.copia_local_ultatu = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.copia_local_ultatu.setFont(font)
        self.copia_local_ultatu.setText("")
        self.copia_local_ultatu.setTextFormat(QtCore.Qt.RichText)
        self.copia_local_ultatu.setObjectName("copia_local_ultatu")
        self.verticalLayout_2.addWidget(self.copia_local_ultatu)
        main_window.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(main_window)
        self.statusbar.setObjectName("statusbar")
        main_window.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(main_window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 853, 21))
        self.menubar.setObjectName("menubar")
        self.menu_file = QtWidgets.QMenu(self.menubar)
        self.menu_file.setObjectName("menu_file")
        self.menu_tools = QtWidgets.QMenu(self.menubar)
        self.menu_tools.setObjectName("menu_tools")
        self.menu_tools_panels = QtWidgets.QMenu(self.menu_tools)
        self.menu_tools_panels.setObjectName("menu_tools_panels")
        self.menu_help = QtWidgets.QMenu(self.menubar)
        self.menu_help.setObjectName("menu_help")
        self.menu_sync = QtWidgets.QMenu(self.menubar)
        self.menu_sync.setObjectName("menu_sync")
        main_window.setMenuBar(self.menubar)
        self.menu_file_new = QtWidgets.QAction(main_window)
        self.menu_file_new.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.menu_file_new.setObjectName("menu_file_new")
        self.menu_file_open = QtWidgets.QAction(main_window)
        self.menu_file_open.setObjectName("menu_file_open")
        self.menu_file_close = QtWidgets.QAction(main_window)
        self.menu_file_close.setObjectName("menu_file_close")
        self.actionAtualizar = QtWidgets.QAction(main_window)
        self.actionAtualizar.setObjectName("actionAtualizar")
        self.actionExtrairMetadados = QtWidgets.QAction(main_window)
        self.actionExtrairMetadados.setObjectName("actionExtrairMetadados")
        self.menu_tools_csv = QtWidgets.QAction(main_window)
        self.menu_tools_csv.setCheckable(True)
        self.menu_tools_csv.setObjectName("menu_tools_csv")
        self.menu_sync_verify = QtWidgets.QAction(main_window)
        self.menu_sync_verify.setObjectName("menu_sync_verify")
        self.actionAtualizar_2 = QtWidgets.QAction(main_window)
        self.actionAtualizar_2.setObjectName("actionAtualizar_2")
        self.menu_file_quit = QtWidgets.QAction(main_window)
        self.menu_file_quit.setMenuRole(QtWidgets.QAction.QuitRole)
        self.menu_file_quit.setObjectName("menu_file_quit")
        self.actionSobre = QtWidgets.QAction(main_window)
        self.actionSobre.setObjectName("actionSobre")
        self.actionAtualizar_3 = QtWidgets.QAction(main_window)
        self.actionAtualizar_3.setObjectName("actionAtualizar_3")
        self.menu_sync_update = QtWidgets.QAction(main_window)
        self.menu_sync_update.setObjectName("menu_sync_update")
        self.menu_help_show = QtWidgets.QAction(main_window)
        self.menu_help_show.setObjectName("menu_help_show")
        self.menu_tools_panels_new = QtWidgets.QAction(main_window)
        self.menu_tools_panels_new.setObjectName("menu_tools_panels_new")
        self.menu_tools_panels_open = QtWidgets.QAction(main_window)
        self.menu_tools_panels_open.setObjectName("menu_tools_panels_open")
        self.menu_file.addAction(self.menu_file_new)
        self.menu_file.addAction(self.menu_file_open)
        self.menu_file.addAction(self.menu_file_close)
        self.menu_file.addSeparator()
        self.menu_file.addAction(self.menu_file_quit)
        self.menu_tools_panels.addAction(self.menu_tools_panels_new)
        self.menu_tools_panels.addAction(self.menu_tools_panels_open)
        self.menu_tools.addAction(self.menu_tools_csv)
        self.menu_tools.addAction(self.menu_tools_panels.menuAction())
        self.menu_help.addAction(self.menu_help_show)
        self.menu_sync.addAction(self.menu_sync_verify)
        self.menu_sync.addAction(self.menu_sync_update)
        self.menubar.addAction(self.menu_file.menuAction())
        self.menubar.addAction(self.menu_sync.menuAction())
        self.menubar.addAction(self.menu_tools.menuAction())
        self.menubar.addAction(self.menu_help.menuAction())

        self.retranslateUi(main_window)
        QtCore.QMetaObject.connectSlotsByName(main_window)

    def retranslateUi(self, main_window):
        _translate = QtCore.QCoreApplication.translate
        main_window.setWindowTitle(_translate("main_window", "Pynad - Pesquisa Nacional por Amostra de Domicílios Contínua"))
        self.tree.setSortingEnabled(True)
        self.copia_local_nome.setText(_translate("main_window", "Nenhum arquivo aberto"))
        self.menu_file.setTitle(_translate("main_window", "&Arquivo"))
        self.menu_tools.setTitle(_translate("main_window", "&Ferramentas"))
        self.menu_tools_panels.setTitle(_translate("main_window", "&Painéis"))
        self.menu_help.setTitle(_translate("main_window", "Ajuda"))
        self.menu_sync.setTitle(_translate("main_window", "&Sincronizar"))
        self.menu_file_new.setText(_translate("main_window", "&Novo..."))
        self.menu_file_new.setToolTip(_translate("main_window", "Criar um arquivo ZIP para armazenar uma cópia local dos arquivos da Pnadc"))
        self.menu_file_new.setStatusTip(_translate("main_window", "Criar um arquivo ZIP para armazenar uma cópia local dos arquivos da Pnadc"))
        self.menu_file_open.setText(_translate("main_window", "&Abrir..."))
        self.menu_file_open.setToolTip(_translate("main_window", "Abrir um arquivo ZIP com uma cópia local dos arquivos da Pnadc"))
        self.menu_file_open.setStatusTip(_translate("main_window", "Abrir um arquivo ZIP com uma cópia local dos arquivos da Pnadc"))
        self.menu_file_close.setText(_translate("main_window", "&Fechar"))
        self.menu_file_close.setToolTip(_translate("main_window", "Fechar a cópia local"))
        self.menu_file_close.setStatusTip(_translate("main_window", "Fechar a cópia local"))
        self.actionAtualizar.setText(_translate("main_window", "Atualizar..."))
        self.actionExtrairMetadados.setText(_translate("main_window", "&Exportar metadados..."))
        self.menu_tools_csv.setText(_translate("main_window", "&Microdados em CSV"))
        self.menu_tools_csv.setToolTip(_translate("main_window", "Incluir microdados convertidos para o formato CSV"))
        self.menu_tools_csv.setStatusTip(_translate("main_window", "Incluir microdados convertidos para o formato CSV"))
        self.menu_sync_verify.setText(_translate("main_window", "&Verificar..."))
        self.menu_sync_verify.setToolTip(_translate("main_window", "Verificar arquivos da Pnadc no servidor do IBGE"))
        self.menu_sync_verify.setStatusTip(_translate("main_window", "Verificar arquivos da Pnadc no servidor do IBGE"))
        self.actionAtualizar_2.setText(_translate("main_window", "&Atualizar"))
        self.actionAtualizar_2.setStatusTip(_translate("main_window", "Atualizar os arquivos da cópia local"))
        self.menu_file_quit.setText(_translate("main_window", "&Sair"))
        self.menu_file_quit.setToolTip(_translate("main_window", "Encerrar o aplicativo"))
        self.menu_file_quit.setStatusTip(_translate("main_window", "Encerrar o aplicativo"))
        self.actionSobre.setText(_translate("main_window", "&Sobre..."))
        self.actionSobre.setStatusTip(_translate("main_window", "Créditos"))
        self.actionAtualizar_3.setText(_translate("main_window", "&Atualizar..."))
        self.actionAtualizar_3.setStatusTip(_translate("main_window", "Atualizar os arquivos da cópia local"))
        self.menu_sync_update.setText(_translate("main_window", "&Atualizar..."))
        self.menu_sync_update.setToolTip(_translate("main_window", "Baixar e/ou remover arquivos para sincronizar a cópia local"))
        self.menu_sync_update.setStatusTip(_translate("main_window", "Baixar e/ou remover arquivos para sincronizar a cópia local"))
        self.menu_help_show.setText(_translate("main_window", "&Ajuda"))
        self.menu_help_show.setToolTip(_translate("main_window", "Exibe a ajuda do aplicativo"))
        self.menu_help_show.setStatusTip(_translate("main_window", "Exibe a ajuda do aplicativo"))
        self.menu_tools_panels_new.setText(_translate("main_window", "&Novo..."))
        self.menu_tools_panels_new.setToolTip(_translate("main_window", "Criar um arquivo ZIP para armazenar os arquivos de microdados de painéis desta cópia local da Pnadc"))
        self.menu_tools_panels_new.setStatusTip(_translate("main_window", "Criar um arquivo ZIP para armazenar os arquivos de microdados de painéis desta cópia local da Pnadc"))
        self.menu_tools_panels_open.setText(_translate("main_window", "&Abrir..."))
        self.menu_tools_panels_open.setIconText(_translate("main_window", "Abrir"))
        self.menu_tools_panels_open.setToolTip(_translate("main_window", "Abrir um arquivo ZIP com arquivos de microdados de painéis para atualizar segundo esta cópia local da Pnadc"))
        self.menu_tools_panels_open.setStatusTip(_translate("main_window", "Abrir um arquivo ZIP com arquivos de microdados de painéis para atualizar segundo esta cópia local da Pnadc"))
