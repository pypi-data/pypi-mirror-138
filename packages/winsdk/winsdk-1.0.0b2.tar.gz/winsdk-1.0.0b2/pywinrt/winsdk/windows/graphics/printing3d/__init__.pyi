# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.2

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

try:
    import winsdk.windows.foundation.numerics
except Exception:
    pass

try:
    import winsdk.windows.storage.streams
except Exception:
    pass

try:
    import winsdk.windows.ui
except Exception:
    pass

class Print3DTaskCompletion(enum.IntEnum):
    ABANDONED = 0
    CANCELED = 1
    FAILED = 2
    SLICING = 3
    SUBMITTED = 4

class Print3DTaskDetail(enum.IntEnum):
    UNKNOWN = 0
    MODEL_EXCEEDS_PRINT_BED = 1
    UPLOAD_FAILED = 2
    INVALID_MATERIAL_SELECTION = 3
    INVALID_MODEL = 4
    MODEL_NOT_MANIFOLD = 5
    INVALID_PRINT_TICKET = 6

class Printing3DBufferFormat(enum.IntEnum):
    UNKNOWN = 0
    R32_G32_B32_A32_FLOAT = 2
    R32_G32_B32_A32_UINT = 3
    R32_G32_B32_FLOAT = 6
    R32_G32_B32_UINT = 7
    PRINTING3_D_DOUBLE = 500
    PRINTING3_D_UINT = 501

class Printing3DMeshVerificationMode(enum.IntEnum):
    FIND_FIRST_ERROR = 0
    FIND_ALL_ERRORS = 1

class Printing3DModelUnit(enum.IntEnum):
    METER = 0
    MICRON = 1
    MILLIMETER = 2
    CENTIMETER = 3
    INCH = 4
    FOOT = 5

class Printing3DObjectType(enum.IntEnum):
    MODEL = 0
    SUPPORT = 1
    OTHERS = 2

class Printing3DPackageCompression(enum.IntEnum):
    LOW = 0
    MEDIUM = 1
    HIGH = 2

class Printing3DTextureEdgeBehavior(enum.IntEnum):
    NONE = 0
    WRAP = 1
    MIRROR = 2
    CLAMP = 3

class Printing3DBufferDescription:
    format: Printing3DBufferFormat
    stride: _winrt.UInt32
    def __init__(self, format: Printing3DBufferFormat, stride: _winrt.UInt32) -> None: ...

class Print3DManager(_winrt.Object):
    @staticmethod
    def _from(obj: _winrt.Object) -> Print3DManager: ...
    @typing.overload
    @staticmethod
    def get_for_current_view() -> Print3DManager: ...
    @typing.overload
    @staticmethod
    def show_print_u_i_async() -> winsdk.windows.foundation.IAsyncOperation[_winrt.Boolean]: ...
    @typing.overload
    def add_task_requested(self, event_handler: winsdk.windows.foundation.TypedEventHandler[Print3DManager, Print3DTaskRequestedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken: ...
    @typing.overload
    def remove_task_requested(self, token: winsdk.windows.foundation.EventRegistrationToken) -> None: ...

class Print3DTask(_winrt.Object):
    source: Printing3D3MFPackage
    @staticmethod
    def _from(obj: _winrt.Object) -> Print3DTask: ...
    @typing.overload
    def add_completed(self, event_handler: winsdk.windows.foundation.TypedEventHandler[Print3DTask, Print3DTaskCompletedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken: ...
    @typing.overload
    def remove_completed(self, event_cookie: winsdk.windows.foundation.EventRegistrationToken) -> None: ...
    @typing.overload
    def add_source_changed(self, event_handler: winsdk.windows.foundation.TypedEventHandler[Print3DTask, Print3DTaskSourceChangedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken: ...
    @typing.overload
    def remove_source_changed(self, event_cookie: winsdk.windows.foundation.EventRegistrationToken) -> None: ...
    @typing.overload
    def add_submitting(self, event_handler: winsdk.windows.foundation.TypedEventHandler[Print3DTask, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken: ...
    @typing.overload
    def remove_submitting(self, event_cookie: winsdk.windows.foundation.EventRegistrationToken) -> None: ...

class Print3DTaskCompletedEventArgs(_winrt.Object):
    completion: Print3DTaskCompletion
    extended_status: Print3DTaskDetail
    @staticmethod
    def _from(obj: _winrt.Object) -> Print3DTaskCompletedEventArgs: ...

class Print3DTaskRequest(_winrt.Object):
    @staticmethod
    def _from(obj: _winrt.Object) -> Print3DTaskRequest: ...
    @typing.overload
    def create_task(self, title: str, printer_id: str, handler: Print3DTaskSourceRequestedHandler) -> Print3DTask: ...

class Print3DTaskRequestedEventArgs(_winrt.Object):
    request: Print3DTaskRequest
    @staticmethod
    def _from(obj: _winrt.Object) -> Print3DTaskRequestedEventArgs: ...

class Print3DTaskSourceChangedEventArgs(_winrt.Object):
    source: Printing3D3MFPackage
    @staticmethod
    def _from(obj: _winrt.Object) -> Print3DTaskSourceChangedEventArgs: ...

class Print3DTaskSourceRequestedArgs(_winrt.Object):
    @staticmethod
    def _from(obj: _winrt.Object) -> Print3DTaskSourceRequestedArgs: ...
    @typing.overload
    def set_source(self, source: Printing3D3MFPackage) -> None: ...

class Printing3D3MFPackage(_winrt.Object):
    thumbnail: Printing3DTextureResource
    print_ticket: winsdk.windows.storage.streams.IRandomAccessStream
    model_part: winsdk.windows.storage.streams.IRandomAccessStream
    textures: winsdk.windows.foundation.collections.IVector[Printing3DTextureResource]
    compression: Printing3DPackageCompression
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3D3MFPackage: ...
    @typing.overload
    def __init__(self) -> None: ...
    @typing.overload
    @staticmethod
    def load_async(value: winsdk.windows.storage.streams.IRandomAccessStream) -> winsdk.windows.foundation.IAsyncOperation[Printing3D3MFPackage]: ...
    @typing.overload
    def load_model_from_package_async(self, value: winsdk.windows.storage.streams.IRandomAccessStream) -> winsdk.windows.foundation.IAsyncOperation[Printing3DModel]: ...
    @typing.overload
    def save_async(self) -> winsdk.windows.foundation.IAsyncOperation[winsdk.windows.storage.streams.IRandomAccessStream]: ...
    @typing.overload
    def save_model_to_package_async(self, value: Printing3DModel) -> winsdk.windows.foundation.IAsyncAction: ...

class Printing3DBaseMaterial(_winrt.Object):
    name: str
    color: Printing3DColorMaterial
    abs: str
    pla: str
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DBaseMaterial: ...
    @typing.overload
    def __init__(self) -> None: ...

class Printing3DBaseMaterialGroup(_winrt.Object):
    bases: winsdk.windows.foundation.collections.IVector[Printing3DBaseMaterial]
    material_group_id: _winrt.UInt32
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DBaseMaterialGroup: ...
    @typing.overload
    def __init__(self, material_group_id: _winrt.UInt32) -> None: ...

class Printing3DColorMaterial(_winrt.Object):
    value: _winrt.UInt32
    color: winsdk.windows.ui.Color
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DColorMaterial: ...
    @typing.overload
    def __init__(self) -> None: ...

class Printing3DColorMaterialGroup(_winrt.Object):
    colors: winsdk.windows.foundation.collections.IVector[Printing3DColorMaterial]
    material_group_id: _winrt.UInt32
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DColorMaterialGroup: ...
    @typing.overload
    def __init__(self, material_group_id: _winrt.UInt32) -> None: ...

class Printing3DComponent(_winrt.Object):
    type: Printing3DObjectType
    thumbnail: Printing3DTextureResource
    part_number: str
    name: str
    mesh: Printing3DMesh
    components: winsdk.windows.foundation.collections.IVector[Printing3DComponentWithMatrix]
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DComponent: ...
    @typing.overload
    def __init__(self) -> None: ...

class Printing3DComponentWithMatrix(_winrt.Object):
    matrix: winsdk.windows.foundation.numerics.Matrix4x4
    component: Printing3DComponent
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DComponentWithMatrix: ...
    @typing.overload
    def __init__(self) -> None: ...

class Printing3DCompositeMaterial(_winrt.Object):
    values: winsdk.windows.foundation.collections.IVector[_winrt.Double]
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DCompositeMaterial: ...
    @typing.overload
    def __init__(self) -> None: ...

class Printing3DCompositeMaterialGroup(_winrt.Object):
    composites: winsdk.windows.foundation.collections.IVector[Printing3DCompositeMaterial]
    material_group_id: _winrt.UInt32
    material_indices: winsdk.windows.foundation.collections.IVector[_winrt.UInt32]
    base_material_group: Printing3DBaseMaterialGroup
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DCompositeMaterialGroup: ...
    @typing.overload
    def __init__(self, material_group_id: _winrt.UInt32) -> None: ...

class Printing3DFaceReductionOptions(_winrt.Object):
    target_triangle_count: _winrt.UInt32
    max_reduction_area: _winrt.Double
    max_edge_length: _winrt.Double
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DFaceReductionOptions: ...
    @typing.overload
    def __init__(self) -> None: ...

class Printing3DMaterial(_winrt.Object):
    base_groups: winsdk.windows.foundation.collections.IVector[Printing3DBaseMaterialGroup]
    color_groups: winsdk.windows.foundation.collections.IVector[Printing3DColorMaterialGroup]
    composite_groups: winsdk.windows.foundation.collections.IVector[Printing3DCompositeMaterialGroup]
    multiple_property_groups: winsdk.windows.foundation.collections.IVector[Printing3DMultiplePropertyMaterialGroup]
    texture2_coord_groups: winsdk.windows.foundation.collections.IVector[Printing3DTexture2CoordMaterialGroup]
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DMaterial: ...
    @typing.overload
    def __init__(self) -> None: ...

class Printing3DMesh(_winrt.Object):
    vertex_positions_description: Printing3DBufferDescription
    vertex_normals_description: Printing3DBufferDescription
    vertex_count: _winrt.UInt32
    triangle_material_indices_description: Printing3DBufferDescription
    triangle_indices_description: Printing3DBufferDescription
    index_count: _winrt.UInt32
    buffer_description_set: winsdk.windows.foundation.collections.IPropertySet
    buffer_set: winsdk.windows.foundation.collections.IPropertySet
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DMesh: ...
    @typing.overload
    def __init__(self) -> None: ...
    @typing.overload
    def create_triangle_indices(self, value: _winrt.UInt32) -> None: ...
    @typing.overload
    def create_triangle_material_indices(self, value: _winrt.UInt32) -> None: ...
    @typing.overload
    def create_vertex_normals(self, value: _winrt.UInt32) -> None: ...
    @typing.overload
    def create_vertex_positions(self, value: _winrt.UInt32) -> None: ...
    @typing.overload
    def get_triangle_indices(self) -> winsdk.windows.storage.streams.IBuffer: ...
    @typing.overload
    def get_triangle_material_indices(self) -> winsdk.windows.storage.streams.IBuffer: ...
    @typing.overload
    def get_vertex_normals(self) -> winsdk.windows.storage.streams.IBuffer: ...
    @typing.overload
    def get_vertex_positions(self) -> winsdk.windows.storage.streams.IBuffer: ...
    @typing.overload
    def verify_async(self, value: Printing3DMeshVerificationMode) -> winsdk.windows.foundation.IAsyncOperation[Printing3DMeshVerificationResult]: ...

class Printing3DMeshVerificationResult(_winrt.Object):
    is_valid: _winrt.Boolean
    nonmanifold_triangles: winsdk.windows.foundation.collections.IVectorView[_winrt.UInt32]
    reversed_normal_triangles: winsdk.windows.foundation.collections.IVectorView[_winrt.UInt32]
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DMeshVerificationResult: ...

class Printing3DModel(_winrt.Object):
    version: str
    unit: Printing3DModelUnit
    material: Printing3DMaterial
    build: Printing3DComponent
    components: winsdk.windows.foundation.collections.IVector[Printing3DComponent]
    meshes: winsdk.windows.foundation.collections.IVector[Printing3DMesh]
    metadata: winsdk.windows.foundation.collections.IMap[str, str]
    required_extensions: winsdk.windows.foundation.collections.IVector[str]
    textures: winsdk.windows.foundation.collections.IVector[Printing3DModelTexture]
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DModel: ...
    @typing.overload
    def __init__(self) -> None: ...
    @typing.overload
    def clone(self) -> Printing3DModel: ...
    @typing.overload
    def repair_async(self) -> winsdk.windows.foundation.IAsyncAction: ...
    @typing.overload
    def repair_with_progress_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.Boolean, _winrt.Double]: ...
    @typing.overload
    def try_partial_repair_async(self) -> winsdk.windows.foundation.IAsyncOperation[_winrt.Boolean]: ...
    @typing.overload
    def try_partial_repair_async(self, max_wait_time: winsdk.windows.foundation.TimeSpan) -> winsdk.windows.foundation.IAsyncOperation[_winrt.Boolean]: ...
    @typing.overload
    def try_reduce_faces_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.Boolean, _winrt.Double]: ...
    @typing.overload
    def try_reduce_faces_async(self, printing3_d_face_reduction_options: Printing3DFaceReductionOptions) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.Boolean, _winrt.Double]: ...
    @typing.overload
    def try_reduce_faces_async(self, printing3_d_face_reduction_options: Printing3DFaceReductionOptions, max_wait: winsdk.windows.foundation.TimeSpan) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.Boolean, _winrt.Double]: ...

class Printing3DModelTexture(_winrt.Object):
    tile_style_v: Printing3DTextureEdgeBehavior
    tile_style_u: Printing3DTextureEdgeBehavior
    texture_resource: Printing3DTextureResource
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DModelTexture: ...
    @typing.overload
    def __init__(self) -> None: ...

class Printing3DMultiplePropertyMaterial(_winrt.Object):
    material_indices: winsdk.windows.foundation.collections.IVector[_winrt.UInt32]
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DMultiplePropertyMaterial: ...
    @typing.overload
    def __init__(self) -> None: ...

class Printing3DMultiplePropertyMaterialGroup(_winrt.Object):
    material_group_id: _winrt.UInt32
    material_group_indices: winsdk.windows.foundation.collections.IVector[_winrt.UInt32]
    multiple_properties: winsdk.windows.foundation.collections.IVector[Printing3DMultiplePropertyMaterial]
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DMultiplePropertyMaterialGroup: ...
    @typing.overload
    def __init__(self, material_group_id: _winrt.UInt32) -> None: ...

class Printing3DTexture2CoordMaterial(_winrt.Object):
    v: _winrt.Double
    u: _winrt.Double
    texture: Printing3DModelTexture
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DTexture2CoordMaterial: ...
    @typing.overload
    def __init__(self) -> None: ...

class Printing3DTexture2CoordMaterialGroup(_winrt.Object):
    material_group_id: _winrt.UInt32
    texture2_coords: winsdk.windows.foundation.collections.IVector[Printing3DTexture2CoordMaterial]
    texture: Printing3DModelTexture
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DTexture2CoordMaterialGroup: ...
    @typing.overload
    def __init__(self, material_group_id: _winrt.UInt32) -> None: ...

class Printing3DTextureResource(_winrt.Object):
    texture_data: winsdk.windows.storage.streams.IRandomAccessStreamWithContentType
    name: str
    @staticmethod
    def _from(obj: _winrt.Object) -> Printing3DTextureResource: ...
    @typing.overload
    def __init__(self) -> None: ...

Print3DTaskSourceRequestedHandler = typing.Callable[[Print3DTaskSourceRequestedArgs], None]

