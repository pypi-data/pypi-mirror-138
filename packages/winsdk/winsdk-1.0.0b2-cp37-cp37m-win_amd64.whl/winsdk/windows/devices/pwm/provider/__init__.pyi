# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.2

import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

class IPwmControllerProvider(_winrt.Object):
    actual_frequency: _winrt.Double
    max_frequency: _winrt.Double
    min_frequency: _winrt.Double
    pin_count: _winrt.Int32
    @staticmethod
    def _from(obj: _winrt.Object) -> IPwmControllerProvider: ...
    @typing.overload
    def acquire_pin(self, pin: _winrt.Int32) -> None: ...
    @typing.overload
    def disable_pin(self, pin: _winrt.Int32) -> None: ...
    @typing.overload
    def enable_pin(self, pin: _winrt.Int32) -> None: ...
    @typing.overload
    def release_pin(self, pin: _winrt.Int32) -> None: ...
    @typing.overload
    def set_desired_frequency(self, frequency: _winrt.Double) -> _winrt.Double: ...
    @typing.overload
    def set_pulse_parameters(self, pin: _winrt.Int32, duty_cycle: _winrt.Double, invert_polarity: _winrt.Boolean) -> None: ...

class IPwmProvider(_winrt.Object):
    @staticmethod
    def _from(obj: _winrt.Object) -> IPwmProvider: ...
    @typing.overload
    def get_controllers(self) -> winsdk.windows.foundation.collections.IVectorView[IPwmControllerProvider]: ...

