# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.2

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.devices.geolocation
except Exception:
    pass

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

try:
    import winsdk.windows.globalization
except Exception:
    pass

try:
    import winsdk.windows.services.maps
except Exception:
    pass

class LocalLocationFinderStatus(enum.IntEnum):
    SUCCESS = 0
    UNKNOWN_ERROR = 1
    INVALID_CREDENTIALS = 2
    INVALID_CATEGORY = 3
    INVALID_SEARCH_TERM = 4
    INVALID_SEARCH_AREA = 5
    NETWORK_FAILURE = 6
    NOT_SUPPORTED = 7

class LocalCategories(_winrt.Object):
    all: str
    bank_and_credit_unions: str
    eat_drink: str
    hospitals: str
    hotels_and_motels: str
    parking: str
    see_do: str
    shop: str
    @staticmethod
    def _from(obj: _winrt.Object) -> LocalCategories: ...

class LocalLocation(_winrt.Object):
    address: winsdk.windows.services.maps.MapAddress
    data_attribution: str
    description: str
    display_name: str
    identifier: str
    phone_number: str
    point: winsdk.windows.devices.geolocation.Geopoint
    category: str
    hours_of_operation: winsdk.windows.foundation.collections.IVectorView[LocalLocationHoursOfOperationItem]
    rating_info: LocalLocationRatingInfo
    @staticmethod
    def _from(obj: _winrt.Object) -> LocalLocation: ...

class LocalLocationFinder(_winrt.Object):
    @staticmethod
    def _from(obj: _winrt.Object) -> LocalLocationFinder: ...
    @typing.overload
    @staticmethod
    def find_local_locations_async(search_term: str, search_area: winsdk.windows.devices.geolocation.Geocircle, local_category: str, max_results: _winrt.UInt32) -> winsdk.windows.foundation.IAsyncOperation[LocalLocationFinderResult]: ...

class LocalLocationFinderResult(_winrt.Object):
    local_locations: winsdk.windows.foundation.collections.IVectorView[LocalLocation]
    status: LocalLocationFinderStatus
    @staticmethod
    def _from(obj: _winrt.Object) -> LocalLocationFinderResult: ...

class LocalLocationHoursOfOperationItem(_winrt.Object):
    day: winsdk.windows.globalization.DayOfWeek
    span: winsdk.windows.foundation.TimeSpan
    start: winsdk.windows.foundation.TimeSpan
    @staticmethod
    def _from(obj: _winrt.Object) -> LocalLocationHoursOfOperationItem: ...

class LocalLocationRatingInfo(_winrt.Object):
    aggregate_rating: typing.Optional[_winrt.Double]
    provider_identifier: str
    rating_count: typing.Optional[_winrt.Int32]
    @staticmethod
    def _from(obj: _winrt.Object) -> LocalLocationRatingInfo: ...

class PlaceInfoHelper(_winrt.Object):
    @staticmethod
    def _from(obj: _winrt.Object) -> PlaceInfoHelper: ...
    @typing.overload
    @staticmethod
    def create_from_local_location(location: LocalLocation) -> winsdk.windows.services.maps.PlaceInfo: ...

