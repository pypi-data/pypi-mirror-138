# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.2

import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.data.xml.dom
except Exception:
    pass

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

try:
    import winsdk.windows.security.credentials
except Exception:
    pass

try:
    import winsdk.windows.storage.streams
except Exception:
    pass

try:
    import winsdk.windows.web.syndication
except Exception:
    pass

class AtomPubClient(winsdk.windows.web.syndication.ISyndicationClient, _winrt.Object):
    timeout: _winrt.UInt32
    server_credential: winsdk.windows.security.credentials.PasswordCredential
    proxy_credential: winsdk.windows.security.credentials.PasswordCredential
    max_response_buffer_size: _winrt.UInt32
    bypass_cache_on_retrieve: _winrt.Boolean
    @staticmethod
    def _from(obj: _winrt.Object) -> AtomPubClient: ...
    @typing.overload
    def __init__(self, server_credential: winsdk.windows.security.credentials.PasswordCredential) -> None: ...
    @typing.overload
    def __init__(self) -> None: ...
    @typing.overload
    def cancel_async_operations(self) -> None: ...
    @typing.overload
    def create_media_resource_async(self, uri: winsdk.windows.foundation.Uri, media_type: str, description: str, media_stream: winsdk.windows.storage.streams.IInputStream) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.web.syndication.SyndicationItem, winsdk.windows.web.syndication.TransferProgress]: ...
    @typing.overload
    def create_resource_async(self, uri: winsdk.windows.foundation.Uri, description: str, item: winsdk.windows.web.syndication.SyndicationItem) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.web.syndication.SyndicationItem, winsdk.windows.web.syndication.TransferProgress]: ...
    @typing.overload
    def delete_resource_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncActionWithProgress[winsdk.windows.web.syndication.TransferProgress]: ...
    @typing.overload
    def delete_resource_item_async(self, item: winsdk.windows.web.syndication.SyndicationItem) -> winsdk.windows.foundation.IAsyncActionWithProgress[winsdk.windows.web.syndication.TransferProgress]: ...
    @typing.overload
    def retrieve_feed_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.web.syndication.SyndicationFeed, winsdk.windows.web.syndication.RetrievalProgress]: ...
    @typing.overload
    def retrieve_media_resource_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IInputStream, winsdk.windows.web.syndication.RetrievalProgress]: ...
    @typing.overload
    def retrieve_resource_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.web.syndication.SyndicationItem, winsdk.windows.web.syndication.RetrievalProgress]: ...
    @typing.overload
    def retrieve_service_document_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncOperationWithProgress[ServiceDocument, winsdk.windows.web.syndication.RetrievalProgress]: ...
    @typing.overload
    def set_request_header(self, name: str, value: str) -> None: ...
    @typing.overload
    def update_media_resource_async(self, uri: winsdk.windows.foundation.Uri, media_type: str, media_stream: winsdk.windows.storage.streams.IInputStream) -> winsdk.windows.foundation.IAsyncActionWithProgress[winsdk.windows.web.syndication.TransferProgress]: ...
    @typing.overload
    def update_resource_async(self, uri: winsdk.windows.foundation.Uri, item: winsdk.windows.web.syndication.SyndicationItem) -> winsdk.windows.foundation.IAsyncActionWithProgress[winsdk.windows.web.syndication.TransferProgress]: ...
    @typing.overload
    def update_resource_item_async(self, item: winsdk.windows.web.syndication.SyndicationItem) -> winsdk.windows.foundation.IAsyncActionWithProgress[winsdk.windows.web.syndication.TransferProgress]: ...

class ResourceCollection(winsdk.windows.web.syndication.ISyndicationNode, _winrt.Object):
    accepts: winsdk.windows.foundation.collections.IVectorView[str]
    categories: winsdk.windows.foundation.collections.IVectorView[winsdk.windows.web.syndication.SyndicationCategory]
    title: winsdk.windows.web.syndication.ISyndicationText
    uri: winsdk.windows.foundation.Uri
    base_uri: winsdk.windows.foundation.Uri
    node_value: str
    node_namespace: str
    node_name: str
    language: str
    attribute_extensions: winsdk.windows.foundation.collections.IVector[winsdk.windows.web.syndication.SyndicationAttribute]
    element_extensions: winsdk.windows.foundation.collections.IVector[winsdk.windows.web.syndication.ISyndicationNode]
    @staticmethod
    def _from(obj: _winrt.Object) -> ResourceCollection: ...
    @typing.overload
    def get_xml_document(self, format: winsdk.windows.web.syndication.SyndicationFormat) -> winsdk.windows.data.xml.dom.XmlDocument: ...

class ServiceDocument(winsdk.windows.web.syndication.ISyndicationNode, _winrt.Object):
    workspaces: winsdk.windows.foundation.collections.IVectorView[Workspace]
    node_value: str
    node_namespace: str
    node_name: str
    language: str
    base_uri: winsdk.windows.foundation.Uri
    attribute_extensions: winsdk.windows.foundation.collections.IVector[winsdk.windows.web.syndication.SyndicationAttribute]
    element_extensions: winsdk.windows.foundation.collections.IVector[winsdk.windows.web.syndication.ISyndicationNode]
    @staticmethod
    def _from(obj: _winrt.Object) -> ServiceDocument: ...
    @typing.overload
    def get_xml_document(self, format: winsdk.windows.web.syndication.SyndicationFormat) -> winsdk.windows.data.xml.dom.XmlDocument: ...

class Workspace(winsdk.windows.web.syndication.ISyndicationNode, _winrt.Object):
    collections: winsdk.windows.foundation.collections.IVectorView[ResourceCollection]
    title: winsdk.windows.web.syndication.ISyndicationText
    node_value: str
    node_namespace: str
    node_name: str
    language: str
    base_uri: winsdk.windows.foundation.Uri
    attribute_extensions: winsdk.windows.foundation.collections.IVector[winsdk.windows.web.syndication.SyndicationAttribute]
    element_extensions: winsdk.windows.foundation.collections.IVector[winsdk.windows.web.syndication.ISyndicationNode]
    @staticmethod
    def _from(obj: _winrt.Object) -> Workspace: ...
    @typing.overload
    def get_xml_document(self, format: winsdk.windows.web.syndication.SyndicationFormat) -> winsdk.windows.data.xml.dom.XmlDocument: ...

