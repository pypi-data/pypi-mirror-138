# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.2

import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.system.threading
except Exception:
    pass

class PreallocatedWorkItem(_winrt.Object):
    @staticmethod
    def _from(obj: _winrt.Object) -> PreallocatedWorkItem: ...
    @typing.overload
    def __init__(self, handler: winsdk.windows.system.threading.WorkItemHandler) -> None: ...
    @typing.overload
    def __init__(self, handler: winsdk.windows.system.threading.WorkItemHandler, priority: winsdk.windows.system.threading.WorkItemPriority) -> None: ...
    @typing.overload
    def __init__(self, handler: winsdk.windows.system.threading.WorkItemHandler, priority: winsdk.windows.system.threading.WorkItemPriority, options: winsdk.windows.system.threading.WorkItemOptions) -> None: ...
    @typing.overload
    def run_async(self) -> winsdk.windows.foundation.IAsyncAction: ...

class SignalNotifier(_winrt.Object):
    @staticmethod
    def _from(obj: _winrt.Object) -> SignalNotifier: ...
    @typing.overload
    @staticmethod
    def attach_to_event(name: str, handler: SignalHandler) -> SignalNotifier: ...
    @typing.overload
    @staticmethod
    def attach_to_event(name: str, handler: SignalHandler, timeout: winsdk.windows.foundation.TimeSpan) -> SignalNotifier: ...
    @typing.overload
    @staticmethod
    def attach_to_semaphore(name: str, handler: SignalHandler) -> SignalNotifier: ...
    @typing.overload
    @staticmethod
    def attach_to_semaphore(name: str, handler: SignalHandler, timeout: winsdk.windows.foundation.TimeSpan) -> SignalNotifier: ...
    @typing.overload
    def enable(self) -> None: ...
    @typing.overload
    def terminate(self) -> None: ...

SignalHandler = typing.Callable[[SignalNotifier, _winrt.Boolean], None]

