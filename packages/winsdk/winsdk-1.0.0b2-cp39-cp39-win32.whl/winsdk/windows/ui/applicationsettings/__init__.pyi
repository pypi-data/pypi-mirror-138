# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.2

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

try:
    import winsdk.windows.security.credentials
except Exception:
    pass

try:
    import winsdk.windows.system
except Exception:
    pass

try:
    import winsdk.windows.ui.popups
except Exception:
    pass

class SupportedWebAccountActions(enum.IntFlag):
    NONE = 0
    RECONNECT = 0x1
    REMOVE = 0x2
    VIEW_DETAILS = 0x4
    MANAGE = 0x8
    MORE = 0x10

class WebAccountAction(enum.IntEnum):
    RECONNECT = 0
    REMOVE = 1
    VIEW_DETAILS = 2
    MANAGE = 3
    MORE = 4

class AccountsSettingsPane(_winrt.Object):
    @staticmethod
    def _from(obj: _winrt.Object) -> AccountsSettingsPane: ...
    @typing.overload
    @staticmethod
    def get_for_current_view() -> AccountsSettingsPane: ...
    @typing.overload
    @staticmethod
    def show() -> None: ...
    @typing.overload
    @staticmethod
    def show_add_account_async() -> winsdk.windows.foundation.IAsyncAction: ...
    @typing.overload
    @staticmethod
    def show_add_account_for_user_async(user: winsdk.windows.system.User) -> winsdk.windows.foundation.IAsyncAction: ...
    @typing.overload
    @staticmethod
    def show_manage_accounts_async() -> winsdk.windows.foundation.IAsyncAction: ...
    @typing.overload
    @staticmethod
    def show_manage_accounts_for_user_async(user: winsdk.windows.system.User) -> winsdk.windows.foundation.IAsyncAction: ...
    @typing.overload
    def add_account_commands_requested(self, handler: winsdk.windows.foundation.TypedEventHandler[AccountsSettingsPane, AccountsSettingsPaneCommandsRequestedEventArgs]) -> winsdk.windows.foundation.EventRegistrationToken: ...
    @typing.overload
    def remove_account_commands_requested(self, cookie: winsdk.windows.foundation.EventRegistrationToken) -> None: ...

class AccountsSettingsPaneCommandsRequestedEventArgs(_winrt.Object):
    header_text: str
    commands: winsdk.windows.foundation.collections.IVector[SettingsCommand]
    credential_commands: winsdk.windows.foundation.collections.IVector[CredentialCommand]
    web_account_commands: winsdk.windows.foundation.collections.IVector[WebAccountCommand]
    web_account_provider_commands: winsdk.windows.foundation.collections.IVector[WebAccountProviderCommand]
    user: winsdk.windows.system.User
    @staticmethod
    def _from(obj: _winrt.Object) -> AccountsSettingsPaneCommandsRequestedEventArgs: ...
    @typing.overload
    def get_deferral(self) -> AccountsSettingsPaneEventDeferral: ...

class AccountsSettingsPaneEventDeferral(_winrt.Object):
    @staticmethod
    def _from(obj: _winrt.Object) -> AccountsSettingsPaneEventDeferral: ...
    @typing.overload
    def complete(self) -> None: ...

class CredentialCommand(_winrt.Object):
    credential_deleted: CredentialCommandCredentialDeletedHandler
    password_credential: winsdk.windows.security.credentials.PasswordCredential
    @staticmethod
    def _from(obj: _winrt.Object) -> CredentialCommand: ...
    @typing.overload
    def __init__(self, password_credential: winsdk.windows.security.credentials.PasswordCredential) -> None: ...
    @typing.overload
    def __init__(self, password_credential: winsdk.windows.security.credentials.PasswordCredential, deleted: CredentialCommandCredentialDeletedHandler) -> None: ...

class SettingsCommand(winsdk.windows.ui.popups.IUICommand, _winrt.Object):
    label: str
    invoked: winsdk.windows.ui.popups.UICommandInvokedHandler
    id: _winrt.Object
    accounts_command: SettingsCommand
    @staticmethod
    def _from(obj: _winrt.Object) -> SettingsCommand: ...
    @typing.overload
    def __init__(self, settings_command_id: _winrt.Object, label: str, handler: winsdk.windows.ui.popups.UICommandInvokedHandler) -> None: ...

class WebAccountCommand(_winrt.Object):
    actions: SupportedWebAccountActions
    invoked: WebAccountCommandInvokedHandler
    web_account: winsdk.windows.security.credentials.WebAccount
    @staticmethod
    def _from(obj: _winrt.Object) -> WebAccountCommand: ...
    @typing.overload
    def __init__(self, web_account: winsdk.windows.security.credentials.WebAccount, invoked: WebAccountCommandInvokedHandler, actions: SupportedWebAccountActions) -> None: ...

class WebAccountInvokedArgs(_winrt.Object):
    action: WebAccountAction
    @staticmethod
    def _from(obj: _winrt.Object) -> WebAccountInvokedArgs: ...

class WebAccountProviderCommand(_winrt.Object):
    invoked: WebAccountProviderCommandInvokedHandler
    web_account_provider: winsdk.windows.security.credentials.WebAccountProvider
    @staticmethod
    def _from(obj: _winrt.Object) -> WebAccountProviderCommand: ...
    @typing.overload
    def __init__(self, web_account_provider: winsdk.windows.security.credentials.WebAccountProvider, invoked: WebAccountProviderCommandInvokedHandler) -> None: ...

CredentialCommandCredentialDeletedHandler = typing.Callable[[CredentialCommand], None]

WebAccountCommandInvokedHandler = typing.Callable[[WebAccountCommand, WebAccountInvokedArgs], None]

WebAccountProviderCommandInvokedHandler = typing.Callable[[WebAccountProviderCommand], None]

