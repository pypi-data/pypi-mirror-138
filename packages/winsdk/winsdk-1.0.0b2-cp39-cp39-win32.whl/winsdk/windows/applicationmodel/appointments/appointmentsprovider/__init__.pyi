# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.2

import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.applicationmodel.appointments
except Exception:
    pass

try:
    import winsdk.windows.foundation
except Exception:
    pass

class AddAppointmentOperation(_winrt.Object):
    appointment_information: winsdk.windows.applicationmodel.appointments.Appointment
    source_package_family_name: str
    @staticmethod
    def _from(obj: _winrt.Object) -> AddAppointmentOperation: ...
    @typing.overload
    def dismiss_u_i(self) -> None: ...
    @typing.overload
    def report_canceled(self) -> None: ...
    @typing.overload
    def report_completed(self, item_id: str) -> None: ...
    @typing.overload
    def report_error(self, value: str) -> None: ...

class AppointmentsProviderLaunchActionVerbs(_winrt.Object):
    add_appointment: str
    remove_appointment: str
    replace_appointment: str
    show_time_frame: str
    show_appointment_details: str
    @staticmethod
    def _from(obj: _winrt.Object) -> AppointmentsProviderLaunchActionVerbs: ...

class RemoveAppointmentOperation(_winrt.Object):
    appointment_id: str
    instance_start_date: typing.Optional[winsdk.windows.foundation.DateTime]
    source_package_family_name: str
    @staticmethod
    def _from(obj: _winrt.Object) -> RemoveAppointmentOperation: ...
    @typing.overload
    def dismiss_u_i(self) -> None: ...
    @typing.overload
    def report_canceled(self) -> None: ...
    @typing.overload
    def report_completed(self) -> None: ...
    @typing.overload
    def report_error(self, value: str) -> None: ...

class ReplaceAppointmentOperation(_winrt.Object):
    appointment_id: str
    appointment_information: winsdk.windows.applicationmodel.appointments.Appointment
    instance_start_date: typing.Optional[winsdk.windows.foundation.DateTime]
    source_package_family_name: str
    @staticmethod
    def _from(obj: _winrt.Object) -> ReplaceAppointmentOperation: ...
    @typing.overload
    def dismiss_u_i(self) -> None: ...
    @typing.overload
    def report_canceled(self) -> None: ...
    @typing.overload
    def report_completed(self, item_id: str) -> None: ...
    @typing.overload
    def report_error(self, value: str) -> None: ...

