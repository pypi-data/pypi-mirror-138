# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.2

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.devices.geolocation
except Exception:
    pass

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

class OfflineMapPackageQueryStatus(enum.IntEnum):
    SUCCESS = 0
    UNKNOWN_ERROR = 1
    INVALID_CREDENTIALS = 2
    NETWORK_FAILURE = 3

class OfflineMapPackageStartDownloadStatus(enum.IntEnum):
    SUCCESS = 0
    UNKNOWN_ERROR = 1
    INVALID_CREDENTIALS = 2
    DENIED_WITHOUT_CAPABILITY = 3

class OfflineMapPackageStatus(enum.IntEnum):
    NOT_DOWNLOADED = 0
    DOWNLOADING = 1
    DOWNLOADED = 2
    DELETING = 3

class OfflineMapPackage(_winrt.Object):
    display_name: str
    enclosing_region_name: str
    estimated_size_in_bytes: _winrt.UInt64
    status: OfflineMapPackageStatus
    @staticmethod
    def _from(obj: _winrt.Object) -> OfflineMapPackage: ...
    @typing.overload
    @staticmethod
    def find_packages_async(query_point: winsdk.windows.devices.geolocation.Geopoint) -> winsdk.windows.foundation.IAsyncOperation[OfflineMapPackageQueryResult]: ...
    @typing.overload
    @staticmethod
    def find_packages_in_bounding_box_async(query_bounding_box: winsdk.windows.devices.geolocation.GeoboundingBox) -> winsdk.windows.foundation.IAsyncOperation[OfflineMapPackageQueryResult]: ...
    @typing.overload
    @staticmethod
    def find_packages_in_geocircle_async(query_circle: winsdk.windows.devices.geolocation.Geocircle) -> winsdk.windows.foundation.IAsyncOperation[OfflineMapPackageQueryResult]: ...
    @typing.overload
    def request_start_download_async(self) -> winsdk.windows.foundation.IAsyncOperation[OfflineMapPackageStartDownloadResult]: ...
    @typing.overload
    def add_status_changed(self, value: winsdk.windows.foundation.TypedEventHandler[OfflineMapPackage, _winrt.Object]) -> winsdk.windows.foundation.EventRegistrationToken: ...
    @typing.overload
    def remove_status_changed(self, token: winsdk.windows.foundation.EventRegistrationToken) -> None: ...

class OfflineMapPackageQueryResult(_winrt.Object):
    packages: winsdk.windows.foundation.collections.IVectorView[OfflineMapPackage]
    status: OfflineMapPackageQueryStatus
    @staticmethod
    def _from(obj: _winrt.Object) -> OfflineMapPackageQueryResult: ...

class OfflineMapPackageStartDownloadResult(_winrt.Object):
    status: OfflineMapPackageStartDownloadStatus
    @staticmethod
    def _from(obj: _winrt.Object) -> OfflineMapPackageStartDownloadResult: ...

