# WARNING: Please don't edit this file. It was generated by Python/WinRT v1.0.0-beta.2

import enum
import sys
import types
import typing
import uuid

import winsdk._winrt as _winrt

try:
    import winsdk.windows.foundation
except Exception:
    pass

try:
    import winsdk.windows.foundation.collections
except Exception:
    pass

try:
    import winsdk.windows.networking.sockets
except Exception:
    pass

try:
    import winsdk.windows.security.cryptography.certificates
except Exception:
    pass

try:
    import winsdk.windows.storage.streams
except Exception:
    pass

try:
    import winsdk.windows.web.http.filters
except Exception:
    pass

try:
    import winsdk.windows.web.http.headers
except Exception:
    pass

class HttpCompletionOption(enum.IntEnum):
    RESPONSE_CONTENT_READ = 0
    RESPONSE_HEADERS_READ = 1

class HttpProgressStage(enum.IntEnum):
    NONE = 0
    DETECTING_PROXY = 10
    RESOLVING_NAME = 20
    CONNECTING_TO_SERVER = 30
    NEGOTIATING_SSL = 40
    SENDING_HEADERS = 50
    SENDING_CONTENT = 60
    WAITING_FOR_RESPONSE = 70
    RECEIVING_HEADERS = 80
    RECEIVING_CONTENT = 90

class HttpResponseMessageSource(enum.IntEnum):
    NONE = 0
    CACHE = 1
    NETWORK = 2

class HttpStatusCode(enum.IntEnum):
    NONE = 0
    CONTINUE = 100
    SWITCHING_PROTOCOLS = 101
    PROCESSING = 102
    OK = 200
    CREATED = 201
    ACCEPTED = 202
    NON_AUTHORITATIVE_INFORMATION = 203
    NO_CONTENT = 204
    RESET_CONTENT = 205
    PARTIAL_CONTENT = 206
    MULTI_STATUS = 207
    ALREADY_REPORTED = 208
    I_M_USED = 226
    MULTIPLE_CHOICES = 300
    MOVED_PERMANENTLY = 301
    FOUND = 302
    SEE_OTHER = 303
    NOT_MODIFIED = 304
    USE_PROXY = 305
    TEMPORARY_REDIRECT = 307
    PERMANENT_REDIRECT = 308
    BAD_REQUEST = 400
    UNAUTHORIZED = 401
    PAYMENT_REQUIRED = 402
    FORBIDDEN = 403
    NOT_FOUND = 404
    METHOD_NOT_ALLOWED = 405
    NOT_ACCEPTABLE = 406
    PROXY_AUTHENTICATION_REQUIRED = 407
    REQUEST_TIMEOUT = 408
    CONFLICT = 409
    GONE = 410
    LENGTH_REQUIRED = 411
    PRECONDITION_FAILED = 412
    REQUEST_ENTITY_TOO_LARGE = 413
    REQUEST_URI_TOO_LONG = 414
    UNSUPPORTED_MEDIA_TYPE = 415
    REQUESTED_RANGE_NOT_SATISFIABLE = 416
    EXPECTATION_FAILED = 417
    UNPROCESSABLE_ENTITY = 422
    LOCKED = 423
    FAILED_DEPENDENCY = 424
    UPGRADE_REQUIRED = 426
    PRECONDITION_REQUIRED = 428
    TOO_MANY_REQUESTS = 429
    REQUEST_HEADER_FIELDS_TOO_LARGE = 431
    INTERNAL_SERVER_ERROR = 500
    NOT_IMPLEMENTED = 501
    BAD_GATEWAY = 502
    SERVICE_UNAVAILABLE = 503
    GATEWAY_TIMEOUT = 504
    HTTP_VERSION_NOT_SUPPORTED = 505
    VARIANT_ALSO_NEGOTIATES = 506
    INSUFFICIENT_STORAGE = 507
    LOOP_DETECTED = 508
    NOT_EXTENDED = 510
    NETWORK_AUTHENTICATION_REQUIRED = 511

class HttpVersion(enum.IntEnum):
    NONE = 0
    HTTP10 = 1
    HTTP11 = 2
    HTTP20 = 3

class HttpProgress:
    stage: HttpProgressStage
    bytes_sent: _winrt.UInt64
    total_bytes_to_send: _winrt.UInt64
    bytes_received: _winrt.UInt64
    total_bytes_to_receive: _winrt.UInt64
    retries: _winrt.UInt32
    def __init__(self, stage: HttpProgressStage, bytes_sent: _winrt.UInt64, total_bytes_to_send: _winrt.UInt64, bytes_received: _winrt.UInt64, total_bytes_to_receive: _winrt.UInt64, retries: _winrt.UInt32) -> None: ...

class HttpBufferContent(IHttpContent, winsdk.windows.foundation.IClosable, winsdk.windows.foundation.IStringable, _winrt.Object):
    headers: winsdk.windows.web.http.headers.HttpContentHeaderCollection
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpBufferContent: ...
    @typing.overload
    def __init__(self, content: winsdk.windows.storage.streams.IBuffer) -> None: ...
    @typing.overload
    def __init__(self, content: winsdk.windows.storage.streams.IBuffer, offset: _winrt.UInt32, count: _winrt.UInt32) -> None: ...
    @typing.overload
    def buffer_all_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt64, _winrt.UInt64]: ...
    @typing.overload
    def close(self) -> None: ...
    @typing.overload
    def read_as_buffer_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IBuffer, _winrt.UInt64]: ...
    @typing.overload
    def read_as_input_stream_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IInputStream, _winrt.UInt64]: ...
    @typing.overload
    def read_as_string_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[str, _winrt.UInt64]: ...
    @typing.overload
    def to_string(self) -> str: ...
    @typing.overload
    def try_compute_length(self, ) -> typing.Tuple[_winrt.Boolean, _winrt.UInt64]: ...
    @typing.overload
    def write_to_stream_async(self, output_stream: winsdk.windows.storage.streams.IOutputStream) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt64, _winrt.UInt64]: ...

class HttpClient(winsdk.windows.foundation.IClosable, winsdk.windows.foundation.IStringable, _winrt.Object):
    default_request_headers: winsdk.windows.web.http.headers.HttpRequestHeaderCollection
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpClient: ...
    @typing.overload
    def __init__(self, filter: winsdk.windows.web.http.filters.IHttpFilter) -> None: ...
    @typing.overload
    def __init__(self) -> None: ...
    @typing.overload
    def close(self) -> None: ...
    @typing.overload
    def delete_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]: ...
    @typing.overload
    def get_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]: ...
    @typing.overload
    def get_async(self, uri: winsdk.windows.foundation.Uri, completion_option: HttpCompletionOption) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]: ...
    @typing.overload
    def get_buffer_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IBuffer, HttpProgress]: ...
    @typing.overload
    def get_input_stream_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IInputStream, HttpProgress]: ...
    @typing.overload
    def get_string_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncOperationWithProgress[str, HttpProgress]: ...
    @typing.overload
    def post_async(self, uri: winsdk.windows.foundation.Uri, content: IHttpContent) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]: ...
    @typing.overload
    def put_async(self, uri: winsdk.windows.foundation.Uri, content: IHttpContent) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]: ...
    @typing.overload
    def send_request_async(self, request: HttpRequestMessage) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]: ...
    @typing.overload
    def send_request_async(self, request: HttpRequestMessage, completion_option: HttpCompletionOption) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpResponseMessage, HttpProgress]: ...
    @typing.overload
    def to_string(self) -> str: ...
    @typing.overload
    def try_delete_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]: ...
    @typing.overload
    def try_get_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]: ...
    @typing.overload
    def try_get_async(self, uri: winsdk.windows.foundation.Uri, completion_option: HttpCompletionOption) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]: ...
    @typing.overload
    def try_get_buffer_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpGetBufferResult, HttpProgress]: ...
    @typing.overload
    def try_get_input_stream_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpGetInputStreamResult, HttpProgress]: ...
    @typing.overload
    def try_get_string_async(self, uri: winsdk.windows.foundation.Uri) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpGetStringResult, HttpProgress]: ...
    @typing.overload
    def try_post_async(self, uri: winsdk.windows.foundation.Uri, content: IHttpContent) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]: ...
    @typing.overload
    def try_put_async(self, uri: winsdk.windows.foundation.Uri, content: IHttpContent) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]: ...
    @typing.overload
    def try_send_request_async(self, request: HttpRequestMessage) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]: ...
    @typing.overload
    def try_send_request_async(self, request: HttpRequestMessage, completion_option: HttpCompletionOption) -> winsdk.windows.foundation.IAsyncOperationWithProgress[HttpRequestResult, HttpProgress]: ...

class HttpCookie(winsdk.windows.foundation.IStringable, _winrt.Object):
    value: str
    secure: _winrt.Boolean
    http_only: _winrt.Boolean
    expires: typing.Optional[winsdk.windows.foundation.DateTime]
    domain: str
    name: str
    path: str
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpCookie: ...
    @typing.overload
    def __init__(self, name: str, domain: str, path: str) -> None: ...
    @typing.overload
    def to_string(self) -> str: ...

class HttpCookieCollection(winsdk.windows.foundation.collections.IVectorView[HttpCookie], winsdk.windows.foundation.collections.IIterable[HttpCookie], _winrt.Object):
    size: _winrt.UInt32
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpCookieCollection: ...
    @typing.overload
    def first(self) -> winsdk.windows.foundation.collections.IIterator[HttpCookie]: ...
    @typing.overload
    def get_at(self, index: _winrt.UInt32) -> HttpCookie: ...
    @typing.overload
    def get_many(self, start_index: _winrt.UInt32, items_size: _winrt.UInt32) -> typing.Tuple[_winrt.UInt32, typing.List[HttpCookie]]: ...
    @typing.overload
    def index_of(self, value: HttpCookie) -> typing.Tuple[_winrt.Boolean, _winrt.UInt32]: ...

class HttpCookieManager(_winrt.Object):
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpCookieManager: ...
    @typing.overload
    def delete_cookie(self, cookie: HttpCookie) -> None: ...
    @typing.overload
    def get_cookies(self, uri: winsdk.windows.foundation.Uri) -> HttpCookieCollection: ...
    @typing.overload
    def set_cookie(self, cookie: HttpCookie) -> _winrt.Boolean: ...
    @typing.overload
    def set_cookie(self, cookie: HttpCookie, third_party: _winrt.Boolean) -> _winrt.Boolean: ...

class HttpFormUrlEncodedContent(IHttpContent, winsdk.windows.foundation.IClosable, winsdk.windows.foundation.IStringable, _winrt.Object):
    headers: winsdk.windows.web.http.headers.HttpContentHeaderCollection
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpFormUrlEncodedContent: ...
    @typing.overload
    def __init__(self, content: typing.Iterable[winsdk.windows.foundation.collections.IKeyValuePair[str, str]]) -> None: ...
    @typing.overload
    def buffer_all_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt64, _winrt.UInt64]: ...
    @typing.overload
    def close(self) -> None: ...
    @typing.overload
    def read_as_buffer_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IBuffer, _winrt.UInt64]: ...
    @typing.overload
    def read_as_input_stream_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IInputStream, _winrt.UInt64]: ...
    @typing.overload
    def read_as_string_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[str, _winrt.UInt64]: ...
    @typing.overload
    def to_string(self) -> str: ...
    @typing.overload
    def try_compute_length(self, ) -> typing.Tuple[_winrt.Boolean, _winrt.UInt64]: ...
    @typing.overload
    def write_to_stream_async(self, output_stream: winsdk.windows.storage.streams.IOutputStream) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt64, _winrt.UInt64]: ...

class HttpGetBufferResult(winsdk.windows.foundation.IClosable, winsdk.windows.foundation.IStringable, _winrt.Object):
    extended_error: winsdk.windows.foundation.HResult
    request_message: HttpRequestMessage
    response_message: HttpResponseMessage
    succeeded: _winrt.Boolean
    value: winsdk.windows.storage.streams.IBuffer
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpGetBufferResult: ...
    @typing.overload
    def close(self) -> None: ...
    @typing.overload
    def to_string(self) -> str: ...

class HttpGetInputStreamResult(winsdk.windows.foundation.IClosable, winsdk.windows.foundation.IStringable, _winrt.Object):
    extended_error: winsdk.windows.foundation.HResult
    request_message: HttpRequestMessage
    response_message: HttpResponseMessage
    succeeded: _winrt.Boolean
    value: winsdk.windows.storage.streams.IInputStream
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpGetInputStreamResult: ...
    @typing.overload
    def close(self) -> None: ...
    @typing.overload
    def to_string(self) -> str: ...

class HttpGetStringResult(winsdk.windows.foundation.IClosable, winsdk.windows.foundation.IStringable, _winrt.Object):
    extended_error: winsdk.windows.foundation.HResult
    request_message: HttpRequestMessage
    response_message: HttpResponseMessage
    succeeded: _winrt.Boolean
    value: str
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpGetStringResult: ...
    @typing.overload
    def close(self) -> None: ...
    @typing.overload
    def to_string(self) -> str: ...

class HttpMethod(winsdk.windows.foundation.IStringable, _winrt.Object):
    method: str
    delete: HttpMethod
    get: HttpMethod
    head: HttpMethod
    options: HttpMethod
    patch: HttpMethod
    post: HttpMethod
    put: HttpMethod
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpMethod: ...
    @typing.overload
    def __init__(self, method: str) -> None: ...
    @typing.overload
    def to_string(self) -> str: ...

class HttpMultipartContent(IHttpContent, winsdk.windows.foundation.IClosable, winsdk.windows.foundation.collections.IIterable[IHttpContent], winsdk.windows.foundation.IStringable, _winrt.Object):
    headers: winsdk.windows.web.http.headers.HttpContentHeaderCollection
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpMultipartContent: ...
    @typing.overload
    def __init__(self, subtype: str) -> None: ...
    @typing.overload
    def __init__(self, subtype: str, boundary: str) -> None: ...
    @typing.overload
    def __init__(self) -> None: ...
    @typing.overload
    def add(self, content: IHttpContent) -> None: ...
    @typing.overload
    def buffer_all_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt64, _winrt.UInt64]: ...
    @typing.overload
    def close(self) -> None: ...
    @typing.overload
    def first(self) -> winsdk.windows.foundation.collections.IIterator[IHttpContent]: ...
    @typing.overload
    def read_as_buffer_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IBuffer, _winrt.UInt64]: ...
    @typing.overload
    def read_as_input_stream_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IInputStream, _winrt.UInt64]: ...
    @typing.overload
    def read_as_string_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[str, _winrt.UInt64]: ...
    @typing.overload
    def to_string(self) -> str: ...
    @typing.overload
    def try_compute_length(self, ) -> typing.Tuple[_winrt.Boolean, _winrt.UInt64]: ...
    @typing.overload
    def write_to_stream_async(self, output_stream: winsdk.windows.storage.streams.IOutputStream) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt64, _winrt.UInt64]: ...

class HttpMultipartFormDataContent(IHttpContent, winsdk.windows.foundation.IClosable, winsdk.windows.foundation.collections.IIterable[IHttpContent], winsdk.windows.foundation.IStringable, _winrt.Object):
    headers: winsdk.windows.web.http.headers.HttpContentHeaderCollection
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpMultipartFormDataContent: ...
    @typing.overload
    def __init__(self, boundary: str) -> None: ...
    @typing.overload
    def __init__(self) -> None: ...
    @typing.overload
    def add(self, content: IHttpContent) -> None: ...
    @typing.overload
    def add(self, content: IHttpContent, name: str) -> None: ...
    @typing.overload
    def add(self, content: IHttpContent, name: str, file_name: str) -> None: ...
    @typing.overload
    def buffer_all_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt64, _winrt.UInt64]: ...
    @typing.overload
    def close(self) -> None: ...
    @typing.overload
    def first(self) -> winsdk.windows.foundation.collections.IIterator[IHttpContent]: ...
    @typing.overload
    def read_as_buffer_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IBuffer, _winrt.UInt64]: ...
    @typing.overload
    def read_as_input_stream_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IInputStream, _winrt.UInt64]: ...
    @typing.overload
    def read_as_string_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[str, _winrt.UInt64]: ...
    @typing.overload
    def to_string(self) -> str: ...
    @typing.overload
    def try_compute_length(self, ) -> typing.Tuple[_winrt.Boolean, _winrt.UInt64]: ...
    @typing.overload
    def write_to_stream_async(self, output_stream: winsdk.windows.storage.streams.IOutputStream) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt64, _winrt.UInt64]: ...

class HttpRequestMessage(winsdk.windows.foundation.IClosable, winsdk.windows.foundation.IStringable, _winrt.Object):
    request_uri: winsdk.windows.foundation.Uri
    method: HttpMethod
    content: IHttpContent
    headers: winsdk.windows.web.http.headers.HttpRequestHeaderCollection
    properties: winsdk.windows.foundation.collections.IMap[str, _winrt.Object]
    transport_information: HttpTransportInformation
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpRequestMessage: ...
    @typing.overload
    def __init__(self, method: HttpMethod, uri: winsdk.windows.foundation.Uri) -> None: ...
    @typing.overload
    def __init__(self) -> None: ...
    @typing.overload
    def close(self) -> None: ...
    @typing.overload
    def to_string(self) -> str: ...

class HttpRequestResult(winsdk.windows.foundation.IClosable, winsdk.windows.foundation.IStringable, _winrt.Object):
    extended_error: winsdk.windows.foundation.HResult
    request_message: HttpRequestMessage
    response_message: HttpResponseMessage
    succeeded: _winrt.Boolean
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpRequestResult: ...
    @typing.overload
    def close(self) -> None: ...
    @typing.overload
    def to_string(self) -> str: ...

class HttpResponseMessage(winsdk.windows.foundation.IClosable, winsdk.windows.foundation.IStringable, _winrt.Object):
    version: HttpVersion
    status_code: HttpStatusCode
    source: HttpResponseMessageSource
    request_message: HttpRequestMessage
    reason_phrase: str
    content: IHttpContent
    headers: winsdk.windows.web.http.headers.HttpResponseHeaderCollection
    is_success_status_code: _winrt.Boolean
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpResponseMessage: ...
    @typing.overload
    def __init__(self, status_code: HttpStatusCode) -> None: ...
    @typing.overload
    def __init__(self) -> None: ...
    @typing.overload
    def close(self) -> None: ...
    @typing.overload
    def ensure_success_status_code(self) -> HttpResponseMessage: ...
    @typing.overload
    def to_string(self) -> str: ...

class HttpStreamContent(IHttpContent, winsdk.windows.foundation.IClosable, winsdk.windows.foundation.IStringable, _winrt.Object):
    headers: winsdk.windows.web.http.headers.HttpContentHeaderCollection
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpStreamContent: ...
    @typing.overload
    def __init__(self, content: winsdk.windows.storage.streams.IInputStream) -> None: ...
    @typing.overload
    def buffer_all_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt64, _winrt.UInt64]: ...
    @typing.overload
    def close(self) -> None: ...
    @typing.overload
    def read_as_buffer_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IBuffer, _winrt.UInt64]: ...
    @typing.overload
    def read_as_input_stream_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IInputStream, _winrt.UInt64]: ...
    @typing.overload
    def read_as_string_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[str, _winrt.UInt64]: ...
    @typing.overload
    def to_string(self) -> str: ...
    @typing.overload
    def try_compute_length(self, ) -> typing.Tuple[_winrt.Boolean, _winrt.UInt64]: ...
    @typing.overload
    def write_to_stream_async(self, output_stream: winsdk.windows.storage.streams.IOutputStream) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt64, _winrt.UInt64]: ...

class HttpStringContent(IHttpContent, winsdk.windows.foundation.IClosable, winsdk.windows.foundation.IStringable, _winrt.Object):
    headers: winsdk.windows.web.http.headers.HttpContentHeaderCollection
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpStringContent: ...
    @typing.overload
    def __init__(self, content: str) -> None: ...
    @typing.overload
    def __init__(self, content: str, encoding: winsdk.windows.storage.streams.UnicodeEncoding) -> None: ...
    @typing.overload
    def __init__(self, content: str, encoding: winsdk.windows.storage.streams.UnicodeEncoding, media_type: str) -> None: ...
    @typing.overload
    def buffer_all_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt64, _winrt.UInt64]: ...
    @typing.overload
    def close(self) -> None: ...
    @typing.overload
    def read_as_buffer_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IBuffer, _winrt.UInt64]: ...
    @typing.overload
    def read_as_input_stream_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IInputStream, _winrt.UInt64]: ...
    @typing.overload
    def read_as_string_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[str, _winrt.UInt64]: ...
    @typing.overload
    def to_string(self) -> str: ...
    @typing.overload
    def try_compute_length(self, ) -> typing.Tuple[_winrt.Boolean, _winrt.UInt64]: ...
    @typing.overload
    def write_to_stream_async(self, output_stream: winsdk.windows.storage.streams.IOutputStream) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt64, _winrt.UInt64]: ...

class HttpTransportInformation(winsdk.windows.foundation.IStringable, _winrt.Object):
    server_certificate: winsdk.windows.security.cryptography.certificates.Certificate
    server_certificate_error_severity: winsdk.windows.networking.sockets.SocketSslErrorSeverity
    server_certificate_errors: winsdk.windows.foundation.collections.IVectorView[winsdk.windows.security.cryptography.certificates.ChainValidationResult]
    server_intermediate_certificates: winsdk.windows.foundation.collections.IVectorView[winsdk.windows.security.cryptography.certificates.Certificate]
    @staticmethod
    def _from(obj: _winrt.Object) -> HttpTransportInformation: ...
    @typing.overload
    def to_string(self) -> str: ...

class IHttpContent(winsdk.windows.foundation.IClosable, _winrt.Object):
    headers: winsdk.windows.web.http.headers.HttpContentHeaderCollection
    @staticmethod
    def _from(obj: _winrt.Object) -> IHttpContent: ...
    @typing.overload
    def buffer_all_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt64, _winrt.UInt64]: ...
    @typing.overload
    def read_as_buffer_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IBuffer, _winrt.UInt64]: ...
    @typing.overload
    def read_as_input_stream_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[winsdk.windows.storage.streams.IInputStream, _winrt.UInt64]: ...
    @typing.overload
    def read_as_string_async(self) -> winsdk.windows.foundation.IAsyncOperationWithProgress[str, _winrt.UInt64]: ...
    @typing.overload
    def try_compute_length(self, ) -> typing.Tuple[_winrt.Boolean, _winrt.UInt64]: ...
    @typing.overload
    def write_to_stream_async(self, output_stream: winsdk.windows.storage.streams.IOutputStream) -> winsdk.windows.foundation.IAsyncOperationWithProgress[_winrt.UInt64, _winrt.UInt64]: ...
    @typing.overload
    def close(self) -> None: ...

