# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['clointfusion',
 'clointfusion.cli',
 'clointfusion.functions',
 'clointfusion.resources']

package_data = \
{'': ['*']}

install_requires = \
['PyAutoGUI>=0.9.53,<0.10.0',
 'PySimpleGUI>=4.55.1,<5.0.0',
 'SpeechRecognition>=3.8.1,<4.0.0',
 'click>=8.0.3,<9.0.0',
 'clipboard>=0.0.4,<0.0.5',
 'colored>=1.4.3,<2.0.0',
 'cryptocode>=0.1,<0.2',
 'emoji>=1.6.1,<2.0.0',
 'helium>=3.0.8,<4.0.0',
 'matplotlib>=3.5.1,<4.0.0',
 'openpyxl>=3.0.9,<4.0.0',
 'pandas>=1.3.5,<2.0.0',
 'pyfiglet>=0.8.post1,<0.9',
 'pyinspect>=0.1.0,<0.2.0',
 'pyttsx3>=2.90,<3.0',
 'requests>=2.26.0,<3.0.0',
 'rich>=10.16.1,<11.0.0',
 'speedtest-cli>=2.1.3,<3.0.0',
 'webdriver-manager>=3.5.2,<4.0.0',
 'win10toast-click>=0.1.2,<0.2.0',
 'xls2xlsx>=0.1.5,<0.2.0',
 'xlsx2html>=0.4.0,<0.5.0',
 'xlwt>=1.3.0,<2.0.0']

entry_points = \
{'console_scripts': ['cf = clointfusion.cli.cf:main',
                     'cf_st = clointfusion.cli.st:main']}

setup_kwargs = {
    'name': 'clointfusion',
    'version': '1.1.7',
    'description': 'Python based Automation (RPA) Platform',
    'long_description': '## Welcome to <img src="https://raw.githubusercontent.com/ClointFusion/Image_ICONS_GIFs/main/Cloint-LOGO-New.png" height="30"> , Made in India with &#10084;&#65039; \n\n<br>\n\n<img src="https://raw.githubusercontent.com/ClointFusion/Image_ICONS_GIFs/main/CCEW.PNG">\n\n\n## Description\n\nCloint India Pvt. Ltd - Python functions for Robotic Process Automation shortly `RPA`.\n\n# What is ClointFusion?\n\nClointFusion is an Indian firm based in Vadodara, Gujarat. ClointFusion is a Python-based RPA platform for developing Software BOTs. Using AI, we\'re working on Common Man\'s RPA.\n\n<img src="https://raw.githubusercontent.com/ClointFusion/Image_ICONS_GIFs/main/DOST%20Blocks/Block-GUI.png">\n\n#### Check out Project Status\n\n![PyPI](https://img.shields.io/pypi/v/ClointFusion?label=PyPI%20Version) \n![PyPI - License](https://img.shields.io/pypi/l/ClointFusion?label=License) \n![PyPI - Status](https://img.shields.io/pypi/status/ClointFusion?label=Release%20Status) \n![ClointFusion](https://snyk.io/advisor/python/ClointFusion/badge.svg) \n![PyPI - Downloads](https://img.shields.io/pypi/dm/ClointFusion?label=PyPI%20Downloads) \n![Libraries.io SourceRank](https://img.shields.io/librariesio/sourcerank/pypi/ClointFusion) \n![PyPI - Format](https://img.shields.io/pypi/format/ClointFusion?label=PyPI%20Format) \n![GitHub contributors](https://img.shields.io/github/contributors/ClointFusion/ClointFusion?label=Contributors) \n![GitHub last commit](https://img.shields.io/github/last-commit/ClointFusion/ClointFusion?label=Last%20Commit) \n\n![GitHub Repo stars](https://img.shields.io/github/stars/ClointFusion/ClointFusion?label=Stars&style=social) \n![Twitter URL](https://img.shields.io/twitter/url?style=social&url=https%3A%2F%2Ftwitter.com%2FClointFusion) \n![YouTube Channel Subscribers](https://img.shields.io/youtube/channel/subscribers/UCIygBtp1y_XEnC71znWEW2w?style=social) \n![Twitter Follow](https://img.shields.io/twitter/follow/ClointFusion?style=social)\n\n## Release Notes\n\n- Click here for <a href="https://github.com/ClointFusion/ClointFusion/blob/master/Release_Notes.txt" target="_blank"> Release Notes</a>\n\n---\n\n# Installation\n\n<br>\n\n> ### ClointFusion is now supported on Windows / Ubuntu / macOS* !\n\n## Windows :\n\n> ### Windows users can download EXE pre-loaded with Python 3.9 and ClointFusion package: <a href=\'https://github.com/ClointFusion/ClointFusion/releases/download/v1.0.0/ClointFusion_Community_Edition.exe\' target="_blank">Windows EXE</a>\n### OR\n\n* ClointFusion is compatible with both Windows 10 and Windows 11.\n* Installing on a Windows PC is a breeze.\n* Make certain that Python 3.8 or Python 3.9 is installed.\n* Then, from the command prompt, execute the following command.\n\n    ```\n    pip install -U ClointFusion\n    ```\n\n## Ubuntu :\n* Clointfusion requires sudo rights to install on Ubuntu.\n* Additional Linux packages must be installed before Clointfusion can be installed.\n* Make certain that Python 3.8 or Python 3.9 is installed.\n* Then, from the command prompt, execute the following command.\n\n    ```\n    sudo apt-get install python3-tk python3-dev\n    sudo pip3 install ClointFusion\n    ```\n\n<br>\n\n# Importing\n\n<br>\n\n> ### ClointFusion can be accessed using one of two methods.\n\n## Windows :\n\n* ### Terminal : Opens a Python interpreter using the command " import ClointFusion as cf "\n\n    ```\n    cf_py\n    ```\n* ### Code Editor or IDE : Import ClointFusion first, and then run the file in Python.\n\n    ```\n    # cf_bot.py\n\n    import ClointFusion as cf\n\n    cf.browser_activate()\n    ```\n    ```\n    python cf_bot.py\n    ```\n\n\n## Ubuntu :\n\n* ### Terminal : Opens a Python interpreter with the command " import ClointFusion as cf " and the required sudo privileges.\n\n    ```\n    sudo cf_py\n    ```\n* ### Code Editor or IDE : Run the file with sudo permissions.\n\n    ```\n    # cf_bot.py\n    \n    import ClointFusion as cf\n\n    cf.ChromeBrowser()\n    ```\n    ```\n    sudo python3 cf_bot.py\n    ```\n\n<br>\n\n# Features\n\n<br>\n\n> ## DOST : Your friend in automation || Build RPA Bots without Code.\n\n` DOST ` is an interactive Blockly based ``no-code`` BOT Builder platform built and optimized for ClointFusion-based BOT building. We feel that automation is important for people other than programmers. Using DOST, even a common man can create a BOT in minutes.\n\n### Advantages of DOST\n\n- Easy to Use.\n- Build BOT in minutes.\n- No prior Programming knowledge needed.\n\n# ClointFusion in Action\n\n## **Now access more than 100 functions (hit ctrl+space in your IDE)**\n\n***TIP: You can find and inspect all of ClointFusion\'s functions using only one function i.e., `find()`. Just pass the partial name of the function.***\n\n```\ncf.find("sort")\n\ncf.find("gui")\n\n```\n\n* ### 4 functions on Mouse Operations:\n\n| Function | Accepted Parameters | Description |\n| :--------: | :----: | :----------- |\n| cf.mouse_click() | x=" ", y=" ", left_or_right="left", no_of_clicks=1  | Clicks at the given X Y Co-ordinates on the screen using ingle / double / triple click(s). Optionally copies selected data to clipboard (works for double / triple clicks) |\n| cf.mouse_move() | x=" ", y=" " | Moves the cursor to the given X Y Co-ordinates |\n| cf.mouse_drag_from_to() | x1=" ", y1=" ", x2=" ",y2=" ", delay=0.5 | Clicks and drags from X1 Y1 co-ordinates to X2 Y2 Co-ordinates on the screen |\n| cf.mouse_search_snip_return_coordinates_x_y() | img=" ", wait=180 | Searches the given image on the screen and returns its center of X Y co-ordinates. |\n\n<br>\n<img src="https://github.com/ClointFusion/Image_ICONS_GIFs/blob/main/Mouse_Operations.gif?raw=true" height="400">\n\n----\n\n* ### 6 functions on Window Operations (works only in Windows OS):\n\n| Function | Accepted Parameters | Description |\n| :--------: | :----: | :----------- |\n| cf.window_show_desktop() | None | Minimizes all the applications and shows Desktop. |\n| cf.window_get_all_opened_titles_windows() | window_title=" " | Gives the title of all the existing (open) windows. |\n| cf.window_activate_and_maximize_windows() | windowName=" " | Activates and maximizes the desired window. |\n| cf.window_minimize_windows() | windowName=" " | Activates and minimizes the desired window. | \n| cf.window_close_windows() | windowName=" " | Close the desired window. |\n| cf.launch_any_exe_bat_application() | pathOfExeFile=" " | Launches any exe or batch file or excel file etc. |\n\n<br>\n<img src="https://github.com/ClointFusion/Image_ICONS_GIFs/blob/main/Functions%20Light%20GIFs/Window Operations.gif?raw=true" height="400">\n\n----\n\n* ### 8 functions on Folder Operations:\n\n| Function | Accepted Parameters | Description |\n| :--------: | :----: | :----------- |\n| cf.folder_read_text_file() | txt_file_path=" " | Reads from a given text file and returns entire contents as a single list |\n| cf.folder_write_text_file() | txt_file_path=" ", contents=" " |  Writes given contents to a text file |\n| cf.folder_create() | strFolderPath=" " | When you are making leaf directory, if any intermediate-level directory is missing, folder_create() method creates them. |\n| cf.folder_create_text_file() | textFolderPath=" ", txtFileName=" " | Creates text file in the given path. |\n| cf.folder_get_all_filenames_as_list() | strFolderPath=" ", extension=\'all\' | Get all the files of the given folder in a list. |\n| cf.folder_delete_all_files() | fullPathOfTheFolder=" ", file_extension_without_dot="all" | Deletes all the files of the given folder |\n| cf.file_rename() | old_file_path=\'\', new_file_name=\'\', ext=False | Renames the given file name to new file name with same extension. |\n|cf.file_get_json_details() | path_of_json_file=\'\', section=\'\' | Returns all the details of the given section in a dictionary |\n\n<br>\n<img src="https://github.com/ClointFusion/Image_ICONS_GIFs/blob/main/Folder_Operations.gif?raw=true" height="400">\n\n----\n\n* ### 3 functions on Keyboard Operations:\n\n| Function | Accepted Parameters | Description |\n| :--------: | :----: | :----------- |\n| cf.key_hit_enter() | write_to_window=" " | Enter key will be pressed once. |\n| cf.key_press() | key_1=\'\', key_2=\'\', key_3=\'\', write_to_window=" " | Emulates the given keystrokes. |\n| cf.key_write_enter() | text_to_write=" ", write_to_window=" ", delay_after_typing=1, key="e" | Writes/Types the given text and press enter (by default) or tab key. |\n\n<br>\n<img src="https://github.com/ClointFusion/Image_ICONS_GIFs/blob/main/KB_Operations.gif?raw=true" height="400">\n\n----\n\n* ### 5 functions on Screen-scraping Operations:\n\n| Function | Accepted Parameters | Description |\n| :--------: | :----: | :----------- |\n|cf.scrape_save_contents_to_notepad() | folderPathToSaveTheNotepad=" ", switch_to_window=" ",X=0, Y=0 | Copy pastes all the available text on the screen to notepad and saves it. |\n| cf.scrape_get_contents_by_search_copy_paste() | highlightText=" " | Gets the focus on the screen by searching given text using crtl+f and performs copy/paste of all data. Useful in Citrix applications. This is useful in Citrix applications |\n| cf.screen_clear_search() | delay=0.2 | Clears previously found text (crtl+f highlight) |\n| cf.search_highlight_tab_enter_open() | searchText=" ", hitEnterKey="Yes", shift_tab=\'No\' | Searches for a text on screen using crtl+f and hits enter. This function is useful in Citrix environment. |\n| cf.find_text_on_screen() | searchText=" ", delay=0.1, occurance=1, isSearchToBeCleared=False | Clears previous search and finds the provided text on screen. |\n\n<br>\n<img src="https://github.com/ClointFusion/Image_ICONS_GIFs/blob/main/Screen_Scraping.gif?raw=true" height="400">\n\n----\n\n* ### 11 functions on Browser Operations:\n\n| Function | Accepted Parameters | Description |\n| :--------: | :----: | :----------- |\n| driver = cf.ChromeBrowser() |  | Function to launch browser and start the session. |\n| driver.open_browser() | dummy_browser=True,<br> incognito=False,<br> profile="Default" | Function to launch browser and start the session. |\n| driver.navigate() | url=" " | Navigates to Specified URL. |\n| driver.write() | Value=" ",  User_Visible_Text_Element=" " |  Write a string on the given element. |\n| driver.mouse_click() | User_Visible_Text_Element=" ", element=" ",<br> double_click=False, right_click=False | Click on the given element. |\n| driver.wait_until() | text=" ", element="t" | Wait until a specific element is found. |\n| driver.refresh_page() | None | Refresh the page. |\n| driver.close() | None | Close the Helium browser. |\n| driver.hit_enter() | None | Hits enter KEY using Browser Helium Functions |\n| driver.key_press() | key_1=" ", key_2=" " | Type text using Browser Helium Functions and press hot keys |\n| driver.mouse_hover() | User_Visible_Text_Element=" " | Performs a Mouse Hover over the Given User Visible Text Element |\n| driver.scroll() | direction="down", weight="100" px  | Scrolls the browser window. | \n\n<br>\n<img src="https://github.com/ClointFusion/Image_ICONS_GIFs/blob/main/Functions%20Light%20GIFs/browser_functions.gif?raw=true" height="400">\n\n----\n\n* ### 4 functions on Alert Messages:\n\n| Function | Accepted Parameters | Description |\n| :--------: | :----: | :----------- |\n| cf.message_counter_down_timer() | strMsg="Calling ClointFusion Function in (seconds)", start_value=5 | Function to show count-down timer. Default is 5 seconds. |\n| cf.message_pop_up() | strMsg=" ", delay=3 | Specified message will popup on the screen for a specified duration of time.|\n| cf.message_flash() | msg=" ", delay=3 | Specified msg will popup for a specified duration of time with OK button. |\n| cf.message_toast() | message,website_url=" ", file_folder_path=" " | Function for displaying Windows 10 Toast Notifications. Pass website URL OR file / folder path that needs to be opened when user clicks on the toast notification. |\n\n----\n\n* ### 3 functions on String Operations: \n\n| Function | Accepted Parameters | Description |\n| :--------: | :----: | :----------- |\n| cf.string_remove_special_characters() | inputStr=" " | Removes all the special character. |\n| cf.string_extract_only_alphabets() | inputString=" " | Returns only alphabets from given input string |\n| cf.string_extract_only_numbers() | inputString=" " | Returns only numbers from given input string |\n\n<br>\n<img src="https://github.com/ClointFusion/Image_ICONS_GIFs/blob/main/String_Operations.gif?raw=true" height="400">\n\n----\n\n* ### Loads of miscellaneous functions related to emoji, capture photo, flash (pop-up) messages etc:\n\n| Function | Accepted Parameters | Description |\n| :--------: | :----: | :----------- |\n| cf.clear_screen() | None | Clears Python Interpreter Terminal Window Screen |\n| cf.print_with_magic_color() | strMsg:str=" ", magic:bool=False | Function to color and format terminal output |\n| cf.show_emoji() | strInput=" " | Function which prints Emojis |\n| cf.download_this_file() | url=" " | Downloads a given url file to BOT output folder or Browser\'s Download folder |\n| cf.pause_program() | seconds="5" | Stops the program for given seconds |\n\n<br>\n<img src="https://github.com/ClointFusion/Image_ICONS_GIFs/blob/main/miscallaneous.gif?raw=true" height="400">    \n\n\n# BOTS made out of ClointFusion\n\n### Outlook Email BOT implemented using ClointFusion\n\n<img src="https://github.com/ClointFusion/Image_ICONS_GIFs/blob/main/Functions%20Light%20GIFs/Gmail_and_Outlook_BOT.gif?raw=true" height="400">\n\n<br>\n\n# We love your contribution\n\nContribute to us by giving a star, writing articles on `ClointFusion`, giving comments, reporting bugs, bug fixes, feature enhancements, adding documentation, and many other ways. \n\n\n## Invitation to our Monthly Branded Hackathon\n\nWe also invite everyone to take part in our monthly branded event, the `ClointFusion Hackathon`, and stand a chance to work with us.\n\nCheckout our Hackathon Website for more details here: [ClointFusion Hackathon](https://sites.google.com/view/clointfusion-hackathon\n)\n\n<br>\n\n## Date &#10084;&#65039; with ClointFusion\n\nThis an initiative for fast track entry into our growing workforce. For more details, please visit: [Date with ClointFusion](https://lnkd.in/gh_r9YB)\n\n\n## Acknowledgements\n\nWe sincerely thanks to all it\'s dependent packages for the great contribution, which made `ClointFusion` possible!\n\nPlease find all the dependencies [here](https://openbase.com/python/ClointFusion/dependencies) \n<!-- \n<a href="https://openbase.com/python/ClointFusion/dependencies" target="blank">ClointFusion thanks all its dependent packages for the great contribution, which has made ClointFusion possible !</a> -->\n\n\n## Need help in Building BOTS?\n\nWrite us by clicking below<br>\n<div align=\'left\'>\n<a href="mailto:ClointFusion@cloint.com" target="_blank"><img src="https://img.shields.io/badge/Gmail-D14836?style=for-the-badge&logo=gmail&logoColor=white" alt="Gmail"></a> &nbsp;\n</div>\n\n---\n\nDisclaimer: We collect anonymous data on installation and usage statistics in order to improve our product and provide better services.',
    'author': 'Clointfusion',
    'author_email': 'clointfusion@cloint.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/ClointFusion/ClointFusion',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.7.1,<4.0.0',
}


setup(**setup_kwargs)
