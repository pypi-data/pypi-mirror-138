# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import data_provider_pb2 as data__provider__pb2


class GpuDataManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PushData = channel.unary_unary(
                '/yandex.cloud.priv.ai.platform.v1.GpuDataManager/PushData',
                request_serializer=data__provider__pb2.DataBlobRequest.SerializeToString,
                response_deserializer=data__provider__pb2.DataBlobResponse.FromString,
                )
        self.StopTraining = channel.unary_unary(
                '/yandex.cloud.priv.ai.platform.v1.GpuDataManager/StopTraining',
                request_serializer=data__provider__pb2.RoomStopTrainingRequest.SerializeToString,
                response_deserializer=data__provider__pb2.RoomStopTrainingResponse.FromString,
                )
        self.TrainingStatus = channel.stream_stream(
                '/yandex.cloud.priv.ai.platform.v1.GpuDataManager/TrainingStatus',
                request_serializer=data__provider__pb2.RoomTrainingStatusRequest.SerializeToString,
                response_deserializer=data__provider__pb2.RoomTrainingStatusResponse.FromString,
                )
        self.DataStreaming = channel.stream_stream(
                '/yandex.cloud.priv.ai.platform.v1.GpuDataManager/DataStreaming',
                request_serializer=data__provider__pb2.StreamingRequest.SerializeToString,
                response_deserializer=data__provider__pb2.StreamingResponse.FromString,
                )


class GpuDataManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PushData(self, request, context):
        """push from room to GPU Node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopTraining(self, request, context):
        """push from room to GPU Node to stop training
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrainingStatus(self, request_iterator, context):
        """mounted disks read status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DataStreaming(self, request_iterator, context):
        """bidirectional stream between dataloader and manager
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GpuDataManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PushData': grpc.unary_unary_rpc_method_handler(
                    servicer.PushData,
                    request_deserializer=data__provider__pb2.DataBlobRequest.FromString,
                    response_serializer=data__provider__pb2.DataBlobResponse.SerializeToString,
            ),
            'StopTraining': grpc.unary_unary_rpc_method_handler(
                    servicer.StopTraining,
                    request_deserializer=data__provider__pb2.RoomStopTrainingRequest.FromString,
                    response_serializer=data__provider__pb2.RoomStopTrainingResponse.SerializeToString,
            ),
            'TrainingStatus': grpc.stream_stream_rpc_method_handler(
                    servicer.TrainingStatus,
                    request_deserializer=data__provider__pb2.RoomTrainingStatusRequest.FromString,
                    response_serializer=data__provider__pb2.RoomTrainingStatusResponse.SerializeToString,
            ),
            'DataStreaming': grpc.stream_stream_rpc_method_handler(
                    servicer.DataStreaming,
                    request_deserializer=data__provider__pb2.StreamingRequest.FromString,
                    response_serializer=data__provider__pb2.StreamingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'yandex.cloud.priv.ai.platform.v1.GpuDataManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GpuDataManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PushData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/yandex.cloud.priv.ai.platform.v1.GpuDataManager/PushData',
            data__provider__pb2.DataBlobRequest.SerializeToString,
            data__provider__pb2.DataBlobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopTraining(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/yandex.cloud.priv.ai.platform.v1.GpuDataManager/StopTraining',
            data__provider__pb2.RoomStopTrainingRequest.SerializeToString,
            data__provider__pb2.RoomStopTrainingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TrainingStatus(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/yandex.cloud.priv.ai.platform.v1.GpuDataManager/TrainingStatus',
            data__provider__pb2.RoomTrainingStatusRequest.SerializeToString,
            data__provider__pb2.RoomTrainingStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DataStreaming(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/yandex.cloud.priv.ai.platform.v1.GpuDataManager/DataStreaming',
            data__provider__pb2.StreamingRequest.SerializeToString,
            data__provider__pb2.StreamingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
