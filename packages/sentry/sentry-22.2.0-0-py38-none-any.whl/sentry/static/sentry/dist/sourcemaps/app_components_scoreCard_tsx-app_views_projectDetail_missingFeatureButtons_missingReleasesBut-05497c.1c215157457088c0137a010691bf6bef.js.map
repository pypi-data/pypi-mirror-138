{"version":3,"file":"chunks/app_components_scoreCard_tsx-app_views_projectDetail_missingFeatureButtons_missingReleasesBut-05497c.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/scoreCard.tsx","webpack:///./app/views/projectDetail/missingFeatureButtons/missingReleasesButtons.tsx","webpack:///./app/views/releases/list/releasesPromo.tsx","webpack:///./app/views/releases/utils/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel} from 'sentry/components/panels';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport overflowEllipsis from 'sentry/styles/overflowEllipsis';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport {Theme} from 'sentry/utils/theme';\n\ntype Props = {\n  title: React.ReactNode;\n  className?: string;\n  help?: React.ReactNode;\n  score?: React.ReactNode;\n  trend?: React.ReactNode;\n  trendStatus?: 'good' | 'bad';\n};\n\nfunction ScoreCard({title, score, help, trend, trendStatus, className}: Props) {\n  return (\n    <ScorePanel className={className}>\n      <HeaderTitle>\n        <Title>{title}</Title>\n        {help && <QuestionTooltip title={help} size=\"sm\" position=\"top\" />}\n      </HeaderTitle>\n\n      <ScoreWrapper>\n        <Score>{score ?? '\\u2014'}</Score>\n        {defined(trend) && (\n          <Trend trendStatus={trendStatus}>\n            <TextOverflow>{trend}</TextOverflow>\n          </Trend>\n        )}\n      </ScoreWrapper>\n    </ScorePanel>\n  );\n}\n\nfunction getTrendColor(p: TrendProps & {theme: Theme}) {\n  switch (p.trendStatus) {\n    case 'good':\n      return p.theme.green300;\n    case 'bad':\n      return p.theme.red300;\n    default:\n      return p.theme.gray300;\n  }\n}\n\nexport const ScorePanel = styled(Panel)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: ${space(2)} ${space(3)};\n  min-height: 96px;\n`;\n\nexport const HeaderTitle = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n  align-items: center;\n  width: fit-content;\n`;\n\nconst Title = styled('div')`\n  ${overflowEllipsis};\n`;\n\nexport const ScoreWrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  max-width: 100%;\n`;\n\nexport const Score = styled('span')`\n  flex-shrink: 1;\n  font-size: 32px;\n  line-height: 1;\n  color: ${p => p.theme.headingColor};\n  white-space: nowrap;\n`;\n\ntype TrendProps = {trendStatus: Props['trendStatus']};\n\nexport const Trend = styled('div')<TrendProps>`\n  color: ${getTrendColor};\n  margin-left: ${space(1)};\n  line-height: 1;\n  overflow: hidden;\n`;\n\nexport default ScoreCard;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport FeatureTourModal from 'sentry/components/modals/featureTourModal';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {RELEASES_TOUR_STEPS} from 'sentry/views/releases/list/releasesPromo';\n\nconst DOCS_URL = 'https://docs.sentry.io/product/releases/';\nconst DOCS_HEALTH_URL = 'https://docs.sentry.io/product/releases/health/';\n\ntype Props = {\n  organization: Organization;\n  health?: boolean;\n  projectId?: string;\n};\n\nfunction MissingReleasesButtons({organization, health, projectId}: Props) {\n  function handleTourAdvance(step: number, duration: number) {\n    trackAnalyticsEvent({\n      eventKey: 'project_detail.releases_tour.advance',\n      eventName: 'Project Detail: Releases Tour Advance',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId && parseInt(projectId, 10),\n      step,\n      duration,\n    });\n  }\n\n  function handleClose(step: number, duration: number) {\n    trackAnalyticsEvent({\n      eventKey: 'project_detail.releases_tour.close',\n      eventName: 'Project Detail: Releases Tour Close',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId && parseInt(projectId, 10),\n      step,\n      duration,\n    });\n  }\n\n  return (\n    <MissingReleaseButtonBar gap={1}>\n      <Button\n        size=\"small\"\n        priority=\"primary\"\n        external\n        href={health ? DOCS_HEALTH_URL : DOCS_URL}\n      >\n        {t('Start Setup')}\n      </Button>\n      {!health && (\n        <FeatureTourModal\n          steps={RELEASES_TOUR_STEPS}\n          onAdvance={handleTourAdvance}\n          onCloseModal={handleClose}\n          doneText={t('Start Setup')}\n          doneUrl={health ? DOCS_HEALTH_URL : DOCS_URL}\n        >\n          {({showModal}) => (\n            <Button size=\"small\" onClick={showModal}>\n              {t('Get a tour')}\n            </Button>\n          )}\n        </FeatureTourModal>\n      )}\n    </MissingReleaseButtonBar>\n  );\n}\n\nexport const MissingReleaseButtonBar = styled(ButtonBar)`\n  grid-template-columns: minmax(auto, max-content) minmax(auto, max-content);\n`;\n\nexport default MissingReleasesButtons;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport emptyStateImg from 'sentry-images/spot/releases-empty-state.svg';\nimport commitImage from 'sentry-images/spot/releases-tour-commits.svg';\nimport emailImage from 'sentry-images/spot/releases-tour-email.svg';\nimport resolutionImage from 'sentry-images/spot/releases-tour-resolution.svg';\nimport statsImage from 'sentry-images/spot/releases-tour-stats.svg';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport FeatureTourModal, {\n  TourImage,\n  TourStep,\n  TourText,\n} from 'sentry/components/modals/featureTourModal';\nimport OnboardingPanel from 'sentry/components/onboardingPanel';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\n\nconst releasesSetupUrl = 'https://docs.sentry.io/product/releases/';\n\nconst docsLink = (\n  <Button external href={releasesSetupUrl}>\n    {t('Setup')}\n  </Button>\n);\n\nexport const RELEASES_TOUR_STEPS: TourStep[] = [\n  {\n    title: t('Suspect Commits'),\n    image: <TourImage src={commitImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Sentry suggests which commit caused an issue and who is likely responsible so you can triage.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Release Stats'),\n    image: <TourImage src={statsImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Get an overview of the commits in each release, and which issues were introduced or fixed.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Easily Resolve'),\n    image: <TourImage src={resolutionImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Automatically resolve issues by including the issue number in your commit message.'\n        )}\n      </TourText>\n    ),\n    actions: docsLink,\n  },\n  {\n    title: t('Deploy Emails'),\n    image: <TourImage src={emailImage} />,\n    body: (\n      <TourText>\n        {t(\n          'Receive email notifications about when your code gets deployed. This can be customized in settings.'\n        )}\n      </TourText>\n    ),\n  },\n];\n\ntype Props = {\n  organization: Organization;\n  projectId?: number;\n};\n\nclass ReleasesPromo extends Component<Props> {\n  componentDidMount() {\n    const {organization, projectId} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'releases.landing_card_viewed',\n      eventName: 'Releases: Landing Card Viewed',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId,\n    });\n  }\n\n  handleTourAdvance = (step: number, duration: number) => {\n    const {organization, projectId} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'releases.tour.advance',\n      eventName: 'Releases: Tour Advance',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId,\n      step,\n      duration,\n    });\n  };\n\n  handleClose = (step: number, duration: number) => {\n    const {organization, projectId} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey: 'releases.tour.close',\n      eventName: 'Releases: Tour Close',\n      organization_id: parseInt(organization.id, 10),\n      project_id: projectId,\n      step,\n      duration,\n    });\n  };\n\n  render() {\n    return (\n      <OnboardingPanel image={<img src={emptyStateImg} />}>\n        <h3>{t('Demystify Releases')}</h3>\n        <p>\n          {t(\n            'Did you know how many errors your latest release triggered? We do. And more, too.'\n          )}\n        </p>\n        <ButtonList gap={1}>\n          <Button priority=\"primary\" href={releasesSetupUrl} external>\n            {t('Start Setup')}\n          </Button>\n          <FeatureTourModal\n            steps={RELEASES_TOUR_STEPS}\n            onAdvance={this.handleTourAdvance}\n            onCloseModal={this.handleClose}\n            doneText={t('Start Setup')}\n            doneUrl={releasesSetupUrl}\n          >\n            {({showModal}) => (\n              <Button priority=\"default\" onClick={showModal}>\n                {t('Take a Tour')}\n              </Button>\n            )}\n          </FeatureTourModal>\n        </ButtonList>\n      </OnboardingPanel>\n    );\n  }\n}\n\nconst ButtonList = styled(ButtonBar)`\n  grid-template-columns: repeat(auto-fit, minmax(130px, max-content));\n`;\n\nexport default ReleasesPromo;\n","import {Location} from 'history';\nimport pick from 'lodash/pick';\nimport round from 'lodash/round';\nimport moment from 'moment';\n\nimport {DateTimeObject} from 'sentry/components/charts/utils';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {PAGE_URL_PARAM, URL_PARAM} from 'sentry/constants/pageFilters';\nimport {desktop, mobile, PlatformKey} from 'sentry/data/platformCategories';\nimport {t, tct} from 'sentry/locale';\nimport {Release, ReleaseStatus} from 'sentry/types';\nimport {Theme} from 'sentry/utils/theme';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport {IssueSortOptions} from 'sentry/views/issueList/utils';\n\nexport const CRASH_FREE_DECIMAL_THRESHOLD = 95;\n\nexport const roundDuration = (seconds: number) => {\n  return round(seconds, seconds > 60 ? 0 : 3);\n};\n\nexport const getCrashFreePercent = (\n  percent: number,\n  decimalThreshold = CRASH_FREE_DECIMAL_THRESHOLD,\n  decimalPlaces = 3\n): number => {\n  const roundedValue = round(percent, percent > decimalThreshold ? decimalPlaces : 0);\n  if (roundedValue === 100 && percent < 100) {\n    return (\n      Math.floor(percent * Math.pow(10, decimalPlaces)) / Math.pow(10, decimalPlaces)\n    );\n  }\n\n  return roundedValue;\n};\n\nexport const displayCrashFreePercent = (\n  percent: number,\n  decimalThreshold = CRASH_FREE_DECIMAL_THRESHOLD,\n  decimalPlaces = 3\n): string => {\n  if (isNaN(percent)) {\n    return '\\u2015';\n  }\n\n  if (percent < 1 && percent > 0) {\n    return `<1\\u0025`;\n  }\n\n  const rounded = getCrashFreePercent(\n    percent,\n    decimalThreshold,\n    decimalPlaces\n  ).toLocaleString();\n\n  return `${rounded}\\u0025`;\n};\n\nexport const getSessionStatusPercent = (percent: number, absolute = true) => {\n  return round(absolute ? Math.abs(percent) : percent, 3);\n};\n\nexport const displaySessionStatusPercent = (percent: number, absolute = true) => {\n  return `${getSessionStatusPercent(percent, absolute).toLocaleString()}\\u0025`;\n};\n\nexport const getReleaseNewIssuesUrl = (\n  orgSlug: string,\n  projectId: string | number | null,\n  version: string\n) => {\n  return {\n    pathname: `/organizations/${orgSlug}/issues/`,\n    query: {\n      project: projectId,\n      // we are resetting time selector because releases' new issues count doesn't take time selector into account\n      statsPeriod: undefined,\n      start: undefined,\n      end: undefined,\n      query: new MutableSearch([`firstRelease:${version}`]).formatString(),\n      sort: IssueSortOptions.FREQ,\n    },\n  };\n};\n\nexport const getReleaseUnhandledIssuesUrl = (\n  orgSlug: string,\n  projectId: string | number | null,\n  version: string,\n  dateTime: DateTimeObject = {}\n) => {\n  return {\n    pathname: `/organizations/${orgSlug}/issues/`,\n    query: {\n      ...dateTime,\n      project: projectId,\n      query: new MutableSearch([\n        `release:${version}`,\n        'error.unhandled:true',\n      ]).formatString(),\n      sort: IssueSortOptions.FREQ,\n    },\n  };\n};\n\nexport const getReleaseHandledIssuesUrl = (\n  orgSlug: string,\n  projectId: string | number | null,\n  version: string,\n  dateTime: DateTimeObject = {}\n) => {\n  return {\n    pathname: `/organizations/${orgSlug}/issues/`,\n    query: {\n      ...dateTime,\n      project: projectId,\n      query: new MutableSearch([\n        `release:${version}`,\n        'error.handled:true',\n      ]).formatString(),\n      sort: IssueSortOptions.FREQ,\n    },\n  };\n};\n\nexport const isReleaseArchived = (release: Release) =>\n  release.status === ReleaseStatus.Archived;\n\nexport type ReleaseBounds = {releaseEnd?: string | null; releaseStart?: string | null};\n\nexport function getReleaseBounds(release?: Release): ReleaseBounds {\n  const {lastEvent, currentProjectMeta, dateCreated} = release || {};\n  const {sessionsUpperBound} = currentProjectMeta || {};\n\n  const releaseStart = moment(dateCreated).startOf('minute').utc().format();\n  const releaseEnd = moment(\n    (moment(sessionsUpperBound).isAfter(lastEvent) ? sessionsUpperBound : lastEvent) ??\n      undefined\n  )\n    .endOf('minute')\n    .utc()\n    .format();\n\n  if (moment(releaseStart).isSame(releaseEnd, 'minute')) {\n    return {\n      releaseStart,\n      releaseEnd: moment(releaseEnd).add(1, 'minutes').utc().format(),\n    };\n  }\n\n  const thousandDaysAfterReleaseStart = moment(releaseStart).add('999', 'days');\n  if (thousandDaysAfterReleaseStart.isBefore(releaseEnd)) {\n    // if the release spans for more than thousand days, we need to clamp it\n    // (otherwise we would hit the backend limit for the amount of data buckets)\n    return {\n      releaseStart,\n      releaseEnd: thousandDaysAfterReleaseStart.utc().format(),\n    };\n  }\n\n  return {\n    releaseStart,\n    releaseEnd,\n  };\n}\n\ntype GetReleaseParams = {\n  location: Location;\n  releaseBounds: ReleaseBounds;\n};\n\nexport function getReleaseParams({location, releaseBounds}: GetReleaseParams) {\n  const params = normalizeDateTimeParams(\n    pick(location.query, [\n      ...Object.values(URL_PARAM),\n      ...Object.values(PAGE_URL_PARAM),\n      'cursor',\n    ]),\n    {\n      allowAbsolutePageDatetime: true,\n      allowEmptyPeriod: true,\n    }\n  );\n  if (\n    !Object.keys(params).some(param =>\n      [URL_PARAM.START, URL_PARAM.END, URL_PARAM.UTC, URL_PARAM.PERIOD].includes(param)\n    )\n  ) {\n    params[URL_PARAM.START] = releaseBounds.releaseStart;\n    params[URL_PARAM.END] = releaseBounds.releaseEnd;\n  }\n\n  return params;\n}\n\nconst adoptionStagesLink = (\n  <ExternalLink href=\"https://docs.sentry.io/product/releases/health/#adoption-stages\" />\n);\n\nexport const ADOPTION_STAGE_LABELS: Record<\n  string,\n  {name: string; tooltipTitle: JSX.Element; type: keyof Theme['tag']}\n> = {\n  low_adoption: {\n    name: t('Low Adoption'),\n    tooltipTitle: tct(\n      'This release has a low percentage of sessions compared to other releases in this project. [link:Learn more]',\n      {link: adoptionStagesLink}\n    ),\n    type: 'warning',\n  },\n  adopted: {\n    name: t('Adopted'),\n    tooltipTitle: tct(\n      'This release has a high percentage of sessions compared to other releases in this project. [link:Learn more]',\n      {link: adoptionStagesLink}\n    ),\n    type: 'success',\n  },\n  replaced: {\n    name: t('Replaced'),\n    tooltipTitle: tct(\n      'This release was previously Adopted, but now has a lower level of sessions compared to other releases in this project. [link:Learn more]',\n      {link: adoptionStagesLink}\n    ),\n    type: 'default',\n  },\n};\n\nexport const isMobileRelease = (releaseProjectPlatform: PlatformKey) =>\n  ([...mobile, ...desktop] as string[]).includes(releaseProjectPlatform);\n"],"names":["ScoreCard","title","score","help","trend","trendStatus","className","ScorePanel","HeaderTitle","Title","size","position","ScoreWrapper","Score","defined","Trend","getTrendColor","p","theme","green300","red300","gray300","Panel","space","overflowEllipsis","headingColor","DOCS_URL","DOCS_HEALTH_URL","MissingReleasesButtons","organization","health","projectId","MissingReleaseButtonBar","gap","priority","external","href","t","steps","RELEASES_TOUR_STEPS","onAdvance","step","duration","trackAnalyticsEvent","eventKey","eventName","organization_id","parseInt","id","project_id","onCloseModal","doneText","doneUrl","showModal","onClick","ButtonBar","releasesSetupUrl","docsLink","image","src","commitImage","body","actions","statsImage","resolutionImage","emailImage","ReleasesPromo","Component","this","props","componentDidMount","render","emptyStateImg","ButtonList","handleTourAdvance","handleClose","CRASH_FREE_DECIMAL_THRESHOLD","roundDuration","seconds","round","getCrashFreePercent","percent","decimalThreshold","decimalPlaces","roundedValue","Math","floor","pow","displayCrashFreePercent","isNaN","rounded","toLocaleString","getSessionStatusPercent","absolute","abs","displaySessionStatusPercent","getReleaseNewIssuesUrl","orgSlug","version","pathname","query","project","statsPeriod","undefined","start","end","MutableSearch","formatString","sort","IssueSortOptions","getReleaseUnhandledIssuesUrl","dateTime","getReleaseHandledIssuesUrl","isReleaseArchived","release","status","ReleaseStatus","getReleaseBounds","lastEvent","currentProjectMeta","dateCreated","sessionsUpperBound","releaseStart","moment","startOf","utc","format","releaseEnd","isAfter","endOf","isSame","add","thousandDaysAfterReleaseStart","isBefore","getReleaseParams","location","releaseBounds","params","normalizeDateTimeParams","pick","Object","values","URL_PARAM","PAGE_URL_PARAM","allowAbsolutePageDatetime","allowEmptyPeriod","keys","some","param","includes","adoptionStagesLink","ADOPTION_STAGE_LABELS","low_adoption","name","tooltipTitle","tct","link","type","adopted","replaced","isMobileRelease","releaseProjectPlatform","mobile","desktop"],"sourceRoot":""}