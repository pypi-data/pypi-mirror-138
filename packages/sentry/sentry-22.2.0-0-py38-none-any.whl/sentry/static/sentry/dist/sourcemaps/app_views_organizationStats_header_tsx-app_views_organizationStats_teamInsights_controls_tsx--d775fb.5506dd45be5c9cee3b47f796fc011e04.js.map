{"version":3,"file":"chunks/app_views_organizationStats_header_tsx-app_views_organizationStats_teamInsights_controls_tsx--d775fb.xxxxxxxxxxxxxxxxxxxx.js","mappings":"kuBAaA,SAASA,EAAT,GAA6D,IAA9B,UAACC,KAAcC,GAAe,EAC3D,MAAOC,EAAgBC,IAAqBC,EAAAA,EAAAA,WAAS,GAErD,OACE,QAACC,EAAD,CAAcL,UAAWA,EAAWE,eAAgBA,EAApD,UACE,QAAC,IAAD,CAEEI,OAAO,QAACC,EAAD,WAAgBC,EAAAA,EAAAA,GAAE,iBACzBC,iBAAkBC,GAAUP,EAAkBO,GAC9CC,gBAAiBC,EAAAA,MACbX,GAJE,UAASA,EAAMY,kBAAkBZ,EAAMa,aAAab,EAAMc,WAAWd,EAAMe,qBAAqBf,EAAMgB,mBAN3GlB,EAAAA,YAAAA,wBAgBT,MAAMM,GAAe,OAAOa,EAAAA,GAAP,sBAAH,kFAMFC,GAAKA,EAAEC,MAAMC,YANX,sBAOIF,GAAKA,EAAEC,MAAME,QAPjB,mBAQCH,GACfA,EAAEjB,eACG,GAAEiB,EAAEC,MAAMG,gBAAgBJ,EAAEC,MAAMG,mBACnCJ,EAAEC,MAAMG,cAXE,kCAcHJ,GAAKA,EAAEC,MAAMI,gBAdV,WAePL,GAAKA,EAAEC,MAAMK,WAfN,wEAyBDC,EAAAA,EAAAA,GAAM,GAzBL,gEAoCZnB,GAAgB,OAAO,OAAP,sBAAH,0CAGRY,GAAKA,EAAEC,MAAMK,WAHL,uCAUnB,K,yaC7DA,SAASE,EAAT,GAAuD,IAAlC,aAACC,EAAD,UAAeC,GAAmB,EACrD,OACE,QAAC,KAAD,YACE,QAAC,KAAD,WACE,QAACC,EAAD,WAAoBtB,EAAAA,EAAAA,GAAE,cAExB,QAAC,KAAD,UACiB,UAAdqB,IACC,QAAC,KAAD,CACEE,OAAOvB,EAAAA,EAAAA,GAAE,8BACTwB,KAAK,QACLC,KAAK,iEAHP,UAKGzB,EAAAA,EAAAA,GAAE,sBAIT,QAAC,KAAD,CAAsB0B,YAAU,EAAhC,WACE,cAAIlC,UAA4B,UAAd6B,EAAwB,SAAW,GAArD,UACE,QAAC,IAAD,CAAMM,GAAK,kBAAiBP,EAAaQ,cAAzC,UAAyD5B,EAAAA,EAAAA,GAAE,cAE7D,cAAIR,UAA4B,WAAd6B,EAAyB,SAAW,GAAtD,UACE,QAAC,IAAD,CAAMM,GAAK,kBAAiBP,EAAaQ,qBAAzC,UACG5B,EAAAA,EAAAA,GAAE,eAGP,cAAIR,UAA4B,WAAd6B,EAAyB,SAAW,GAAtD,UACE,QAAC,IAAD,CAAMM,GAAK,kBAAiBP,EAAaQ,qBAAzC,UACG5B,EAAAA,EAAAA,GAAE,oBA5BNmB,EAAAA,YAAAA,cAoCT,UAEMG,GAAoB,OAAOO,EAAAA,GAAP,qBAAH,eACPX,EAAAA,EAAAA,GAAM,IADC,M,ixBCjCvB,MAEMY,EAAoB,CACxB,kBACA,YACA,UACA,UACA,eACA,YACA,OACA,QACA,SACA,QAOF,SAASC,EAAT,GAAmE,UAAxC,SAACC,EAAD,OAAWC,EAAX,YAAmBC,GAAqB,EACjE,MAAMd,GAAee,EAAAA,EAAAA,KACfC,GAAcC,EAAAA,EAAAA,KACdzB,GAAQ0B,EAAAA,EAAAA,KAERC,EAAK,UAAGP,MAAAA,OAAH,EAAGA,EAAUO,aAAb,QAAsB,GAC3BC,EAAmB,8BAA6BpB,EAAaQ,OA6BnE,SAASa,EAAcC,GAOrB,MAAMC,EAAkBC,GAAAA,CAAKF,EAAWZ,GAElCe,EAAe,IAChBb,EACHO,MAAO,IACFA,KACAI,IAMP,OAFAV,EAAOa,KAAKD,GAELA,EAGT,MAAM,OAACE,EAAD,MAASzC,EAAT,IAAgBC,EAAhB,IAAqBC,IAAOwC,EAAAA,EAAAA,IAAaT,GAE/C,OACE,QAACU,EAAD,YACE,QAACC,EAAD,CACEC,KAAK,cACLC,cAAcpD,EAAAA,EAAAA,GAAE,UAChBqD,MAAOnB,MAAAA,OAAF,EAAEA,EAAaN,KACpB0B,SAAUC,IAAUC,OAzDAC,EAyDiBF,EAAOG,MAAMC,GAxDtDC,EAAAA,EAAAA,QAAqBpB,EAAiBiB,QACtChB,EAAc,CAACoB,KAAMJ,IAFvB,IAA0BA,GA0DpBK,WAAY1B,OAAc2B,EAAYC,GAAcA,EAAWC,SAC/DC,OAAQ,CACNC,YAAYC,GACV,MAAMC,EAAS,CACbC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,SAAU7D,EAAMI,eAChB,UAAW,IACNoD,EAAS,WACZM,MAAO9D,EAAMK,UACb0D,aAAazD,EAAAA,EAAAA,GAAM,KACnB0D,YAAY1D,EAAAA,EAAAA,GAAM,MAGtB,MAAO,IAAIkD,KAAaC,IAE1BQ,MAAO,CAACT,EAAeU,KAAhB,IACFV,EACHE,QAAS,OACTS,oBAAqB,kBACrBP,WAAY,SACZQ,SAAS9D,EAAAA,EAAAA,GAAM,GACf,UAAW,CACT+D,gBAAiBH,EAAMlE,MAAMsE,oBAC7BC,OAAQ,GACRC,MAAO,GACPrE,aAAc,EACdsE,QAAS,KACTf,QAAS,eAKjB,QAACgB,EAAD,CACElE,aAAcA,EACdf,SAAU0C,MAAAA,EAAAA,EAAU,GACpBzC,MAAOA,MAAAA,EAAAA,EAAS,KAChBC,IAAKA,MAAAA,EAAAA,EAAO,KACZC,IAAKA,MAAAA,EAAAA,EAAO,KACZ+E,SA7FN,SAA8BC,GAC5B,MAAM,MAAClF,EAAD,IAAQC,EAAR,SAAaF,EAAb,IAAuBG,GAAOgF,EAEpC,GAAIlF,GAASC,EAAK,CAChB,MAAMkF,EAASjF,EAAMkF,IAAAA,IAAaA,IAElC,OAAOjD,EAAc,CACnBkD,qBAAiB5B,EACjB6B,UAAWH,EAAOnF,GAAOuF,SACzBC,QAASL,EAAOlF,GAAKsF,SACrBE,QAASvF,MAAAA,EAAAA,OAAOuD,IAIpB,OAAOtB,EAAc,CACnBkD,gBAAiBtF,QAAY0D,EAC7B6B,eAAW7B,EACX+B,aAAS/B,EACTgC,aAAShC,KA4EPiC,cAAc,EACd7F,gBAAiB,CACf,OAAOH,EAAAA,EAAAA,GAAE,gBACT,MAAMA,EAAAA,EAAAA,GAAE,gBACR,MAAiCA,EAAAA,EAAAA,GAAE,gBACnC,OAAOA,EAAAA,EAAAA,GAAE,uBAhHV+B,EAAAA,YAAAA,oBAuHT,UAEMkB,GAAkB,OAAO,MAAP,qBAAH,wCAGZ/B,EAAAA,EAAAA,GAAM,GAHM,mBAIFA,EAAAA,EAAAA,GAAM,GAJJ,wBAMEP,GAAKA,EAAEC,MAAMqF,YAAY,IAN3B,uCAWf/C,GAAqB,OAAOgD,EAAAA,EAAP,qBAAH,qBAENvF,GAAKA,EAAEC,MAAMuF,iBAFP,MAMlBb,GAA8B,OAAO/F,EAAAA,EAAP,qBAAH,8D,kTCtKjC,SAAS6G,EAAT,GAAgE,IAAvC,MAAC7E,EAAD,YAAQ8E,EAAR,SAAqBC,GAAkB,EAC9D,OACE,QAACC,EAAD,YACE,QAACC,EAAD,YACE,QAACC,EAAD,UAAQlF,KACR,QAACmF,EAAD,UAAcL,QAEhB,QAACM,EAAD,UAAaL,OAPVF,EAAAA,YAAAA,kBAYT,UAEMG,GAAU,OAAO,MAAP,qBAAH,qBACS5F,GAAKA,EAAEC,MAAME,QADtB,mBAEMH,GAAKA,EAAEC,MAAMG,cAFnB,gCAIMG,EAAAA,EAAAA,GAAM,GAJZ,8CAOUP,GAAKA,EAAEC,MAAMqF,YAAY,IAPnC,0BAYPO,GAAY,OAAO,MAAP,qBAAH,YACFtF,EAAAA,EAAAA,GAAM,GADJ,KACUA,EAAAA,EAAAA,GAAM,GADhB,6BAEcP,GAAKA,EAAEC,MAAME,QAF3B,wBAIQH,GAAKA,EAAEC,MAAMqF,YAAY,IAJjC,6CAMetF,GAAKA,EAAEC,MAAME,QAN5B,sBAWT2F,GAAQ,OAAO,MAAP,qBAAH,cACI9F,GAAKA,EAAEC,MAAMgG,eADjB,gBAEK1F,EAAAA,EAAAA,GAAM,IAFX,KAKLwF,GAAc,OAAO,MAAP,qBAAH,UACN/F,GAAKA,EAAEC,MAAMiG,SADP,eAEFlG,GAAKA,EAAEC,MAAMI,gBAFX,KAKX2F,GAAa,OAAO,MAAP,qBAAH,wC,6NCrDT,MAAMG,GAAwB,OAAO,MAAP,sBAAH,0DAKrBC,GAAe,OAAOC,EAAAA,EAAP,sBAAH,yC,6VCElB,SAASC,EAAwBC,GACtC,MAAMC,EAAaD,EAAKE,MACtB,CAACC,EAAGC,IAAM,IAAIC,KAAKF,EAAElE,MAAMqE,UAAY,IAAID,KAAKD,EAAEnE,MAAMqE,YAE1D,OAAOC,GAAAA,CAAMN,EAAY,GAAGO,KAAIC,IACvB,CACLxE,KAAMwE,EAAK,GAAGxE,KACdE,MAAOsE,EAAKC,QAAO,CAACC,EAAOC,IAAgBD,EAAQC,EAAYzE,OAAO,OAQrE,SAAS0E,EACdb,GAEA,OAAOc,OAAOC,QAAQf,GAAMQ,KAAI,QAAEQ,EAAQC,GAAV,QAAsB,CACpD9E,MAAO8E,EACPhF,KAAM,IAAIoE,KAAKW,GAAQV,cAOpB,SAASY,EAAwClB,GAItD,MAAO,IAHYA,EAAKmB,QAAOC,GAAKC,KAAKC,MAAMF,EAAEG,OAAS,OACtCvB,EAAKmB,QAAOC,GAAKC,KAAKC,MAAMF,EAAEG,OAAS,OACzCvB,EAAKmB,QAAOC,GAA6B,IAAxBC,KAAKC,MAAMF,EAAEG,UAI3C,MAAMC,EACXC,IAEO,CACLC,YAAaD,EACbE,KAAM,WACNC,IAAK,EACLC,UAAW,CACTC,cAAc,EACdC,cAAc,EACdC,UAAYC,GACHzD,GAAAA,CAAO,IAAI6B,KAAK6B,OAAOD,KAAQtD,OAAO,YAQ9C,SAAS7C,EACdT,GAEA,MAAM,MACJjC,EADI,IAEJC,EAFI,YAGJ8I,EACA7I,IAAK8I,IACHC,EAAAA,EAAAA,IAAwBhH,EAAO,CACjCiH,kBAAkB,EAClBC,uBAAuB,EACvBC,2BAA2B,IAG7B,IAAKL,IAAgB/I,IAAUC,EAC7B,MAAO,CAACwC,OAjB0B,MAqBpC,GAAIsG,EACF,MAAO,CAACtG,OAAQsG,GAGlB,MAAM7I,EAAoB,SAAd8I,EACZ,OAAIhJ,GAASC,EACJC,EACH,CACEF,MAAOoF,IAAAA,IAAWpF,GAAOuF,SACzBtF,IAAKmF,IAAAA,IAAWnF,GAAKsF,SACrBrF,IAAAA,GAEF,CACEF,MAAOoF,GAAAA,CAAOpF,GAAOE,MAAMqF,SAC3BtF,IAAKmF,GAAAA,CAAOnF,GAAKC,MAAMqF,SACvBrF,IAAAA,GAID,CAACuC,OAxC4B","sources":["webpack:///./app/components/pageTimeRangeSelector.tsx","webpack:///./app/views/organizationStats/header.tsx","webpack:///./app/views/organizationStats/teamInsights/controls.tsx","webpack:///./app/views/organizationStats/teamInsights/descriptionCard.tsx","webpack:///./app/views/organizationStats/teamInsights/styles.tsx","webpack:///./app/views/organizationStats/teamInsights/utils.tsx"],"sourcesContent":["import {useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport TimeRangeSelector from 'sentry/components/organizations/timeRangeSelector';\nimport {Panel} from 'sentry/components/panels';\nimport {DEFAULT_RELATIVE_PERIODS} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Props = React.ComponentProps<typeof TimeRangeSelector> & {\n  className?: string;\n};\n\nfunction PageTimeRangeSelector({className, ...props}: Props) {\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n\n  return (\n    <DropdownDate className={className} isCalendarOpen={isCalendarOpen}>\n      <TimeRangeSelector\n        key={`period:${props.relative}-start:${props.start}-end:${props.end}-utc:${props.utc}-defaultPeriod:${props.defaultPeriod}`}\n        label={<DropdownLabel>{t('Date Range:')}</DropdownLabel>}\n        onToggleSelector={isOpen => setIsCalendarOpen(isOpen)}\n        relativeOptions={DEFAULT_RELATIVE_PERIODS}\n        {...props}\n      />\n    </DropdownDate>\n  );\n}\n\nconst DropdownDate = styled(Panel)<{isCalendarOpen: boolean}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 42px;\n\n  background: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p =>\n    p.isCalendarOpen\n      ? `${p.theme.borderRadius} ${p.theme.borderRadius} 0 0`\n      : p.theme.borderRadius};\n  padding: 0;\n  margin: 0;\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.textColor};\n\n  /* TimeRangeRoot in TimeRangeSelector */\n  > div {\n    width: 100%;\n    align-self: stretch;\n  }\n\n  /* StyledItemHeader used to show selected value of TimeRangeSelector */\n  > div > div:first-child {\n    padding: 0 ${space(2)};\n  }\n\n  /* Menu that dropdowns from TimeRangeSelector */\n  > div > div:last-child {\n    /* Remove awkward 1px width difference on dropdown due to border */\n    box-sizing: content-box;\n    font-size: 1em;\n  }\n`;\n\nconst DropdownLabel = styled('span')`\n  text-align: left;\n  font-weight: 600;\n  color: ${p => p.theme.textColor};\n\n  > span:last-child {\n    font-weight: 400;\n  }\n`;\n\nexport default PageTimeRangeSelector;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport Link from 'sentry/components/links/link';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\n\ntype Props = {\n  activeTab: 'stats' | 'issues' | 'health';\n  organization: Organization;\n};\n\nfunction StatsHeader({organization, activeTab}: Props) {\n  return (\n    <Layout.Header>\n      <Layout.HeaderContent>\n        <StyledLayoutTitle>{t('Stats')}</StyledLayoutTitle>\n      </Layout.HeaderContent>\n      <Layout.HeaderActions>\n        {activeTab !== 'stats' && (\n          <Button\n            title={t('Send us feedback via email')}\n            size=\"small\"\n            href=\"mailto:workflow-feedback@sentry.io?subject=Team Stats Feedback\"\n          >\n            {t('Give Feedback')}\n          </Button>\n        )}\n      </Layout.HeaderActions>\n      <Layout.HeaderNavTabs underlined>\n        <li className={`${activeTab === 'stats' ? 'active' : ''}`}>\n          <Link to={`/organizations/${organization.slug}/stats/`}>{t('Usage')}</Link>\n        </li>\n        <li className={`${activeTab === 'issues' ? 'active' : ''}`}>\n          <Link to={`/organizations/${organization.slug}/stats/issues/`}>\n            {t('Issues')}\n          </Link>\n        </li>\n        <li className={`${activeTab === 'health' ? 'active' : ''}`}>\n          <Link to={`/organizations/${organization.slug}/stats/health/`}>\n            {t('Health')}\n          </Link>\n        </li>\n      </Layout.HeaderNavTabs>\n    </Layout.Header>\n  );\n}\n\nexport default StatsHeader;\n\nconst StyledLayoutTitle = styled(Layout.Title)`\n  margin-top: ${space(0.5)};\n`;\n","import {RouteComponentProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport pick from 'lodash/pick';\nimport moment from 'moment';\n\nimport TeamSelector from 'sentry/components/deprecatedforms/teamSelector';\nimport {ChangeData} from 'sentry/components/organizations/timeRangeSelector';\nimport PageTimeRangeSelector from 'sentry/components/pageTimeRangeSelector';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {DateString, TeamWithProjects} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport localStorage from 'sentry/utils/localStorage';\nimport useOrganization from 'sentry/utils/useOrganization';\n\nimport {dataDatetime} from './utils';\n\nconst INSIGHTS_DEFAULT_STATS_PERIOD = '8w';\n\nconst PAGE_QUERY_PARAMS = [\n  'pageStatsPeriod',\n  'pageStart',\n  'pageEnd',\n  'pageUtc',\n  'dataCategory',\n  'transform',\n  'sort',\n  'query',\n  'cursor',\n  'team',\n];\n\ntype Props = Pick<RouteComponentProps<{orgId: string}, {}>, 'router' | 'location'> & {\n  currentTeam?: TeamWithProjects;\n};\n\nfunction TeamStatsControls({location, router, currentTeam}: Props) {\n  const organization = useOrganization();\n  const isSuperuser = isActiveSuperuser();\n  const theme = useTheme();\n\n  const query = location?.query ?? {};\n  const localStorageKey = `teamInsightsSelectedTeamId:${organization.slug}`;\n\n  function handleChangeTeam(teamId: string) {\n    localStorage.setItem(localStorageKey, teamId);\n    setStateOnUrl({team: teamId});\n  }\n\n  function handleUpdateDatetime(datetime: ChangeData): LocationDescriptorObject {\n    const {start, end, relative, utc} = datetime;\n\n    if (start && end) {\n      const parser = utc ? moment.utc : moment;\n\n      return setStateOnUrl({\n        pageStatsPeriod: undefined,\n        pageStart: parser(start).format(),\n        pageEnd: parser(end).format(),\n        pageUtc: utc ?? undefined,\n      });\n    }\n\n    return setStateOnUrl({\n      pageStatsPeriod: relative || undefined,\n      pageStart: undefined,\n      pageEnd: undefined,\n      pageUtc: undefined,\n    });\n  }\n\n  function setStateOnUrl(nextState: {\n    pageEnd?: DateString;\n    pageStart?: DateString;\n    pageStatsPeriod?: string | null;\n    pageUtc?: boolean | null;\n    team?: string;\n  }): LocationDescriptorObject {\n    const nextQueryParams = pick(nextState, PAGE_QUERY_PARAMS);\n\n    const nextLocation = {\n      ...location,\n      query: {\n        ...query,\n        ...nextQueryParams,\n      },\n    };\n\n    router.push(nextLocation);\n\n    return nextLocation;\n  }\n\n  const {period, start, end, utc} = dataDatetime(query);\n\n  return (\n    <ControlsWrapper>\n      <StyledTeamSelector\n        name=\"select-team\"\n        inFieldLabel={t('Team: ')}\n        value={currentTeam?.slug}\n        onChange={choice => handleChangeTeam(choice.actor.id)}\n        teamFilter={isSuperuser ? undefined : filterTeam => filterTeam.isMember}\n        styles={{\n          singleValue(provided: any) {\n            const custom = {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              fontSize: theme.fontSizeMedium,\n              ':before': {\n                ...provided[':before'],\n                color: theme.textColor,\n                marginRight: space(1.5),\n                marginLeft: space(0.5),\n              },\n            };\n            return {...provided, ...custom};\n          },\n          input: (provided: any, state: any) => ({\n            ...provided,\n            display: 'grid',\n            gridTemplateColumns: 'max-content 1fr',\n            alignItems: 'center',\n            gridGap: space(1),\n            ':before': {\n              backgroundColor: state.theme.backgroundSecondary,\n              height: 24,\n              width: 38,\n              borderRadius: 3,\n              content: '\"\"',\n              display: 'block',\n            },\n          }),\n        }}\n      />\n      <StyledPageTimeRangeSelector\n        organization={organization}\n        relative={period ?? ''}\n        start={start ?? null}\n        end={end ?? null}\n        utc={utc ?? null}\n        onUpdate={handleUpdateDatetime}\n        showAbsolute={false}\n        relativeOptions={{\n          '14d': t('Last 2 weeks'),\n          '4w': t('Last 4 weeks'),\n          [INSIGHTS_DEFAULT_STATS_PERIOD]: t('Last 8 weeks'),\n          '12w': t('Last 12 weeks'),\n        }}\n      />\n    </ControlsWrapper>\n  );\n}\n\nexport default TeamStatsControls;\n\nconst ControlsWrapper = styled('div')`\n  display: grid;\n  align-items: center;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    grid-template-columns: 246px 1fr;\n  }\n`;\n\nconst StyledTeamSelector = styled(TeamSelector)`\n  & > div {\n    box-shadow: ${p => p.theme.dropShadowLight};\n  }\n`;\n\nconst StyledPageTimeRangeSelector = styled(PageTimeRangeSelector)`\n  height: 40px;\n\n  div {\n    min-height: unset;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  children: React.ReactNode;\n  description: React.ReactNode;\n  title: string;\n};\n\nfunction DescriptionCard({title, description, children}: Props) {\n  return (\n    <Wrapper>\n      <LeftPanel>\n        <Title>{title}</Title>\n        <Description>{description}</Description>\n      </LeftPanel>\n      <RightPanel>{children}</RightPanel>\n    </Wrapper>\n  );\n}\n\nexport default DescriptionCard;\n\nconst Wrapper = styled('div')`\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  display: flex;\n  margin-bottom: ${space(3)};\n  flex-direction: column;\n\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    flex-direction: row;\n  }\n`;\n\nconst LeftPanel = styled('div')`\n  padding: ${space(2)} ${space(2)};\n  border-bottom: 1px solid ${p => p.theme.border};\n\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    max-width: 250px;\n    border-right: 1px solid ${p => p.theme.border};\n    border-bottom: 0;\n  }\n`;\n\nconst Title = styled('div')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  margin: 0 0 ${space(0.5)};\n`;\n\nconst Description = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst RightPanel = styled('div')`\n  flex-grow: 1;\n`;\n","import styled from '@emotion/styled';\n\nimport IdBadge from 'sentry/components/idBadge';\n\nexport const ProjectBadgeContainer = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProjectBadge = styled(IdBadge)`\n  flex-shrink: 0;\n`;\n","import chunk from 'lodash/chunk';\nimport moment from 'moment';\n\nimport BaseChart from 'sentry/components/charts/baseChart';\nimport {DateTimeObject} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport type {SeriesDataUnit} from 'sentry/types/echarts';\n\n/**\n * Buckets a week of sequential days into one data unit\n */\nexport function convertDaySeriesToWeeks(data: SeriesDataUnit[]): SeriesDataUnit[] {\n  const sortedData = data.sort(\n    (a, b) => new Date(a.name).getTime() - new Date(b.name).getTime()\n  );\n  return chunk(sortedData, 7).map(week => {\n    return {\n      name: week[0].name,\n      value: week.reduce((total, currentData) => total + currentData.value, 0),\n    };\n  });\n}\n\n/**\n * Convert an object with date as the key to a series\n */\nexport function convertDayValueObjectToSeries(\n  data: Record<string, number>\n): SeriesDataUnit[] {\n  return Object.entries(data).map(([bucket, count]) => ({\n    value: count,\n    name: new Date(bucket).getTime(),\n  }));\n}\n\n/**\n * Takes a sorted array of trend items and groups them by worst/better/no chagne\n */\nexport function groupByTrend<T extends {trend: number}>(data: T[]): T[] {\n  const worseItems = data.filter(x => Math.round(x.trend) < 0);\n  const betterItems = data.filter(x => Math.round(x.trend) > 0);\n  const zeroItems = data.filter(x => Math.round(x.trend) === 0);\n  return [...worseItems, ...betterItems, ...zeroItems];\n}\n\nexport const barAxisLabel = (\n  dataEntries: number\n): React.ComponentProps<typeof BaseChart>['xAxis'] => {\n  return {\n    splitNumber: dataEntries,\n    type: 'category',\n    min: 0,\n    axisLabel: {\n      showMaxLabel: true,\n      showMinLabel: true,\n      formatter: (date: string) => {\n        return moment(new Date(Number(date))).format('MMM D');\n      },\n    },\n  };\n};\n\nconst INSIGHTS_DEFAULT_STATS_PERIOD = '8w';\n\nexport function dataDatetime(\n  query: Parameters<typeof normalizeDateTimeParams>[0]\n): DateTimeObject {\n  const {\n    start,\n    end,\n    statsPeriod,\n    utc: utcString,\n  } = normalizeDateTimeParams(query, {\n    allowEmptyPeriod: true,\n    allowAbsoluteDatetime: true,\n    allowAbsolutePageDatetime: true,\n  });\n\n  if (!statsPeriod && !start && !end) {\n    return {period: INSIGHTS_DEFAULT_STATS_PERIOD};\n  }\n\n  // Following getParams, statsPeriod will take priority over start/end\n  if (statsPeriod) {\n    return {period: statsPeriod};\n  }\n\n  const utc = utcString === 'true';\n  if (start && end) {\n    return utc\n      ? {\n          start: moment.utc(start).format(),\n          end: moment.utc(end).format(),\n          utc,\n        }\n      : {\n          start: moment(start).utc().format(),\n          end: moment(end).utc().format(),\n          utc,\n        };\n  }\n\n  return {period: INSIGHTS_DEFAULT_STATS_PERIOD};\n}\n"],"names":["PageTimeRangeSelector","className","props","isCalendarOpen","setIsCalendarOpen","useState","DropdownDate","label","DropdownLabel","t","onToggleSelector","isOpen","relativeOptions","DEFAULT_RELATIVE_PERIODS","relative","start","end","utc","defaultPeriod","Panel","p","theme","background","border","borderRadius","fontSizeMedium","textColor","space","StatsHeader","organization","activeTab","StyledLayoutTitle","title","size","href","underlined","to","slug","Layout","PAGE_QUERY_PARAMS","TeamStatsControls","location","router","currentTeam","useOrganization","isSuperuser","isActiveSuperuser","useTheme","query","localStorageKey","setStateOnUrl","nextState","nextQueryParams","pick","nextLocation","push","period","dataDatetime","ControlsWrapper","StyledTeamSelector","name","inFieldLabel","value","onChange","choice","handleChangeTeam","teamId","actor","id","localStorage","team","teamFilter","undefined","filterTeam","isMember","styles","singleValue","provided","custom","display","justifyContent","alignItems","fontSize","color","marginRight","marginLeft","input","state","gridTemplateColumns","gridGap","backgroundColor","backgroundSecondary","height","width","content","StyledPageTimeRangeSelector","onUpdate","datetime","parser","moment","pageStatsPeriod","pageStart","format","pageEnd","pageUtc","showAbsolute","breakpoints","TeamSelector","dropShadowLight","DescriptionCard","description","children","Wrapper","LeftPanel","Title","Description","RightPanel","fontSizeLarge","subText","ProjectBadgeContainer","ProjectBadge","IdBadge","convertDaySeriesToWeeks","data","sortedData","sort","a","b","Date","getTime","chunk","map","week","reduce","total","currentData","convertDayValueObjectToSeries","Object","entries","bucket","count","groupByTrend","filter","x","Math","round","trend","barAxisLabel","dataEntries","splitNumber","type","min","axisLabel","showMaxLabel","showMinLabel","formatter","date","Number","statsPeriod","utcString","normalizeDateTimeParams","allowEmptyPeriod","allowAbsoluteDatetime","allowAbsolutePageDatetime"],"sourceRoot":""}