{"version":3,"file":"chunks/app_components_acl_access_tsx-app_components_events_eventDataSection_tsx-app_components_event-f2590f.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/access.tsx","webpack:///./app/components/contextData/toggle.tsx","webpack:///./app/components/contextData/utils.tsx","webpack:///./app/components/contextData/index.tsx","webpack:///./app/components/events/eventDataSection.tsx","webpack:///./app/components/events/interfaces/keyValueList.tsx","webpack:///./app/components/events/meta/annotatedText/redaction.tsx","webpack:///./app/components/events/meta/annotatedText/utils.tsx","webpack:///./app/components/events/meta/annotatedText/chunk.tsx","webpack:///./app/components/events/meta/annotatedText/chunks.tsx","webpack:///./app/components/events/meta/annotatedText/valueElement.tsx","webpack:///./app/components/events/meta/annotatedText/index.tsx","webpack:///./app/components/events/styles.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport {IconInfo} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Config, Organization, Scope} from 'sentry/types';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withConfig from 'sentry/utils/withConfig';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nconst DEFAULT_NO_ACCESS_MESSAGE = (\n  <Alert type=\"error\" icon={<IconInfo size=\"md\" />}>\n    {t('You do not have sufficient permissions to access this.')}\n  </Alert>\n);\n\n// Props that function children will get.\nexport type ChildRenderProps = {\n  hasAccess: boolean;\n  hasSuperuser: boolean;\n};\n\ntype ChildFunction = (props: ChildRenderProps) => React.ReactNode;\n\ntype DefaultProps = {\n  /**\n   * List of required access levels\n   */\n  access: Scope[];\n\n  /**\n   * Custom renderer function for \"no access\" message OR `true` to use\n   * default message. `false` will suppress message.\n   */\n  renderNoAccessMessage: ChildFunction | boolean;\n\n  /**\n   * Requires superuser\n   */\n  isSuperuser?: boolean;\n\n  /**\n   * Should the component require all access levels or just one or more.\n   */\n  requireAll?: boolean;\n};\n\nconst defaultProps: DefaultProps = {\n  renderNoAccessMessage: false,\n  isSuperuser: false,\n  requireAll: true,\n  access: [],\n};\n\ntype Props = {\n  /**\n   * Configuration from ConfigStore\n   */\n  config: Config;\n\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n\n  /**\n   * Children can be a node or a function as child.\n   */\n  children?: React.ReactNode | ChildFunction;\n} & Partial<DefaultProps>;\n\n/**\n * Component to handle access restrictions.\n */\nclass Access extends React.Component<Props> {\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      organization,\n      config,\n      access,\n      requireAll,\n      isSuperuser,\n      renderNoAccessMessage,\n      children,\n    } = this.props;\n\n    const {access: orgAccess} = organization || {access: []};\n    const method = requireAll ? 'every' : 'some';\n\n    const hasAccess = !access || access[method](acc => orgAccess.includes(acc));\n    const hasSuperuser = !!(config.user && config.user.isSuperuser);\n\n    const renderProps: ChildRenderProps = {\n      hasAccess,\n      hasSuperuser,\n    };\n\n    const render = hasAccess && (!isSuperuser || hasSuperuser);\n\n    if (!render && typeof renderNoAccessMessage === 'function') {\n      return renderNoAccessMessage(renderProps);\n    }\n    if (!render && renderNoAccessMessage) {\n      return DEFAULT_NO_ACCESS_MESSAGE;\n    }\n\n    if (isRenderFunc<ChildFunction>(children)) {\n      return children(renderProps);\n    }\n\n    return render ? children : null;\n  }\n}\n\nexport default withOrganization(withConfig(Access));\n","import {Children, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {IconAdd, IconSubtract} from 'sentry/icons';\n\ntype Props = {\n  children: React.ReactNode;\n  highUp: boolean;\n  wrapClassName: string;\n};\n\nfunction Toggle({highUp, wrapClassName, children}: Props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  if (Children.count(children) === 0) {\n    return null;\n  }\n\n  const wrappedChildren = <span className={wrapClassName}>{children}</span>;\n\n  if (highUp) {\n    return wrappedChildren;\n  }\n\n  return (\n    <span>\n      <IconWrapper\n        isExpanded={isExpanded}\n        onClick={evt => {\n          setIsExpanded(!isExpanded);\n          evt.preventDefault();\n        }}\n      >\n        {isExpanded ? (\n          <IconSubtract size=\"9px\" color=\"white\" />\n        ) : (\n          <IconAdd size=\"9px\" color=\"white\" />\n        )}\n      </IconWrapper>\n      {isExpanded && wrappedChildren}\n    </span>\n  );\n}\n\nexport default Toggle;\n\nconst IconWrapper = styled('div')<{isExpanded: boolean}>`\n  border-radius: 2px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  ${p =>\n    p.isExpanded\n      ? `\n          background: ${p.theme.gray300};\n          border: 1px solid ${p.theme.gray300};\n          &:hover {\n            background: ${p.theme.gray400};\n          }\n        `\n      : `\n          background: ${p.theme.blue300};\n          border: 1px solid ${p.theme.blue300};\n          &:hover {\n            background: ${p.theme.blue200};\n          }\n        `}\n`;\n","export function looksLikeObjectRepr(value: string) {\n  const a = value[0];\n  const z = value[value.length - 1];\n\n  if (a === '<' && z === '>') {\n    return true;\n  }\n\n  if (a === '[' && z === ']') {\n    return true;\n  }\n\n  if (a === '(' && z === ')') {\n    return true;\n  }\n\n  if (z === ')' && value.match(/^[\\w\\d._-]+\\(/)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function looksLikeMultiLineString(value: string) {\n  return !!value.match(/[\\r\\n]/);\n}\n\nexport function padNumbersInString(string: string) {\n  return string.replace(/(\\d+)/g, (num: string) => {\n    let isNegative = false;\n    let realNum = parseInt(num, 10);\n    if (realNum < 0) {\n      realNum *= -1;\n      isNegative = true;\n    }\n    let s = '0000000000000' + realNum;\n    s = s.substr(s.length - (isNegative ? 11 : 12));\n    if (isNegative) {\n      s = '-' + s;\n    }\n    return s;\n  });\n}\n\nexport function naturalCaseInsensitiveSort(a: string, b: string) {\n  a = padNumbersInString(a).toLowerCase();\n  b = padNumbersInString(b).toLowerCase();\n  return a === b ? 0 : a < b ? -1 : 1;\n}\n\nexport function analyzeStringForRepr(value: string) {\n  const rv = {\n    repr: value,\n    isString: true,\n    isMultiLine: false,\n    isStripped: false,\n  };\n\n  // stripped for security reasons\n  if (value.match(/^['\"]?\\*{8,}['\"]?$/)) {\n    rv.isStripped = true;\n    return rv;\n  }\n\n  if (looksLikeObjectRepr(value)) {\n    rv.isString = false;\n    return rv;\n  }\n\n  rv.isMultiLine = looksLikeMultiLineString(value);\n  return rv;\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport isArray from 'lodash/isArray';\nimport isNumber from 'lodash/isNumber';\nimport isString from 'lodash/isString';\n\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconOpen} from 'sentry/icons';\nimport {Meta} from 'sentry/types';\nimport {isUrl} from 'sentry/utils';\n\nimport Toggle from './toggle';\nimport {analyzeStringForRepr, naturalCaseInsensitiveSort} from './utils';\n\ntype Value = null | string | boolean | number | {[key: string]: Value} | Value[];\n\ntype Props = React.HTMLAttributes<HTMLPreElement> & {\n  data: Value;\n  jsonConsts?: boolean;\n  maxDefaultDepth?: number;\n  meta?: Meta;\n  preserveQuotes?: boolean;\n  withAnnotatedText?: boolean;\n};\n\ntype State = {\n  data: Value;\n  withAnnotatedText: boolean;\n};\n\nfunction getValueWithAnnotatedText(v: Value, meta?: Meta) {\n  return <AnnotatedText value={v} meta={meta} />;\n}\n\nclass ContextData extends React.Component<Props, State> {\n  static defaultProps = {\n    data: null,\n    withAnnotatedText: false,\n  };\n\n  renderValue(value: Value) {\n    const {preserveQuotes, meta, withAnnotatedText, jsonConsts, maxDefaultDepth} =\n      this.props;\n    const maxDepth = maxDefaultDepth ?? 2;\n\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    function walk(value: Value, depth: number) {\n      let i = 0;\n      const children: React.ReactNode[] = [];\n      if (value === null) {\n        return <span className=\"val-null\">{jsonConsts ? 'null' : 'None'}</span>;\n      }\n\n      if (value === true || value === false) {\n        return (\n          <span className=\"val-bool\">\n            {jsonConsts ? (value ? 'true' : 'false') : value ? 'True' : 'False'}\n          </span>\n        );\n      }\n\n      if (isString(value)) {\n        const valueInfo = analyzeStringForRepr(value);\n\n        const valueToBeReturned = withAnnotatedText\n          ? getValueWithAnnotatedText(valueInfo.repr, meta)\n          : valueInfo.repr;\n\n        const out = [\n          <span\n            key=\"value\"\n            className={\n              (valueInfo.isString ? 'val-string' : '') +\n              (valueInfo.isStripped ? ' val-stripped' : '') +\n              (valueInfo.isMultiLine ? ' val-string-multiline' : '')\n            }\n          >\n            {preserveQuotes ? `\"${valueToBeReturned}\"` : valueToBeReturned}\n          </span>,\n        ];\n\n        if (valueInfo.isString && isUrl(value)) {\n          out.push(\n            <ExternalLink key=\"external\" href={value} className=\"external-icon\">\n              <StyledIconOpen size=\"xs\" />\n            </ExternalLink>\n          );\n        }\n\n        return out;\n      }\n\n      if (isNumber(value)) {\n        const valueToBeReturned =\n          withAnnotatedText && meta ? getValueWithAnnotatedText(value, meta) : value;\n        return <span>{valueToBeReturned}</span>;\n      }\n\n      if (isArray(value)) {\n        for (i = 0; i < value.length; i++) {\n          children.push(\n            <span className=\"val-array-item\" key={i}>\n              {walk(value[i], depth + 1)}\n              {i < value.length - 1 ? (\n                <span className=\"val-array-sep\">{', '}</span>\n              ) : null}\n            </span>\n          );\n        }\n        return (\n          <span className=\"val-array\">\n            <span className=\"val-array-marker\">{'['}</span>\n            <Toggle highUp={depth <= maxDepth} wrapClassName=\"val-array-items\">\n              {children}\n            </Toggle>\n            <span className=\"val-array-marker\">{']'}</span>\n          </span>\n        );\n      }\n\n      if (React.isValidElement(value)) {\n        return value;\n      }\n\n      const keys = Object.keys(value);\n      keys.sort(naturalCaseInsensitiveSort);\n      for (i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        children.push(\n          <span className=\"val-dict-pair\" key={key}>\n            <span className=\"val-dict-key\">\n              <span className=\"val-string\">{preserveQuotes ? `\"${key}\"` : key}</span>\n            </span>\n            <span className=\"val-dict-col\">{': '}</span>\n            <span className=\"val-dict-value\">\n              {walk(value[key], depth + 1)}\n              {i < keys.length - 1 ? <span className=\"val-dict-sep\">{', '}</span> : null}\n            </span>\n          </span>\n        );\n      }\n      return (\n        <span className=\"val-dict\">\n          <span className=\"val-dict-marker\">{'{'}</span>\n          <Toggle highUp={depth <= maxDepth - 1} wrapClassName=\"val-dict-items\">\n            {children}\n          </Toggle>\n          <span className=\"val-dict-marker\">{'}'}</span>\n        </span>\n      );\n    }\n    return walk(value, 0);\n  }\n\n  render() {\n    const {\n      data,\n      preserveQuotes: _preserveQuotes,\n      withAnnotatedText: _withAnnotatedText,\n      meta: _meta,\n      children,\n      ...other\n    } = this.props;\n\n    return (\n      <pre {...other}>\n        {this.renderValue(data)}\n        {children}\n      </pre>\n    );\n  }\n}\n\nconst StyledIconOpen = styled(IconOpen)`\n  position: relative;\n  top: 1px;\n`;\n\nexport default ContextData;\n","import * as React from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {DataSection} from 'sentry/components/events/styles';\nimport {IconAnchor} from 'sentry/icons/iconAnchor';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\n\nconst defaultProps = {\n  wrapTitle: true,\n  raw: false,\n  isCentered: false,\n  showPermalink: true,\n};\n\ntype DefaultProps = Readonly<typeof defaultProps>;\n\ntype Props = {\n  title: React.ReactNode;\n  type: string;\n  actions?: React.ReactNode;\n  className?: string;\n  toggleRaw?: (enable: boolean) => void;\n} & DefaultProps;\n\nclass EventDataSection extends React.Component<Props> {\n  static defaultProps = defaultProps;\n\n  componentDidMount() {\n    const dataSectionDOM = this.dataSectionDOMRef.current;\n    if (location.hash && dataSectionDOM) {\n      const [, hash] = location.hash.split('#');\n\n      try {\n        const anchorElement = hash && dataSectionDOM.querySelector('div#' + hash);\n        if (anchorElement) {\n          anchorElement.scrollIntoView();\n        }\n      } catch {\n        // Since we're blindly taking the hash from the url and shoving\n        // it into a querySelector, it's possible that this may\n        // raise an exception if the input is invalid. So let's just ignore\n        // this instead of blowing up.\n        // e.g. `document.querySelector('div#=')`\n        // > Uncaught DOMException: Failed to execute 'querySelector' on 'Document': 'div#=' is not a valid selector.\n      }\n    }\n  }\n\n  dataSectionDOMRef = React.createRef<HTMLDivElement>();\n\n  render() {\n    const {\n      children,\n      className,\n      type,\n      title,\n      toggleRaw,\n      raw,\n      wrapTitle,\n      actions,\n      isCentered,\n      showPermalink,\n      ...props\n    } = this.props;\n\n    const titleNode = wrapTitle ? <h3>{title}</h3> : title;\n\n    return (\n      <DataSection ref={this.dataSectionDOMRef} className={className || ''} {...props}>\n        {title && (\n          <SectionHeader id={type} isCentered={isCentered}>\n            <Title>\n              {showPermalink ? (\n                <Permalink href={'#' + type} className=\"permalink\">\n                  <StyledIconAnchor />\n                  {titleNode}\n                </Permalink>\n              ) : (\n                titleNode\n              )}\n            </Title>\n            {type === 'extra' && (\n              <ButtonBar merged active={raw ? 'raw' : 'formatted'}>\n                <Button\n                  barId=\"formatted\"\n                  size=\"xsmall\"\n                  onClick={() => callIfFunction(toggleRaw, false)}\n                >\n                  {t('Formatted')}\n                </Button>\n                <Button\n                  barId=\"raw\"\n                  size=\"xsmall\"\n                  onClick={() => callIfFunction(toggleRaw, true)}\n                >\n                  {t('Raw')}\n                </Button>\n              </ButtonBar>\n            )}\n            {actions && <ActionContainer>{actions}</ActionContainer>}\n          </SectionHeader>\n        )}\n        <SectionContents>{children}</SectionContents>\n      </DataSection>\n    );\n  }\n}\n\nconst Title = styled('div')`\n  display: flex;\n`;\n\nconst StyledIconAnchor = styled(IconAnchor)`\n  display: none;\n  position: absolute;\n  top: 4px;\n  left: -22px;\n`;\n\nconst Permalink = styled('a')`\n  width: 100%;\n  :hover ${StyledIconAnchor} {\n    display: block;\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nconst SectionHeader = styled('div')<{isCentered?: boolean}>`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-bottom: ${space(1)};\n\n  > * {\n    margin-bottom: ${space(0.5)};\n  }\n\n  & h3,\n  & h3 a {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.2;\n    color: ${p => p.theme.gray300};\n  }\n\n  & h3 {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.2;\n    padding: ${space(0.75)} 0;\n    margin-bottom: 0;\n    text-transform: uppercase;\n  }\n\n  & small {\n    color: ${p => p.theme.textColor};\n    font-size: ${p => p.theme.fontSizeMedium};\n    margin-right: ${space(0.5)};\n    margin-left: ${space(0.5)};\n\n    text-transform: none;\n  }\n  & small > span {\n    color: ${p => p.theme.textColor};\n    border-bottom: 1px dotted ${p => p.theme.border};\n    font-weight: normal;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints[2]}) {\n    & > small {\n      margin-left: ${space(1)};\n      display: inline-block;\n    }\n  }\n\n  ${p =>\n    p.isCentered &&\n    css`\n      align-items: center;\n      @media (max-width: ${p.theme.breakpoints[0]}) {\n        display: block;\n      }\n    `}\n\n  >*:first-child {\n    position: relative;\n    flex-grow: 1;\n  }\n`;\n\nexport const SectionContents = styled('div')`\n  position: relative;\n`;\n\nconst ActionContainer = styled('div')`\n  flex-shrink: 0;\n  max-width: 100%;\n`;\n\nexport default EventDataSection;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport sortBy from 'lodash/sortBy';\n\nimport ContextData from 'sentry/components/contextData';\nimport AnnotatedText from 'sentry/components/events/meta/annotatedText';\nimport {KeyValueListData} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport theme from 'sentry/utils/theme';\n\ntype Props = {\n  data?: KeyValueListData;\n  isContextData?: boolean;\n  isSorted?: boolean;\n  longKeys?: boolean;\n  onClick?: () => void;\n  raw?: boolean;\n};\n\nconst KeyValueList = ({\n  data,\n  isContextData = false,\n  isSorted = true,\n  raw = false,\n  longKeys = false,\n  onClick,\n}: Props) => {\n  if (!defined(data) || data.length === 0) {\n    return null;\n  }\n\n  const getData = () => {\n    if (isSorted) {\n      return sortBy(data, [({key}) => key.toLowerCase()]);\n    }\n    return data;\n  };\n\n  return (\n    <table className=\"table key-value\" onClick={onClick}>\n      <tbody>\n        {getData().map(\n          ({key, subject, value = null, meta, subjectIcon, subjectDataTestId}) => {\n            const dataValue: React.ReactNode =\n              typeof value === 'object' && !React.isValidElement(value)\n                ? JSON.stringify(value, null, 2)\n                : value;\n\n            let contentComponent: React.ReactNode = (\n              <pre className=\"val-string\">\n                <AnnotatedText value={dataValue} meta={meta} />\n                {subjectIcon}\n              </pre>\n            );\n\n            if (isContextData) {\n              contentComponent = (\n                <ContextData\n                  data={!raw ? value : JSON.stringify(value)}\n                  meta={meta}\n                  withAnnotatedText\n                >\n                  {subjectIcon}\n                </ContextData>\n              );\n            } else if (typeof dataValue !== 'string' && React.isValidElement(dataValue)) {\n              contentComponent = dataValue;\n            }\n\n            return (\n              <tr key={key}>\n                <TableSubject className=\"key\" wide={longKeys}>\n                  {subject}\n                </TableSubject>\n                <td className=\"val\" data-test-id={subjectDataTestId}>\n                  {contentComponent}\n                </td>\n              </tr>\n            );\n          }\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nconst TableSubject = styled('td')<{wide?: boolean}>`\n  @media (min-width: ${theme.breakpoints[2]}) {\n    max-width: ${p => (p.wide ? '620px !important' : 'none')};\n  }\n`;\n\nKeyValueList.displayName = 'KeyValueList';\n\nexport default KeyValueList;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  children: React.ReactNode;\n  className?: string;\n  withoutBackground?: boolean;\n};\n\nconst Redaction = styled(({children, className}: Props) => (\n  <span className={className}>{children}</span>\n))`\n  cursor: default;\n  vertical-align: middle;\n  ${p => !p.withoutBackground && `background: rgba(255, 0, 0, 0.05);`}\n`;\nexport default Redaction;\n","import {t} from 'sentry/locale';\nimport {ChunkType} from 'sentry/types';\n\nconst REMARKS = {\n  a: 'Annotated',\n  x: 'Removed',\n  s: 'Replaced',\n  m: 'Masked',\n  p: 'Pseudonymized',\n  e: 'Encrypted',\n};\n\nconst KNOWN_RULES = {\n  '!limit': 'size limits',\n  '!raw': 'raw payload',\n  '!config': 'SDK configuration',\n};\n\nexport function getTooltipText({\n  remark = '',\n  rule_id: rule = '',\n}: Pick<ChunkType, 'remark' | 'rule_id'>) {\n  const remark_title = REMARKS[remark];\n  const rule_title = KNOWN_RULES[rule] || t('PII rule \"%s\"', rule);\n\n  if (remark_title) {\n    return t('%s because of %s', remark_title, rule_title);\n  }\n\n  return rule_title;\n}\n","import Tooltip from 'sentry/components/tooltip';\nimport {ChunkType} from 'sentry/types';\n\nimport Redaction from './redaction';\nimport {getTooltipText} from './utils';\n\ntype Props = {\n  chunk: ChunkType;\n};\n\nconst Chunk = ({chunk}: Props) => {\n  if (chunk.type === 'redaction') {\n    const title = getTooltipText({rule_id: chunk.rule_id, remark: chunk.remark});\n    return (\n      <Tooltip title={title}>\n        <Redaction>{chunk.text}</Redaction>\n      </Tooltip>\n    );\n  }\n\n  return <span>{chunk.text}</span>;\n};\n\nexport default Chunk;\n","import {cloneElement} from 'react';\nimport styled from '@emotion/styled';\n\nimport {ChunkType} from 'sentry/types';\n\nimport Chunk from './chunk';\n\ntype Props = {\n  chunks: Array<ChunkType>;\n};\n\nconst Chunks = ({chunks}: Props) => (\n  <ChunksSpan>\n    {chunks.map((chunk, key) => cloneElement(<Chunk chunk={chunk} />, {key}))}\n  </ChunksSpan>\n);\n\nexport default Chunks;\n\nconst ChunksSpan = styled('span')`\n  span {\n    display: inline;\n  }\n`;\n","import * as React from 'react';\n\nimport {t} from 'sentry/locale';\nimport {Meta} from 'sentry/types';\n\nimport Redaction from './redaction';\n\ntype Props = {\n  value: React.ReactNode;\n  meta?: Meta;\n};\n\n// If you find yourself modifying this component to fix some tooltip bug,\n// consider that `meta` is not properly passed into this component in the\n// first place. It's much more likely that `withMeta` is buggy or improperly\n// used than that this component has a bug.\nconst ValueElement = ({value, meta}: Props) => {\n  if (value && meta) {\n    return <Redaction>{value}</Redaction>;\n  }\n\n  if (meta?.err?.length) {\n    return (\n      <Redaction withoutBackground>\n        <i>{`<${t('invalid')}>`}</i>\n      </Redaction>\n    );\n  }\n\n  if (meta?.rem?.length) {\n    return (\n      <Redaction>\n        <i>{`<${t('redacted')}>`}</i>\n      </Redaction>\n    );\n  }\n\n  if (React.isValidElement(value)) {\n    return value;\n  }\n\n  return (\n    <React.Fragment>\n      {typeof value === 'object' || typeof value === 'boolean'\n        ? JSON.stringify(value)\n        : value}\n    </React.Fragment>\n  );\n};\n\nexport default ValueElement;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport capitalize from 'lodash/capitalize';\n\nimport List from 'sentry/components/list';\nimport ListItem from 'sentry/components/list/listItem';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Meta, MetaError} from 'sentry/types';\n\nimport Chunks from './chunks';\nimport {getTooltipText} from './utils';\nimport ValueElement from './valueElement';\n\ntype Props = {\n  value: React.ReactNode;\n  className?: string;\n  meta?: Meta;\n};\n\nconst AnnotatedText = ({value, meta, className, ...props}: Props) => {\n  const renderValue = () => {\n    if (meta?.chunks?.length && meta.chunks.length > 1) {\n      return <Chunks chunks={meta.chunks} />;\n    }\n\n    const element = <ValueElement value={value} meta={meta} />;\n\n    if (meta?.rem?.length) {\n      const title = getTooltipText({rule_id: meta.rem[0][0], remark: meta.rem[0][1]});\n      return <Tooltip title={title}>{element}</Tooltip>;\n    }\n\n    return element;\n  };\n\n  const formatErrorKind = (kind: string) => {\n    return capitalize(kind.replace(/_/g, ' '));\n  };\n\n  const getErrorMessage = (error: MetaError) => {\n    const errorMessage: string[] = [];\n\n    if (Array.isArray(error)) {\n      if (error[0]) {\n        errorMessage.push(formatErrorKind(error[0]));\n      }\n\n      if (error[1]?.reason) {\n        errorMessage.push(`(${error[1].reason})`);\n      }\n    } else {\n      errorMessage.push(formatErrorKind(error));\n    }\n\n    return errorMessage.join(' ');\n  };\n\n  const getTooltipTitle = (errors: Array<MetaError>) => {\n    if (errors.length === 1) {\n      return <TooltipTitle>{t('Error: %s', getErrorMessage(errors[0]))}</TooltipTitle>;\n    }\n    return (\n      <TooltipTitle>\n        <span>{t('Errors:')}</span>\n        <StyledList symbol=\"bullet\">\n          {errors.map((error, index) => (\n            <ListItem key={index}>{getErrorMessage(error)}</ListItem>\n          ))}\n        </StyledList>\n      </TooltipTitle>\n    );\n  };\n\n  const renderErrors = (errors: Array<MetaError>) => {\n    if (!errors.length) {\n      return null;\n    }\n\n    return (\n      <StyledTooltipError title={getTooltipTitle(errors)}>\n        <StyledIconWarning color=\"red300\" />\n      </StyledTooltipError>\n    );\n  };\n\n  return (\n    <span className={className} {...props}>\n      {renderValue()}\n      {meta?.err && renderErrors(meta.err)}\n    </span>\n  );\n};\n\nexport default AnnotatedText;\n\nconst StyledTooltipError = styled(Tooltip)`\n  margin-left: ${space(0.75)};\n  vertical-align: middle;\n`;\n\nconst StyledList = styled(List)`\n  li {\n    padding-left: ${space(3)};\n    word-break: break-all;\n    :before {\n      border-color: ${p => p.theme.white};\n      top: 6px;\n    }\n  }\n`;\n\nconst TooltipTitle = styled('div')`\n  text-align: left;\n`;\n\nconst StyledIconWarning = styled(IconWarning)`\n  vertical-align: middle;\n`;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\nimport {Theme} from 'sentry/utils/theme';\n\nexport const DataSection = styled('div')`\n  display: flex;\n  flex-direction: column;\n  padding: ${space(2)} 0;\n  border-top: 1px solid ${p => p.theme.innerBorder};\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    padding: ${space(3)} ${space(4)} 0 40px;\n  }\n`;\n\ntype BannerProps = {\n  priority: 'default' | 'danger' | 'success';\n};\n\nfunction getColors({priority, theme}: BannerProps & {theme: Theme}) {\n  const COLORS = {\n    default: {\n      background: theme.backgroundSecondary,\n      border: theme.border,\n    },\n    danger: {\n      background: theme.alert.error.backgroundLight,\n      border: theme.alert.error.border,\n    },\n    success: {\n      background: theme.alert.success.backgroundLight,\n      border: theme.alert.success.border,\n    },\n  } as const;\n\n  return COLORS[priority];\n}\n\nexport const BannerContainer = styled('div')<BannerProps>`\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  background: ${p => getColors(p).background};\n  border-top: 1px solid ${p => getColors(p).border};\n  border-bottom: 1px solid ${p => getColors(p).border};\n\n  /* Muted box & processing errors are in different parts of the DOM */\n  &\n    + ${/* sc-selector */ DataSection}:first-child,\n    &\n    + div\n    > ${/* sc-selector */ DataSection}:first-child {\n    border-top: 0;\n  }\n`;\n\nexport const BannerSummary = styled('p')`\n  display: flex;\n  align-items: flex-start;\n  padding: ${space(2)} ${space(4)} ${space(2)} 40px;\n  margin-bottom: 0;\n\n  /* Get icons in top right of content box */\n  & > .icon,\n  & > svg {\n    flex-shrink: 0;\n    flex-grow: 0;\n    margin-right: ${space(1)};\n    margin-top: 2px;\n  }\n\n  & > span {\n    flex-grow: 1;\n  }\n\n  & > a {\n    align-self: flex-end;\n  }\n`;\n\nexport const CauseHeader = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${space(3)};\n\n  & button,\n  & h3 {\n    color: ${p => p.theme.gray300};\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.2;\n    text-transform: uppercase;\n  }\n\n  & h3 {\n    margin-bottom: 0;\n  }\n\n  & button {\n    background: none;\n    border: 0;\n    outline: none;\n    padding: 0;\n  }\n`;\n"],"names":["DEFAULT_NO_ACCESS_MESSAGE","type","icon","size","t","Access","React","render","organization","config","access","requireAll","isSuperuser","renderNoAccessMessage","children","this","props","orgAccess","hasAccess","acc","includes","hasSuperuser","user","renderProps","isRenderFunc","withOrganization","withConfig","Toggle","highUp","wrapClassName","isExpanded","setIsExpanded","useState","Children","wrappedChildren","className","IconWrapper","onClick","evt","preventDefault","color","p","theme","gray300","gray400","blue300","blue200","padNumbersInString","string","replace","num","isNegative","realNum","parseInt","s","substr","length","naturalCaseInsensitiveSort","a","b","toLowerCase","getValueWithAnnotatedText","v","meta","value","ContextData","renderValue","preserveQuotes","withAnnotatedText","jsonConsts","maxDefaultDepth","maxDepth","walk","depth","i","isString","valueInfo","rv","repr","isMultiLine","isStripped","match","z","looksLikeObjectRepr","looksLikeMultiLineString","analyzeStringForRepr","valueToBeReturned","out","isUrl","push","href","StyledIconOpen","isNumber","isArray","keys","Object","sort","key","data","_preserveQuotes","_withAnnotatedText","_meta","other","IconOpen","EventDataSection","componentDidMount","dataSectionDOM","dataSectionDOMRef","current","location","hash","split","anchorElement","querySelector","scrollIntoView","title","toggleRaw","raw","wrapTitle","actions","isCentered","showPermalink","titleNode","ref","SectionHeader","id","Title","Permalink","StyledIconAnchor","merged","active","barId","callIfFunction","ActionContainer","SectionContents","IconAnchor","space","textColor","fontSizeMedium","border","breakpoints","css","KeyValueList","isContextData","isSorted","longKeys","defined","sortBy","map","subject","subjectIcon","subjectDataTestId","dataValue","JSON","stringify","contentComponent","TableSubject","wide","displayName","withoutBackground","REMARKS","x","m","e","KNOWN_RULES","getTooltipText","remark","rule_id","rule","remark_title","rule_title","Chunk","chunk","text","Chunks","chunks","ChunksSpan","cloneElement","ValueElement","err","rem","AnnotatedText","formatErrorKind","kind","capitalize","getErrorMessage","error","errorMessage","Array","reason","join","element","errors","StyledTooltipError","TooltipTitle","StyledList","symbol","index","getTooltipTitle","StyledIconWarning","Tooltip","List","white","IconWarning","DataSection","innerBorder","getColors","priority","default","background","backgroundSecondary","danger","alert","backgroundLight","success","BannerContainer","BannerSummary","CauseHeader"],"sourceRoot":""}