{"version":3,"sources":["api/utils.ts","api/config.ts","store/loginSlice.ts","component/inputTag.tsx","store/globalConfSlice.ts","component/addSubsModal.tsx","store/groupConfigSlice.ts","component/subscribeCard.tsx","pages/admin/configPage/index.tsx","pages/admin/index.tsx","pages/auth.tsx","store/hooks.ts","App.tsx","reportWebVitals.ts","store/index.ts","index.tsx"],"names":["store","baseUrl","a","axios","get","res","data","auth","token","params","getTargetName","platformName","target","addSubscribe","groupNumber","req","post","delete","patch","then","interceptors","request","use","config","url","startsWith","localStorage","getItem","Cancel","headers","error","Promise","reject","response","status","dispatch","clearLoginStatus","loginAction","_","action","login","failed","type","payload","name","id","createAsyncThunk","code","Error","setItem","JSON","stringify","condition","getState","loginSlice","createSlice","initialState","reducers","doLogin","doClearLogin","state","extraReducers","builder","addCase","fulfilled","rejected","stat","actions","removeItem","loginSelector","InputTag","prop","useState","value","setValue","inputVisible","setInputVisible","inputValue","setInputValue","editInputIndex","setEditInputIndex","editInputValue","setEditInputValue","inputRef","useRef","editInputRef","useEffect","current","focus","handleInputConfirm","indexOf","newVal","onChange","handleEditInputChange","e","handleEditInputConfirm","newTags","slice","map","tag","index","ref","size","onBlur","onPressEnter","isLongTag","length","tagElem","color","style","userSelect","closable","onClose","removedTag","tags","filter","handleClose","onDoubleClick","preventDefault","title","width","marginRight","verticalAlign","className","onClick","background","border","borderColor","PlusOutlined","addText","setGlobalConf","loaded","getGlobalConf","globalConf","globalConfSlice","platformConf","platformConfSelector","InputTagCustom","disabled","AddModal","showModal","setShowModal","refresh","initVal","confirmLoading","setConfirmLoading","useSelector","hasTarget","setHasTarget","categories","setCategories","enabledTag","setEnableTag","Form","useForm","form","inited","setInited","setFieldsValue","visible","onCancel","onOk","submit","labelCol","span","onFinish","Object","assign","cats","updateSubscribe","resetFields","Item","label","rules","platform","targetName","console","log","keys","Option","required","message","validator","getFieldValue","resolve","placeholder","mode","indexStr","parseInt","setSubs","updateGroupSubs","groupConfigSlice","reducer","groupConfigSelector","groupConfig","CopyModal","currentGroupNumber","groups","reload","selectedGroups","setSelectGroups","postReqs","selectedGroup","SubscribeCard","platformConfs","showEditModal","setShowEditModal","dispatcher","useDispatch","groupSubscribes","EditOutlined","CopyOutlined","onConfirm","delSubscribe","handleDelete","DeleteOutlined","catKey","ConfigPage","currentAddingGroupNumber","setCurrentAddingGroupNumber","configData","tab","key","push","Panel","header","float","stopPropagation","gutter","xs","sm","md","lg","align","subscribes","subs","idx","s","Admin","changeTab","minHeight","Sider","theme","defaultSelectedKeys","icon","SettingOutlined","BugOutlined","Content","margin","Auth","useParams","loginState","loginFun","to","pathname","useAppSelector","LoginSwitch","App","infoJson","jwtToken","jwt_decode","exp","Date","now","info","parse","basename","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c297d343.chunk.js","sourcesContent":["import axios, {AxiosError} from \"axios\";\nimport {Store} from \"src/store\";\nimport { clearLoginStatus } from 'src/store/loginSlice';\n// import { useContext } from 'react';\n// import { LoginContext } from \"../utils/context\";\n\nexport const baseUrl = '/bison/api/'\nlet store: Store\nexport const injectStore = (_store: Store) => {\n  store = _store\n}\n\n// const loginStatus = useContext(LoginContext);\naxios.interceptors.request.use(function (config) {\n  if (config.url && config.url.startsWith(baseUrl) && config.url !== `${baseUrl}auth` \n     && config.url !== `${baseUrl}global_conf`) {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    } else {\n      throw new axios.Cancel('User not login');\n    }\n  }\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\n\naxios.interceptors.response.use(function (response) {\n  // const data = response.data;\n  // const parseToMap = (item: any): any => {\n  //   if (item instanceof Array) {\n  //     return item.map(parseToMap);\n  //   } else if (item instanceof Object) {\n  //     let res = new Map();\n  //     for (const key of Object.keys(item)) {\n  //       res.set(key, parseToMap(item[key]));\n  //     }\n  //     return res;\n  //   } else {\n  //     return item;\n  //   }\n  // }\n  // response.data = parseToMap(data);\n  return response;\n}, function(error: AxiosError) {\n  if(error.response && error.response.status === 401) {\n    store.dispatch(clearLoginStatus());\n  }\n  return Promise.reject(error);\n});\n","import axios from \"axios\";\nimport { GlobalConf, TokenResp, SubscribeResp, TargetNameResp, SubscribeConfig } from \"../utils/type\";\nimport { baseUrl } from './utils';\n\nexport async function getGlobalConf(): Promise<GlobalConf> {\n  const res = await axios.get<GlobalConf>(`${baseUrl}global_conf`);\n  return res.data;\n}\n\nexport async function auth(token: string): Promise<TokenResp> {\n  const res = await axios.get<TokenResp>(`${baseUrl}auth`, {params: {token}});\n  return res.data;\n}\n\nexport async function getSubscribe(): Promise<SubscribeResp> {\n  const res = await axios.get(`${baseUrl}subs`);\n  return res.data;\n}\n\nexport async function getTargetName(platformName: string, target: string): Promise<TargetNameResp> {\n  const res = await axios.get(`${baseUrl}target_name`, {params: {platformName, target}});\n  return res.data;\n}\n\nexport async function addSubscribe(groupNumber: string, req: SubscribeConfig) {\n  const res = await axios.post(`${baseUrl}subs`, req, {params: {groupNumber}})\n  return res.data;\n}\n\nexport async function delSubscribe(groupNumber: string, platformName: string, target: string) {\n  const res = await axios.delete(`${baseUrl}subs`, {params: {groupNumber, platformName, target}});\n  return res.data;\n}\n\nexport async function updateSubscribe(groupNumber: string, req: SubscribeConfig) {\n  return axios.patch(`${baseUrl}subs`, req, {params: {groupNumber}})\n    .then(res => res.data);\n}\n","import { AnyAction, CaseReducer, createAsyncThunk, createSlice, PayloadAction, ThunkAction } from \"@reduxjs/toolkit\";\nimport jwt_decode from 'jwt-decode';\nimport { LoginStatus, TokenResp } from \"src/utils/type\";\nimport { auth } from \"src/api/config\";\nimport {RootState} from \".\";\n\nconst initialState: LoginStatus = {\n  login: false,\n  type: '',\n  name: '',\n  id: '123',\n  // groups: [],\n  token: '',\n  failed: false\n}\n\ninterface storedInfo {\n  type: string\n  name: string\n  id: string\n}\n\nconst loginAction: CaseReducer<LoginStatus, PayloadAction<TokenResp>> = (_, action) => {\n  return {\n    login: true,\n    failed: false,\n    type: action.payload.type,\n    name: action.payload.name,\n    id: action.payload.id,\n    token: action.payload.token\n  }\n}\n\nexport const login = createAsyncThunk(\n  \"auth/login\",\n  async (code: string) => {\n    let res = await auth(code);\n    if (res.status !== 200) {\n      throw Error(\"Login Error\")\n    } else {\n      localStorage.setItem('loginInfo', JSON.stringify({\n        'type': res.type,\n        'name': res.name,\n        id: res.id,\n      }))\n      localStorage.setItem('token', res.token)\n    }\n    return res\n  },\n  {\n    condition: (_: string, { getState }) => {\n      const { login } = getState() as { login: LoginStatus }\n      return !login.login;\n    }\n  }\n)\n\n\nexport const loginSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    doLogin: loginAction,\n    doClearLogin: (state) => {\n      state.login = false\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(login.fulfilled, loginAction);\n    builder.addCase(login.rejected, (stat) => {\n      stat.failed = true\n    })\n  }\n})\n\nexport const { doLogin, doClearLogin } = loginSlice.actions\n\nexport const loadLoginState = (): ThunkAction<void, RootState, unknown, AnyAction> =>\n  (dispatch, getState) => {\n    if (getState().login.login) {\n      return\n    }\n    const infoJson = localStorage.getItem('loginInfo')\n    const jwtToken = localStorage.getItem('token');\n    if (infoJson && jwtToken) {\n      const decodedJwt = jwt_decode(jwtToken) as { exp: number };\n      if (decodedJwt.exp < Date.now() / 1000) {\n        return\n      }\n      const info = JSON.parse(infoJson) as storedInfo\n      const payload: TokenResp = {\n        ...info,\n        status: 200,\n        token: jwtToken,\n      }\n      dispatch(doLogin(payload))\n    }\n  }\n\nexport const clearLoginStatus = (): ThunkAction<void, RootState, unknown, AnyAction> =>\n  (dispatch) => {\n    localStorage.removeItem('loginInfo')\n    localStorage.removeItem('token')\n    dispatch(doClearLogin())\n  }\nexport const loginSelector = (state: RootState) => state.login\n\nexport default loginSlice.reducer\n","import {Input, Tag, Tooltip} from \"antd\";\nimport {PresetColorType, PresetStatusColorType} from 'antd/lib/_util/colors'\nimport {LiteralUnion} from 'antd/lib/_util/type'\nimport React, {useRef, useState, useEffect} from \"react\";\nimport { PlusOutlined } from '@ant-design/icons';\n\ninterface InputTagProp {\n  value?: Array<string>,\n  onChange?: (value: Array<string>) => void\n  color?: LiteralUnion<PresetColorType | PresetStatusColorType, string>;\n  addText?: string\n}\nexport function InputTag(prop: InputTagProp) {\n  const [ value, setValue ] = useState<Array<string>>(prop.value || []);\n  const [ inputVisible, setInputVisible ] = useState(false);\n  const [ inputValue, setInputValue ] = useState('');\n  const [ editInputIndex, setEditInputIndex ] = useState(-1);\n  const [ editInputValue, setEditInputValue ] = useState('');\n  const inputRef = useRef(null as any);\n  const editInputRef = useRef(null as any);\n  useEffect(() => {\n    if (prop.value) {\n      setValue(prop.value);\n    }\n  }, [prop.value])\n  useEffect(() => {\n    if (inputVisible) {\n      inputRef.current.focus()\n    }\n  }, [inputVisible]);\n  useEffect(() => {\n    if (editInputIndex !== -1) {\n        editInputRef.current.focus();\n    }\n  }, [editInputIndex]);\n\n  const handleClose = (removedTag: string) => {\n    const tags = value.filter(tag => tag !== removedTag);\n    setValue(_ => tags);\n    if (prop.onChange) {\n      prop.onChange(tags);\n    }\n  }\n  \n  const showInput = () => {\n    setInputVisible(_ => true);\n  }\n\n  const handleInputConfirm = () => {\n    if (inputValue && value.indexOf(inputValue) === -1) {\n      const newVal = [...value, inputValue];\n      setValue(_ => newVal);\n      if (prop.onChange) {\n        prop.onChange(newVal);\n      }\n    }\n    setInputVisible(_ => false);\n    setInputValue(_ => '');\n  }\n\n  const handleEditInputChange = (e: any) => {\n    setEditInputValue(_ => e.target.value);\n  }\n\n  const handleEditInputConfirm = () => {\n    const newTags = value.slice();\n    newTags[editInputIndex] = editInputValue;\n    setValue(_ => newTags);\n      if (prop.onChange) {\n        prop.onChange(newTags);\n      }\n    setEditInputIndex(_ => -1);\n    setEditInputValue(_ => '');\n  }\n\n  const handleInputChange = (e: any) => {\n    setInputValue(e.target.value);\n  }\n\n  return (\n    <>\n      { value.map((tag, index) => {\n        if (editInputIndex === index) {\n          return (\n            <Input ref={editInputRef} key={tag} size=\"small\"\n              value={editInputValue} onChange={handleEditInputChange}\n            onBlur={handleEditInputConfirm} onPressEnter={handleInputConfirm} />\n        );\n      } \n      const isLongTag = tag.length > 20;\n      const tagElem = (\n        <Tag color={prop.color || \"default\"} style={{userSelect: 'none'}} key={tag} closable onClose={() => handleClose(tag)}>\n          <span onDoubleClick={e => {\n            setEditInputIndex(_ => index);\n            setEditInputValue(_ => tag);\n            e.preventDefault();\n          }}>\n            {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n          </span>\n        </Tag>\n        );\n      return isLongTag ? (\n        <Tooltip title={tag} key={tag}>\n          {tagElem}\n        </Tooltip>\n        ) : ( tagElem );\n      })}\n      {inputVisible && (\n        <Input ref={inputRef} type=\"text\" size=\"small\"\n          style={{width: '78px', marginRight: '8px', verticalAlign: 'top'}} value={inputValue} \n          onChange={handleInputChange} onBlur={handleInputConfirm}\n          onPressEnter={handleInputConfirm} />\n      )}\n      {!inputVisible && (\n        <Tag className=\"site-tag-plus\" onClick={showInput} style={{background: '#fff', border: 'dashed thin', borderColor: '#bfbfbf' }}>\n          <PlusOutlined/> {prop.addText || \"Add Tag\"}\n        </Tag>\n      )}\n    </>\n  );\n\n}\n","import {CaseReducer, createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {getGlobalConf as getGlobalConfApi} from \"src/api/config\";\nimport {GlobalConf} from \"src/utils/type\";\nimport {RootState} from \".\";\n\n\nconst initialState: GlobalConf = {\n  platformConf: {},\n  loaded: false\n}\n\nconst setGlobalConf: CaseReducer<GlobalConf, PayloadAction<GlobalConf>> = (_, action) => {\n  return {...action.payload, loaded: true}\n}\n\nexport const getGlobalConf = createAsyncThunk(\n  \"globalConf/set\",\n  getGlobalConfApi,\n  {\n    condition: (_, { getState }) => !(getState() as RootState).globalConf.loaded\n  }\n);\n\nexport const globalConfSlice = createSlice({\n  name: \"globalConf\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getGlobalConf.fulfilled, setGlobalConf)\n  }\n})\n\nexport const platformConfSelector = (state: RootState) => state.globalConf.platformConf\n\nexport default globalConfSlice.reducer\n","import {Form, Input, Modal, Select, Tag} from 'antd';\nimport React, {useEffect, useState} from \"react\";\nimport {useSelector} from 'react-redux';\nimport {addSubscribe, getTargetName, updateSubscribe} from 'src/api/config';\nimport {InputTag} from 'src/component/inputTag';\nimport {platformConfSelector} from 'src/store/globalConfSlice';\nimport {CategoryConfig, SubscribeConfig} from 'src/utils/type';\n\ninterface InputTagCustomProp {\n  value?: Array<string>,\n  onChange?: (value: Array<string>) => void,\n  disabled?: boolean\n}\nfunction InputTagCustom(prop: InputTagCustomProp) {\n  const [value, setValue] = useState(prop.value || []);\n  const handleSetValue = (newVal: Array<string>) => {\n    setValue(() => newVal);\n    if (prop.onChange) {\n      prop.onChange(newVal);\n    }\n  }\n  useEffect(() => {\n    if (prop.value) {\n      setValue(prop.value);\n    }\n  }, [prop.value])\n  return (\n    <>\n      {\n        prop.disabled ? <Tag color=\"default\">不支持标签</Tag>: \n        <>\n        {value.length === 0 &&\n          <Tag color=\"green\">全部标签</Tag>\n        }\n        <InputTag color=\"blue\" addText=\"添加标签\" value={value} onChange={handleSetValue} />\n      </>\n      } \n    </>\n  )\n}\n\ninterface AddModalProp {\n  showModal: boolean,\n  groupNumber: string,\n  setShowModal: (s: boolean) => void,\n  refresh: () => void\n  initVal?: SubscribeConfig\n}\nexport function AddModal({\n  showModal, groupNumber, setShowModal, refresh, initVal\n}: AddModalProp) {\n  const [ confirmLoading, setConfirmLoading ] = useState<boolean>(false);\n  const platformConf = useSelector(platformConfSelector)\n  const [ hasTarget, setHasTarget ] = useState(false);\n  const [ categories, setCategories ] = useState({} as CategoryConfig);\n  const [ enabledTag, setEnableTag ] = useState(false);\n  const [ form ] = Form.useForm();\n  const [ inited, setInited ] = useState(false);\n  const changePlatformSelect = (platform: string) => {\n    setHasTarget(_ => platformConf[platform].hasTarget);\n    setCategories(_ => platformConf[platform].categories);\n    setEnableTag(platformConf[platform].enabledTag)\n    if (! platformConf[platform].hasTarget) {\n      getTargetName(platform, 'default')\n        .then(res => {\n          console.log(res)\n          form.setFieldsValue({\n            targetName: res.targetName,\n            target: ''\n          })\n        })\n    } else {\n      form.setFieldsValue({\n        targetName: '',\n        target: ''\n      })\n    }\n  }\n  const handleSubmit = (value: any) => {\n    let newVal = Object.assign({}, value)\n    if (typeof newVal.tags !== 'object') {\n      newVal.tags = []\n    }\n    if (typeof newVal.cats !== 'object') {\n      newVal.cats = []\n    }\n    if (newVal.target === '') {\n      newVal.target = 'default'\n    }\n    if (initVal) { // patch\n      updateSubscribe(groupNumber, newVal)\n        .then(() => {\n          setConfirmLoading(false);\n          setShowModal(false);\n          form.resetFields();\n          refresh();\n        });\n    } else {\n      addSubscribe(groupNumber, newVal)\n      .then(() => {\n        setConfirmLoading(false);\n        setShowModal(false);\n        form.resetFields();\n        refresh();\n        });\n    }\n  }\n  const handleModleFinish = () => {\n    form.submit();\n    setConfirmLoading(() => true);\n  }\n  useEffect(() => {\n    if (initVal && !inited) {\n      const platformName = initVal.platformName;\n      setHasTarget(platformConf[platformName].hasTarget);\n      setCategories(platformConf[platformName].categories);\n      setEnableTag(platformConf[platformName].enabledTag);\n      setInited(true)\n      form.setFieldsValue(initVal)\n    }\n  }, [initVal, form, platformConf, inited])\n  return <Modal title=\"添加订阅\" visible={showModal} \n    confirmLoading={confirmLoading} onCancel={() => setShowModal(false)}\n    onOk={handleModleFinish}>\n    <Form form={form} labelCol={{ span: 6 }} name=\"b\" onFinish={handleSubmit} >\n      <Form.Item label=\"平台\" name=\"platformName\" rules={[]}>\n        <Select style={{ width: '80%' }} onChange={changePlatformSelect}>\n          {Object.keys(platformConf).map(platformName => \n            <Select.Option key={platformName} value={platformName}>{platformConf[platformName].name}</Select.Option>\n            )}\n        </Select>\n      </Form.Item>\n      <Form.Item label=\"账号\" name=\"target\" rules={[\n        {required: hasTarget, message: \"请输入账号\"},\n        {validator: async (_, value) => {\n          try {\n            const res = await getTargetName(form.getFieldValue('platformName'), value);\n            if (res.targetName) {\n                form.setFieldsValue({\n                  targetName: res.targetName\n                })\n                return Promise.resolve()\n            } else {\n                form.setFieldsValue({\n                  targetName: ''\n                })\n              return Promise.reject(\"账号不正确，请重新检查账号\")\n            }\n          } catch {\n            return Promise.reject('服务器错误，请稍后再试')\n          }\n        }\n        }\n      ]}>\n        <Input placeholder={hasTarget ? \"获取方式见文档\" : \"此平台不需要账号\"} \n          disabled={! hasTarget} style={{ width: \"80%\" }}/>\n      </Form.Item>\n      <Form.Item label=\"账号名称\" name=\"targetName\">\n        <Input style={{ width: \"80%\" }} disabled />\n      </Form.Item>\n      <Form.Item label=\"订阅分类\" name=\"cats\" rules={[\n        {required: Object.keys(categories).length > 0, message: \"请至少选择一个分类进行订阅\"}\n      ]}>\n        <Select style={{ width: '80%' }} mode=\"multiple\" \n          disabled={Object.keys(categories).length === 0}\n          placeholder={Object.keys(categories).length > 0 ?\n            \"请选择要订阅的分类\" : \"本平台不支持分类\"}>\n          {Object.keys(categories).length > 0 &&\n            Object.keys(categories).map((indexStr) => \n              <Select.Option key={indexStr} value={parseInt(indexStr)}>\n                {categories[parseInt(indexStr)]}\n              </Select.Option>\n            )\n          }\n        </Select>\n      </Form.Item>\n      <Form.Item label=\"订阅Tag\" name=\"tags\">\n        <InputTagCustom disabled={!enabledTag}/>\n      </Form.Item>\n    </Form>\n    </Modal>\n}\n","import {CaseReducer, createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {SubscribeResp} from 'src/utils/type';\nimport {getSubscribe} from 'src/api/config';\nimport {RootState} from '.';\nconst initialState: SubscribeResp = {}\n\nconst setSubs: CaseReducer<SubscribeResp, PayloadAction<SubscribeResp>> = (_, action) => {\n  return action.payload\n}\n\nexport const updateGroupSubs = createAsyncThunk(\n  \"groupConfig/update\", getSubscribe\n)\n\nexport const groupConfigSlice = createSlice({\n  name: \"groupConfig\",\n  initialState,\n  reducers: {\n    setSubs\n  },\n  extraReducers: (reducer) => {\n    reducer.addCase(updateGroupSubs.fulfilled, setSubs)\n  }\n})\n\nexport const groupConfigSelector = (state: RootState) => state.groupConfig;\nexport default groupConfigSlice.reducer;\n","import {CopyOutlined, DeleteOutlined, EditOutlined} from '@ant-design/icons';\nimport {Card, Col, Form, message, Popconfirm, Select, Tag, Tooltip} from 'antd';\nimport Modal from 'antd/lib/modal/Modal';\nimport React, {useState} from \"react\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport {addSubscribe, delSubscribe} from 'src/api/config';\nimport {platformConfSelector} from 'src/store/globalConfSlice';\nimport {groupConfigSelector, updateGroupSubs} from 'src/store/groupConfigSlice';\nimport {PlatformConfig, SubscribeConfig, SubscribeResp} from 'src/utils/type';\nimport {AddModal} from './addSubsModal';\n\ninterface CopyModalProp {\n  setShowModal: (modalShow: boolean) => void\n  showModal: boolean\n  config: SubscribeConfig,\n  groups: SubscribeResp\n  currentGroupNumber: string\n  reload: () => void\n}\nfunction CopyModal({setShowModal,config,\n    currentGroupNumber,groups,showModal,reload}: CopyModalProp) {\n  const [confirmLoading, setConfirmLoading] = useState(false)\n  const [ selectedGroups, setSelectGroups ] = useState<Array<string>>([]);\n  const postReqs = async (selectedGroups: Array<string>, config: SubscribeConfig) => {\n    for(let selectedGroup of selectedGroups) {\n      await addSubscribe(selectedGroup, config);\n    }\n  }\n  const handleOk = () => {\n    if (selectedGroups.length === 0) {\n      message.error(\"请至少选择一个目标群\");\n    } else{\n      setConfirmLoading(true)\n      postReqs(selectedGroups, config).then(() => {\n        setConfirmLoading(false)\n        setShowModal(false)\n        return reload() \n      })\n    }\n  }\n  return <Modal title=\"复制订阅\" visible={showModal} confirmLoading={confirmLoading}\n    onCancel={() => setShowModal(false)} onOk={handleOk}>\n        <Select mode=\"multiple\" onChange={(value: Array<string>) => setSelectGroups(value)} \n          style={{width: '80%'}}>\n          {\n            Object.keys(groups).filter(groupNumber => groupNumber !== currentGroupNumber)\n              .map((groupNumber) =>\n              <Select.Option value={groupNumber} key={groupNumber}>\n                {`${groupNumber} - ${groups[groupNumber].name}`}\n              </Select.Option>)\n            }\n        </Select>\n    </Modal>\n}\ninterface SubscribeCardProp {\n  groupNumber: string\n  config: SubscribeConfig\n}\nexport function SubscribeCard({groupNumber, config}: SubscribeCardProp) {\n  const platformConfs = useSelector(platformConfSelector)\n  const [showModal, setShowModal] = useState(false)\n  const [showEditModal, setShowEditModal] = useState(false)\n  const platformConf = platformConfs[config.platformName] as PlatformConfig;\n  const dispatcher = useDispatch();\n  const groupSubscribes = useSelector(groupConfigSelector);\n  const reload = () => dispatcher(updateGroupSubs())\n  const handleDelete = (groupNumber: string, platformName: string, target: string) => () => {\n    delSubscribe(groupNumber, platformName, target).then(() => {\n      reload() \n    })\n  }\n  return (\n  <Col span={8} key={`${config.platformName}-${config.target}`}> \n    <Card title={`${platformConf.name} - ${config.targetName}`}\n      actions={[\n        <Tooltip title=\"编辑\">\n          <EditOutlined onClick={()=>{setShowEditModal(state => !state)}}/>\n        </Tooltip>,\n        <Tooltip title=\"添加到其他群\">\n          <CopyOutlined onClick={()=>{setShowModal(state => !state)}}/>\n        </Tooltip>,\n        <Popconfirm title={`确定要删除 ${platformConf.name} - ${config.targetName}`}\n          onConfirm={handleDelete(groupNumber, config.platformName, config.target || 'default')}>\n          <Tooltip title=\"删除\" ><DeleteOutlined /></Tooltip>\n        </Popconfirm>, \n        ]}>\n      <Form labelCol={{ span: 4 }}>\n        <Form.Item label=\"订阅帐号\">\n        { platformConf.hasTarget ? config.target : <Tag color=\"default\">无帐号</Tag> }\n        </Form.Item>\n      <Form.Item label=\"订阅类型\">\n        {Object.keys(platformConf.categories).length > 0 ? \n        config.cats.map((catKey: number) => (<Tag color=\"green\" key={catKey}>{platformConf.categories[catKey]}</Tag>)) :\n        <Tag color=\"default\">不支持类型</Tag>}\n      </Form.Item>\n      <Form.Item label=\"订阅Tag\">\n        {platformConf.enabledTag ? config.tags.length > 0 ? config.tags.map(tag => (<Tag color=\"green\" key={tag}>{tag}</Tag>)) : (<Tag color=\"blue\">全部标签</Tag>) :\n        <Tag color=\"default\">不支持Tag</Tag>}\n      </Form.Item>\n      </Form>\n    </Card>\n    <CopyModal setShowModal={setShowModal} reload={reload} currentGroupNumber={groupNumber}\n      showModal={showModal} config={config} groups={groupSubscribes}/>\n    <AddModal showModal={showEditModal} setShowModal={setShowEditModal} \n      groupNumber={groupNumber} refresh={reload} initVal={config}/>\n  </Col>\n  )\n}\n","import {Button, Collapse, Empty, Row} from 'antd';\nimport React, {ReactElement, useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AddModal} from 'src/component/addSubsModal';\nimport {SubscribeCard} from 'src/component/subscribeCard';\nimport {groupConfigSelector, updateGroupSubs} from 'src/store/groupConfigSlice';\n\ninterface ConfigPageProp {\n  tab: string\n}\nexport function ConfigPage(prop: ConfigPageProp) {\n  const [ showModal, setShowModal ] = useState<boolean>(false);\n  const [ currentAddingGroupNumber, setCurrentAddingGroupNumber ] = useState('');\n  const configData = useSelector(groupConfigSelector);\n  const dispatcher = useDispatch();\n  useEffect(() => {\n    dispatcher(updateGroupSubs())\n  }, [prop.tab, dispatcher]);\n  const clickNew = (groupNumber: string) => (e: React.MouseEvent<HTMLButtonElement>) => {\n    setShowModal(_ => true);\n    setCurrentAddingGroupNumber(groupNumber);\n    e.stopPropagation();\n  }\n  \n  if (Object.keys(configData).length === 0) {\n    return <Empty />\n  } else {\n    let groups: Array<ReactElement> = [];\n    for (let key of Object.keys(configData)) {\n      let value = configData[key];\n      groups.push(\n        <Collapse.Panel key={key} header={\n          <span>{`${key} - ${value.name}`}<Button style={{float: \"right\"}} onClick={clickNew(key)}>添加</Button></span>\n          }>\n            <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32},\n              { xs: 8, sm: 16, md: 24, lg: 32}]} align=\"middle\">\n            {value.subscribes.map((subs, idx) => <SubscribeCard key={idx}\n              groupNumber={key} config={subs} />)}\n          </Row>\n        </Collapse.Panel>\n        )\n    }\n    return (\n    <div>\n      <Collapse>\n        {groups}\n      </Collapse>\n      <AddModal groupNumber={currentAddingGroupNumber} showModal={showModal} \n        refresh={() => dispatcher(updateGroupSubs())}\n        setShowModal={(s: boolean) => setShowModal(_ => s)} />\n    </div>\n    )\n  }\n}\n\n\n","import {BugOutlined, SettingOutlined} from '@ant-design/icons';\nimport {Layout, Menu} from 'antd';\nimport React, {useState} from \"react\";\nimport {useSelector} from 'react-redux';\nimport {loginSelector} from 'src/store/loginSlice';\nimport './admin.css';\nimport {ConfigPage} from './configPage';\n\nexport function Admin() {\n  const login = useSelector(loginSelector)\n  const [ tab, changeTab ] = useState(\"manage\");\n  return (\n  <Layout style={{ minHeight: '100vh' }}>\n    <Layout.Sider className=\"layout-side\">\n      <div className=\"user\">\n      </div>\n      <Menu mode=\"inline\" theme=\"dark\" defaultSelectedKeys={[tab]}\n        onClick={({key}) => changeTab(key)}>\n        <Menu.Item key=\"manage\" icon={<SettingOutlined />}>订阅管理</Menu.Item>\n        { login.type === 'admin' &&\n        <Menu.Item key=\"log\" icon={<BugOutlined />}>查看日志</Menu.Item>\n        }\n      </Menu>\n    </Layout.Sider>\n    <Layout.Content>\n      <div style={{margin: '24px', background: '#fff', minHeight: '640px'}}>\n      {\n        tab === 'manage' ? \n        <ConfigPage tab={tab}/>\n        : null\n      }\n      </div>\n    </Layout.Content>\n  </Layout>\n  )\n}\n\n","import React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useParams} from \"react-router\";\nimport {Redirect} from 'react-router-dom';\nimport {login, loginSelector} from 'src/store/loginSlice';\n\ninterface AuthParam  {\n  code: string\n}\nexport function Auth() {\n  const { code } = useParams<AuthParam>(); \n  const dispatch = useDispatch();\n  const loginState = useSelector(loginSelector)\n  useEffect(() => {\n    const loginFun = async () => {\n      dispatch(login(code));\n    }\n    loginFun();\n  }, [code, dispatch])\n  return <>\n    { loginState.login ?\n      <Redirect to={{pathname: '/admin'}} /> :\n      loginState.failed ?\n      <div>登录失败，请重新获取连接</div> :\n      <div>Logining...</div>\n    }\n</>;\n}\n","import {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\nimport {AppDispatch, RootState} from \".\";\n\nexport const useAppDispacher = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import 'antd/dist/antd.css';\nimport React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport {Admin} from './pages/admin';\nimport {Auth} from './pages/auth';\nimport {getGlobalConf} from './store/globalConfSlice';\nimport {useAppSelector} from './store/hooks';\nimport {loadLoginState, loginSelector} from './store/loginSlice';\n\n\nfunction LoginSwitch() {\n  const login = useSelector(loginSelector)\n  if (login.login) {\n    return <Admin />;\n  } else {\n    return (\n      <div>\n        not login\n      </div>\n    )\n  }\n}\n\nfunction App() {\n  const dispatch = useDispatch()\n  const globalConf = useAppSelector(state => state.globalConf)\n  useEffect(() => {\n    dispatch(getGlobalConf());\n    dispatch(loadLoginState())\n  }, [dispatch]);\n  return <>\n      { globalConf.loaded &&\n        <Router basename=\"/bison\">\n          <Switch>\n            <Route path=\"/auth/:code\">\n              <Auth />   \n            </Route>\n            <Route path=\"/admin/\">\n              <LoginSwitch /> \n            </Route>\n          </Switch>\n        </Router>\n      }\n    </>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from \"@reduxjs/toolkit\";\nimport loginSlice from \"./loginSlice\";\nimport globalConfSlice from \"./globalConfSlice\";\nimport groupConfigSlice from './groupConfigSlice';\n\nconst store = configureStore({\n  reducer: {\n    login: loginSlice,\n    globalConf: globalConfSlice,\n    groupConfig: groupConfigSlice,\n  }\n})\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport type Store = typeof store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport {injectStore} from 'src/api/utils';\n\ninjectStore(store);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}