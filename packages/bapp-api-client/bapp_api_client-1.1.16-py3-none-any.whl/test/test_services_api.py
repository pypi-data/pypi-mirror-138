# coding: utf-8

"""
    BAPP API

    Test description  # noqa: E501

    OpenAPI spec version: v1
    Contact: contact@snippets.local
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import bapp_api_client
from bapp_api_client.api.services_api import ServicesApi  # noqa: E501
from bapp_api_client.rest import ApiException


class TestServicesApi(unittest.TestCase):
    """ServicesApi unit test stubs"""

    def setUp(self):
        self.api = bapp_api_client.api.services_api.ServicesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_services_create(self):
        """Test case for services_create

        """
        pass

    def test_services_delete(self):
        """Test case for services_delete

        """
        pass

    def test_services_description_types_list(self):
        """Test case for services_description_types_list

        """
        pass

    def test_services_feature_category_create(self):
        """Test case for services_feature_category_create

        """
        pass

    def test_services_feature_category_delete(self):
        """Test case for services_feature_category_delete

        """
        pass

    def test_services_feature_category_list(self):
        """Test case for services_feature_category_list

        """
        pass

    def test_services_feature_category_partial_update(self):
        """Test case for services_feature_category_partial_update

        """
        pass

    def test_services_feature_category_read(self):
        """Test case for services_feature_category_read

        """
        pass

    def test_services_feature_category_update(self):
        """Test case for services_feature_category_update

        """
        pass

    def test_services_feature_create(self):
        """Test case for services_feature_create

        """
        pass

    def test_services_feature_delete(self):
        """Test case for services_feature_delete

        """
        pass

    def test_services_feature_list(self):
        """Test case for services_feature_list

        """
        pass

    def test_services_feature_partial_update(self):
        """Test case for services_feature_partial_update

        """
        pass

    def test_services_feature_read(self):
        """Test case for services_feature_read

        """
        pass

    def test_services_feature_update(self):
        """Test case for services_feature_update

        """
        pass

    def test_services_list(self):
        """Test case for services_list

        """
        pass

    def test_services_packages_create(self):
        """Test case for services_packages_create

        """
        pass

    def test_services_packages_delete(self):
        """Test case for services_packages_delete

        """
        pass

    def test_services_packages_list(self):
        """Test case for services_packages_list

        """
        pass

    def test_services_packages_partial_update(self):
        """Test case for services_packages_partial_update

        """
        pass

    def test_services_packages_read(self):
        """Test case for services_packages_read

        """
        pass

    def test_services_packages_update(self):
        """Test case for services_packages_update

        """
        pass

    def test_services_partial_update(self):
        """Test case for services_partial_update

        """
        pass

    def test_services_read(self):
        """Test case for services_read

        """
        pass

    def test_services_specific_partner_price_create(self):
        """Test case for services_specific_partner_price_create

        """
        pass

    def test_services_specific_partner_price_delete(self):
        """Test case for services_specific_partner_price_delete

        """
        pass

    def test_services_specific_partner_price_list(self):
        """Test case for services_specific_partner_price_list

        """
        pass

    def test_services_specific_partner_price_partial_update(self):
        """Test case for services_specific_partner_price_partial_update

        """
        pass

    def test_services_specific_partner_price_read(self):
        """Test case for services_specific_partner_price_read

        """
        pass

    def test_services_specific_partner_price_update(self):
        """Test case for services_specific_partner_price_update

        """
        pass

    def test_services_update(self):
        """Test case for services_update

        """
        pass


if __name__ == '__main__':
    unittest.main()
