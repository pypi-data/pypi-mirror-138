# coding: utf-8

"""
    CloudTower APIs

    cloudtower operation API and SDK  # noqa: E501

    The version of the OpenAPI document: 1.9.0
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class GlobalAlertRuleWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'alert_rules_every': 'AlertRuleWhereInput',
        'alert_rules_none': 'AlertRuleWhereInput',
        'alert_rules_some': 'AlertRuleWhereInput',
        '_and': 'list[GlobalAlertRuleWhereInput]',
        'boolean': 'bool',
        'boolean_not': 'bool',
        'cause': 'str',
        'cause_contains': 'str',
        'cause_ends_with': 'str',
        'cause_gt': 'str',
        'cause_gte': 'str',
        'cause_in': 'list[str]',
        'cause_lt': 'str',
        'cause_lte': 'str',
        'cause_not': 'str',
        'cause_not_contains': 'str',
        'cause_not_ends_with': 'str',
        'cause_not_in': 'list[str]',
        'cause_not_starts_with': 'str',
        'cause_starts_with': 'str',
        'disabled': 'bool',
        'disabled_not': 'bool',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'impact': 'str',
        'impact_contains': 'str',
        'impact_ends_with': 'str',
        'impact_gt': 'str',
        'impact_gte': 'str',
        'impact_in': 'list[str]',
        'impact_lt': 'str',
        'impact_lte': 'str',
        'impact_not': 'str',
        'impact_not_contains': 'str',
        'impact_not_ends_with': 'str',
        'impact_not_in': 'list[str]',
        'impact_not_starts_with': 'str',
        'impact_starts_with': 'str',
        'message': 'str',
        'message_contains': 'str',
        'message_ends_with': 'str',
        'message_gt': 'str',
        'message_gte': 'str',
        'message_in': 'list[str]',
        'message_lt': 'str',
        'message_lte': 'str',
        'message_not': 'str',
        'message_not_contains': 'str',
        'message_not_ends_with': 'str',
        'message_not_in': 'list[str]',
        'message_not_starts_with': 'str',
        'message_starts_with': 'str',
        'name': 'str',
        'name_contains': 'str',
        'name_ends_with': 'str',
        'name_gt': 'str',
        'name_gte': 'str',
        'name_in': 'list[str]',
        'name_lt': 'str',
        'name_lte': 'str',
        'name_not': 'str',
        'name_not_contains': 'str',
        'name_not_ends_with': 'str',
        'name_not_in': 'list[str]',
        'name_not_starts_with': 'str',
        'name_starts_with': 'str',
        '_not': 'list[GlobalAlertRuleWhereInput]',
        'object': 'AlertRuleObject',
        'object_in': 'list[AlertRuleObject]',
        'object_not': 'AlertRuleObject',
        'object_not_in': 'list[AlertRuleObject]',
        'operator': 'str',
        'operator_contains': 'str',
        'operator_ends_with': 'str',
        'operator_gt': 'str',
        'operator_gte': 'str',
        'operator_in': 'list[str]',
        'operator_lt': 'str',
        'operator_lte': 'str',
        'operator_not': 'str',
        'operator_not_contains': 'str',
        'operator_not_ends_with': 'str',
        'operator_not_in': 'list[str]',
        'operator_not_starts_with': 'str',
        'operator_starts_with': 'str',
        '_or': 'list[GlobalAlertRuleWhereInput]',
        'solution': 'str',
        'solution_contains': 'str',
        'solution_ends_with': 'str',
        'solution_gt': 'str',
        'solution_gte': 'str',
        'solution_in': 'list[str]',
        'solution_lt': 'str',
        'solution_lte': 'str',
        'solution_not': 'str',
        'solution_not_contains': 'str',
        'solution_not_ends_with': 'str',
        'solution_not_in': 'list[str]',
        'solution_not_starts_with': 'str',
        'solution_starts_with': 'str',
        'unit': 'AlertRuleUnit',
        'unit_in': 'list[AlertRuleUnit]',
        'unit_not': 'AlertRuleUnit',
        'unit_not_in': 'list[AlertRuleUnit]'
    }

    attribute_map = {
        'alert_rules_every': 'alert_rules_every',
        'alert_rules_none': 'alert_rules_none',
        'alert_rules_some': 'alert_rules_some',
        '_and': 'AND',
        'boolean': 'boolean',
        'boolean_not': 'boolean_not',
        'cause': 'cause',
        'cause_contains': 'cause_contains',
        'cause_ends_with': 'cause_ends_with',
        'cause_gt': 'cause_gt',
        'cause_gte': 'cause_gte',
        'cause_in': 'cause_in',
        'cause_lt': 'cause_lt',
        'cause_lte': 'cause_lte',
        'cause_not': 'cause_not',
        'cause_not_contains': 'cause_not_contains',
        'cause_not_ends_with': 'cause_not_ends_with',
        'cause_not_in': 'cause_not_in',
        'cause_not_starts_with': 'cause_not_starts_with',
        'cause_starts_with': 'cause_starts_with',
        'disabled': 'disabled',
        'disabled_not': 'disabled_not',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'impact': 'impact',
        'impact_contains': 'impact_contains',
        'impact_ends_with': 'impact_ends_with',
        'impact_gt': 'impact_gt',
        'impact_gte': 'impact_gte',
        'impact_in': 'impact_in',
        'impact_lt': 'impact_lt',
        'impact_lte': 'impact_lte',
        'impact_not': 'impact_not',
        'impact_not_contains': 'impact_not_contains',
        'impact_not_ends_with': 'impact_not_ends_with',
        'impact_not_in': 'impact_not_in',
        'impact_not_starts_with': 'impact_not_starts_with',
        'impact_starts_with': 'impact_starts_with',
        'message': 'message',
        'message_contains': 'message_contains',
        'message_ends_with': 'message_ends_with',
        'message_gt': 'message_gt',
        'message_gte': 'message_gte',
        'message_in': 'message_in',
        'message_lt': 'message_lt',
        'message_lte': 'message_lte',
        'message_not': 'message_not',
        'message_not_contains': 'message_not_contains',
        'message_not_ends_with': 'message_not_ends_with',
        'message_not_in': 'message_not_in',
        'message_not_starts_with': 'message_not_starts_with',
        'message_starts_with': 'message_starts_with',
        'name': 'name',
        'name_contains': 'name_contains',
        'name_ends_with': 'name_ends_with',
        'name_gt': 'name_gt',
        'name_gte': 'name_gte',
        'name_in': 'name_in',
        'name_lt': 'name_lt',
        'name_lte': 'name_lte',
        'name_not': 'name_not',
        'name_not_contains': 'name_not_contains',
        'name_not_ends_with': 'name_not_ends_with',
        'name_not_in': 'name_not_in',
        'name_not_starts_with': 'name_not_starts_with',
        'name_starts_with': 'name_starts_with',
        '_not': 'NOT',
        'object': 'object',
        'object_in': 'object_in',
        'object_not': 'object_not',
        'object_not_in': 'object_not_in',
        'operator': 'operator',
        'operator_contains': 'operator_contains',
        'operator_ends_with': 'operator_ends_with',
        'operator_gt': 'operator_gt',
        'operator_gte': 'operator_gte',
        'operator_in': 'operator_in',
        'operator_lt': 'operator_lt',
        'operator_lte': 'operator_lte',
        'operator_not': 'operator_not',
        'operator_not_contains': 'operator_not_contains',
        'operator_not_ends_with': 'operator_not_ends_with',
        'operator_not_in': 'operator_not_in',
        'operator_not_starts_with': 'operator_not_starts_with',
        'operator_starts_with': 'operator_starts_with',
        '_or': 'OR',
        'solution': 'solution',
        'solution_contains': 'solution_contains',
        'solution_ends_with': 'solution_ends_with',
        'solution_gt': 'solution_gt',
        'solution_gte': 'solution_gte',
        'solution_in': 'solution_in',
        'solution_lt': 'solution_lt',
        'solution_lte': 'solution_lte',
        'solution_not': 'solution_not',
        'solution_not_contains': 'solution_not_contains',
        'solution_not_ends_with': 'solution_not_ends_with',
        'solution_not_in': 'solution_not_in',
        'solution_not_starts_with': 'solution_not_starts_with',
        'solution_starts_with': 'solution_starts_with',
        'unit': 'unit',
        'unit_in': 'unit_in',
        'unit_not': 'unit_not',
        'unit_not_in': 'unit_not_in'
    }

    def __init__(self, alert_rules_every=None, alert_rules_none=None, alert_rules_some=None, _and=None, boolean=None, boolean_not=None, cause=None, cause_contains=None, cause_ends_with=None, cause_gt=None, cause_gte=None, cause_in=None, cause_lt=None, cause_lte=None, cause_not=None, cause_not_contains=None, cause_not_ends_with=None, cause_not_in=None, cause_not_starts_with=None, cause_starts_with=None, disabled=None, disabled_not=None, id=None, id_contains=None, id_ends_with=None, id_gt=None, id_gte=None, id_in=None, id_lt=None, id_lte=None, id_not=None, id_not_contains=None, id_not_ends_with=None, id_not_in=None, id_not_starts_with=None, id_starts_with=None, impact=None, impact_contains=None, impact_ends_with=None, impact_gt=None, impact_gte=None, impact_in=None, impact_lt=None, impact_lte=None, impact_not=None, impact_not_contains=None, impact_not_ends_with=None, impact_not_in=None, impact_not_starts_with=None, impact_starts_with=None, message=None, message_contains=None, message_ends_with=None, message_gt=None, message_gte=None, message_in=None, message_lt=None, message_lte=None, message_not=None, message_not_contains=None, message_not_ends_with=None, message_not_in=None, message_not_starts_with=None, message_starts_with=None, name=None, name_contains=None, name_ends_with=None, name_gt=None, name_gte=None, name_in=None, name_lt=None, name_lte=None, name_not=None, name_not_contains=None, name_not_ends_with=None, name_not_in=None, name_not_starts_with=None, name_starts_with=None, _not=None, object=None, object_in=None, object_not=None, object_not_in=None, operator=None, operator_contains=None, operator_ends_with=None, operator_gt=None, operator_gte=None, operator_in=None, operator_lt=None, operator_lte=None, operator_not=None, operator_not_contains=None, operator_not_ends_with=None, operator_not_in=None, operator_not_starts_with=None, operator_starts_with=None, _or=None, solution=None, solution_contains=None, solution_ends_with=None, solution_gt=None, solution_gte=None, solution_in=None, solution_lt=None, solution_lte=None, solution_not=None, solution_not_contains=None, solution_not_ends_with=None, solution_not_in=None, solution_not_starts_with=None, solution_starts_with=None, unit=None, unit_in=None, unit_not=None, unit_not_in=None, local_vars_configuration=None):  # noqa: E501
        """GlobalAlertRuleWhereInput - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._alert_rules_every = None
        self._alert_rules_none = None
        self._alert_rules_some = None
        self.__and = None
        self._boolean = None
        self._boolean_not = None
        self._cause = None
        self._cause_contains = None
        self._cause_ends_with = None
        self._cause_gt = None
        self._cause_gte = None
        self._cause_in = None
        self._cause_lt = None
        self._cause_lte = None
        self._cause_not = None
        self._cause_not_contains = None
        self._cause_not_ends_with = None
        self._cause_not_in = None
        self._cause_not_starts_with = None
        self._cause_starts_with = None
        self._disabled = None
        self._disabled_not = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._impact = None
        self._impact_contains = None
        self._impact_ends_with = None
        self._impact_gt = None
        self._impact_gte = None
        self._impact_in = None
        self._impact_lt = None
        self._impact_lte = None
        self._impact_not = None
        self._impact_not_contains = None
        self._impact_not_ends_with = None
        self._impact_not_in = None
        self._impact_not_starts_with = None
        self._impact_starts_with = None
        self._message = None
        self._message_contains = None
        self._message_ends_with = None
        self._message_gt = None
        self._message_gte = None
        self._message_in = None
        self._message_lt = None
        self._message_lte = None
        self._message_not = None
        self._message_not_contains = None
        self._message_not_ends_with = None
        self._message_not_in = None
        self._message_not_starts_with = None
        self._message_starts_with = None
        self._name = None
        self._name_contains = None
        self._name_ends_with = None
        self._name_gt = None
        self._name_gte = None
        self._name_in = None
        self._name_lt = None
        self._name_lte = None
        self._name_not = None
        self._name_not_contains = None
        self._name_not_ends_with = None
        self._name_not_in = None
        self._name_not_starts_with = None
        self._name_starts_with = None
        self.__not = None
        self._object = None
        self._object_in = None
        self._object_not = None
        self._object_not_in = None
        self._operator = None
        self._operator_contains = None
        self._operator_ends_with = None
        self._operator_gt = None
        self._operator_gte = None
        self._operator_in = None
        self._operator_lt = None
        self._operator_lte = None
        self._operator_not = None
        self._operator_not_contains = None
        self._operator_not_ends_with = None
        self._operator_not_in = None
        self._operator_not_starts_with = None
        self._operator_starts_with = None
        self.__or = None
        self._solution = None
        self._solution_contains = None
        self._solution_ends_with = None
        self._solution_gt = None
        self._solution_gte = None
        self._solution_in = None
        self._solution_lt = None
        self._solution_lte = None
        self._solution_not = None
        self._solution_not_contains = None
        self._solution_not_ends_with = None
        self._solution_not_in = None
        self._solution_not_starts_with = None
        self._solution_starts_with = None
        self._unit = None
        self._unit_in = None
        self._unit_not = None
        self._unit_not_in = None
        self.discriminator = None

        self.alert_rules_every = alert_rules_every
        self.alert_rules_none = alert_rules_none
        self.alert_rules_some = alert_rules_some
        self._and = _and
        self.boolean = boolean
        self.boolean_not = boolean_not
        self.cause = cause
        self.cause_contains = cause_contains
        self.cause_ends_with = cause_ends_with
        self.cause_gt = cause_gt
        self.cause_gte = cause_gte
        self.cause_in = cause_in
        self.cause_lt = cause_lt
        self.cause_lte = cause_lte
        self.cause_not = cause_not
        self.cause_not_contains = cause_not_contains
        self.cause_not_ends_with = cause_not_ends_with
        self.cause_not_in = cause_not_in
        self.cause_not_starts_with = cause_not_starts_with
        self.cause_starts_with = cause_starts_with
        self.disabled = disabled
        self.disabled_not = disabled_not
        self.id = id
        self.id_contains = id_contains
        self.id_ends_with = id_ends_with
        self.id_gt = id_gt
        self.id_gte = id_gte
        self.id_in = id_in
        self.id_lt = id_lt
        self.id_lte = id_lte
        self.id_not = id_not
        self.id_not_contains = id_not_contains
        self.id_not_ends_with = id_not_ends_with
        self.id_not_in = id_not_in
        self.id_not_starts_with = id_not_starts_with
        self.id_starts_with = id_starts_with
        self.impact = impact
        self.impact_contains = impact_contains
        self.impact_ends_with = impact_ends_with
        self.impact_gt = impact_gt
        self.impact_gte = impact_gte
        self.impact_in = impact_in
        self.impact_lt = impact_lt
        self.impact_lte = impact_lte
        self.impact_not = impact_not
        self.impact_not_contains = impact_not_contains
        self.impact_not_ends_with = impact_not_ends_with
        self.impact_not_in = impact_not_in
        self.impact_not_starts_with = impact_not_starts_with
        self.impact_starts_with = impact_starts_with
        self.message = message
        self.message_contains = message_contains
        self.message_ends_with = message_ends_with
        self.message_gt = message_gt
        self.message_gte = message_gte
        self.message_in = message_in
        self.message_lt = message_lt
        self.message_lte = message_lte
        self.message_not = message_not
        self.message_not_contains = message_not_contains
        self.message_not_ends_with = message_not_ends_with
        self.message_not_in = message_not_in
        self.message_not_starts_with = message_not_starts_with
        self.message_starts_with = message_starts_with
        self.name = name
        self.name_contains = name_contains
        self.name_ends_with = name_ends_with
        self.name_gt = name_gt
        self.name_gte = name_gte
        self.name_in = name_in
        self.name_lt = name_lt
        self.name_lte = name_lte
        self.name_not = name_not
        self.name_not_contains = name_not_contains
        self.name_not_ends_with = name_not_ends_with
        self.name_not_in = name_not_in
        self.name_not_starts_with = name_not_starts_with
        self.name_starts_with = name_starts_with
        self._not = _not
        self.object = object
        self.object_in = object_in
        self.object_not = object_not
        self.object_not_in = object_not_in
        self.operator = operator
        self.operator_contains = operator_contains
        self.operator_ends_with = operator_ends_with
        self.operator_gt = operator_gt
        self.operator_gte = operator_gte
        self.operator_in = operator_in
        self.operator_lt = operator_lt
        self.operator_lte = operator_lte
        self.operator_not = operator_not
        self.operator_not_contains = operator_not_contains
        self.operator_not_ends_with = operator_not_ends_with
        self.operator_not_in = operator_not_in
        self.operator_not_starts_with = operator_not_starts_with
        self.operator_starts_with = operator_starts_with
        self._or = _or
        self.solution = solution
        self.solution_contains = solution_contains
        self.solution_ends_with = solution_ends_with
        self.solution_gt = solution_gt
        self.solution_gte = solution_gte
        self.solution_in = solution_in
        self.solution_lt = solution_lt
        self.solution_lte = solution_lte
        self.solution_not = solution_not
        self.solution_not_contains = solution_not_contains
        self.solution_not_ends_with = solution_not_ends_with
        self.solution_not_in = solution_not_in
        self.solution_not_starts_with = solution_not_starts_with
        self.solution_starts_with = solution_starts_with
        self.unit = unit
        self.unit_in = unit_in
        self.unit_not = unit_not
        self.unit_not_in = unit_not_in

    @property
    def alert_rules_every(self):
        """Gets the alert_rules_every of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The alert_rules_every of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: AlertRuleWhereInput
        """
        return self._alert_rules_every

    @alert_rules_every.setter
    def alert_rules_every(self, alert_rules_every):
        """Sets the alert_rules_every of this GlobalAlertRuleWhereInput.


        :param alert_rules_every: The alert_rules_every of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type alert_rules_every: AlertRuleWhereInput
        """

        self._alert_rules_every = alert_rules_every

    @property
    def alert_rules_none(self):
        """Gets the alert_rules_none of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The alert_rules_none of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: AlertRuleWhereInput
        """
        return self._alert_rules_none

    @alert_rules_none.setter
    def alert_rules_none(self, alert_rules_none):
        """Sets the alert_rules_none of this GlobalAlertRuleWhereInput.


        :param alert_rules_none: The alert_rules_none of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type alert_rules_none: AlertRuleWhereInput
        """

        self._alert_rules_none = alert_rules_none

    @property
    def alert_rules_some(self):
        """Gets the alert_rules_some of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The alert_rules_some of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: AlertRuleWhereInput
        """
        return self._alert_rules_some

    @alert_rules_some.setter
    def alert_rules_some(self, alert_rules_some):
        """Sets the alert_rules_some of this GlobalAlertRuleWhereInput.


        :param alert_rules_some: The alert_rules_some of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type alert_rules_some: AlertRuleWhereInput
        """

        self._alert_rules_some = alert_rules_some

    @property
    def _and(self):
        """Gets the _and of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The _and of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[GlobalAlertRuleWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this GlobalAlertRuleWhereInput.


        :param _and: The _and of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type _and: list[GlobalAlertRuleWhereInput]
        """

        self.__and = _and

    @property
    def boolean(self):
        """Gets the boolean of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The boolean of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._boolean

    @boolean.setter
    def boolean(self, boolean):
        """Sets the boolean of this GlobalAlertRuleWhereInput.


        :param boolean: The boolean of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type boolean: bool
        """

        self._boolean = boolean

    @property
    def boolean_not(self):
        """Gets the boolean_not of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The boolean_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._boolean_not

    @boolean_not.setter
    def boolean_not(self, boolean_not):
        """Sets the boolean_not of this GlobalAlertRuleWhereInput.


        :param boolean_not: The boolean_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type boolean_not: bool
        """

        self._boolean_not = boolean_not

    @property
    def cause(self):
        """Gets the cause of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The cause of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cause

    @cause.setter
    def cause(self, cause):
        """Sets the cause of this GlobalAlertRuleWhereInput.


        :param cause: The cause of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type cause: str
        """

        self._cause = cause

    @property
    def cause_contains(self):
        """Gets the cause_contains of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The cause_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cause_contains

    @cause_contains.setter
    def cause_contains(self, cause_contains):
        """Sets the cause_contains of this GlobalAlertRuleWhereInput.


        :param cause_contains: The cause_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type cause_contains: str
        """

        self._cause_contains = cause_contains

    @property
    def cause_ends_with(self):
        """Gets the cause_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The cause_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cause_ends_with

    @cause_ends_with.setter
    def cause_ends_with(self, cause_ends_with):
        """Sets the cause_ends_with of this GlobalAlertRuleWhereInput.


        :param cause_ends_with: The cause_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type cause_ends_with: str
        """

        self._cause_ends_with = cause_ends_with

    @property
    def cause_gt(self):
        """Gets the cause_gt of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The cause_gt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cause_gt

    @cause_gt.setter
    def cause_gt(self, cause_gt):
        """Sets the cause_gt of this GlobalAlertRuleWhereInput.


        :param cause_gt: The cause_gt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type cause_gt: str
        """

        self._cause_gt = cause_gt

    @property
    def cause_gte(self):
        """Gets the cause_gte of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The cause_gte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cause_gte

    @cause_gte.setter
    def cause_gte(self, cause_gte):
        """Sets the cause_gte of this GlobalAlertRuleWhereInput.


        :param cause_gte: The cause_gte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type cause_gte: str
        """

        self._cause_gte = cause_gte

    @property
    def cause_in(self):
        """Gets the cause_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The cause_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._cause_in

    @cause_in.setter
    def cause_in(self, cause_in):
        """Sets the cause_in of this GlobalAlertRuleWhereInput.


        :param cause_in: The cause_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type cause_in: list[str]
        """

        self._cause_in = cause_in

    @property
    def cause_lt(self):
        """Gets the cause_lt of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The cause_lt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cause_lt

    @cause_lt.setter
    def cause_lt(self, cause_lt):
        """Sets the cause_lt of this GlobalAlertRuleWhereInput.


        :param cause_lt: The cause_lt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type cause_lt: str
        """

        self._cause_lt = cause_lt

    @property
    def cause_lte(self):
        """Gets the cause_lte of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The cause_lte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cause_lte

    @cause_lte.setter
    def cause_lte(self, cause_lte):
        """Sets the cause_lte of this GlobalAlertRuleWhereInput.


        :param cause_lte: The cause_lte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type cause_lte: str
        """

        self._cause_lte = cause_lte

    @property
    def cause_not(self):
        """Gets the cause_not of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The cause_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cause_not

    @cause_not.setter
    def cause_not(self, cause_not):
        """Sets the cause_not of this GlobalAlertRuleWhereInput.


        :param cause_not: The cause_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type cause_not: str
        """

        self._cause_not = cause_not

    @property
    def cause_not_contains(self):
        """Gets the cause_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The cause_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cause_not_contains

    @cause_not_contains.setter
    def cause_not_contains(self, cause_not_contains):
        """Sets the cause_not_contains of this GlobalAlertRuleWhereInput.


        :param cause_not_contains: The cause_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type cause_not_contains: str
        """

        self._cause_not_contains = cause_not_contains

    @property
    def cause_not_ends_with(self):
        """Gets the cause_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The cause_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cause_not_ends_with

    @cause_not_ends_with.setter
    def cause_not_ends_with(self, cause_not_ends_with):
        """Sets the cause_not_ends_with of this GlobalAlertRuleWhereInput.


        :param cause_not_ends_with: The cause_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type cause_not_ends_with: str
        """

        self._cause_not_ends_with = cause_not_ends_with

    @property
    def cause_not_in(self):
        """Gets the cause_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The cause_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._cause_not_in

    @cause_not_in.setter
    def cause_not_in(self, cause_not_in):
        """Sets the cause_not_in of this GlobalAlertRuleWhereInput.


        :param cause_not_in: The cause_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type cause_not_in: list[str]
        """

        self._cause_not_in = cause_not_in

    @property
    def cause_not_starts_with(self):
        """Gets the cause_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The cause_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cause_not_starts_with

    @cause_not_starts_with.setter
    def cause_not_starts_with(self, cause_not_starts_with):
        """Sets the cause_not_starts_with of this GlobalAlertRuleWhereInput.


        :param cause_not_starts_with: The cause_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type cause_not_starts_with: str
        """

        self._cause_not_starts_with = cause_not_starts_with

    @property
    def cause_starts_with(self):
        """Gets the cause_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The cause_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._cause_starts_with

    @cause_starts_with.setter
    def cause_starts_with(self, cause_starts_with):
        """Sets the cause_starts_with of this GlobalAlertRuleWhereInput.


        :param cause_starts_with: The cause_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type cause_starts_with: str
        """

        self._cause_starts_with = cause_starts_with

    @property
    def disabled(self):
        """Gets the disabled of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The disabled of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this GlobalAlertRuleWhereInput.


        :param disabled: The disabled of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def disabled_not(self):
        """Gets the disabled_not of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The disabled_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: bool
        """
        return self._disabled_not

    @disabled_not.setter
    def disabled_not(self, disabled_not):
        """Sets the disabled_not of this GlobalAlertRuleWhereInput.


        :param disabled_not: The disabled_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type disabled_not: bool
        """

        self._disabled_not = disabled_not

    @property
    def id(self):
        """Gets the id of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The id of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GlobalAlertRuleWhereInput.


        :param id: The id of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The id_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this GlobalAlertRuleWhereInput.


        :param id_contains: The id_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The id_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this GlobalAlertRuleWhereInput.


        :param id_ends_with: The id_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The id_gt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this GlobalAlertRuleWhereInput.


        :param id_gt: The id_gt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The id_gte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this GlobalAlertRuleWhereInput.


        :param id_gte: The id_gte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The id_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this GlobalAlertRuleWhereInput.


        :param id_in: The id_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The id_lt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this GlobalAlertRuleWhereInput.


        :param id_lt: The id_lt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The id_lte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this GlobalAlertRuleWhereInput.


        :param id_lte: The id_lte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The id_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this GlobalAlertRuleWhereInput.


        :param id_not: The id_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The id_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this GlobalAlertRuleWhereInput.


        :param id_not_contains: The id_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this GlobalAlertRuleWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The id_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this GlobalAlertRuleWhereInput.


        :param id_not_in: The id_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this GlobalAlertRuleWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The id_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this GlobalAlertRuleWhereInput.


        :param id_starts_with: The id_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def impact(self):
        """Gets the impact of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The impact of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._impact

    @impact.setter
    def impact(self, impact):
        """Sets the impact of this GlobalAlertRuleWhereInput.


        :param impact: The impact of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type impact: str
        """

        self._impact = impact

    @property
    def impact_contains(self):
        """Gets the impact_contains of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The impact_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._impact_contains

    @impact_contains.setter
    def impact_contains(self, impact_contains):
        """Sets the impact_contains of this GlobalAlertRuleWhereInput.


        :param impact_contains: The impact_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type impact_contains: str
        """

        self._impact_contains = impact_contains

    @property
    def impact_ends_with(self):
        """Gets the impact_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The impact_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._impact_ends_with

    @impact_ends_with.setter
    def impact_ends_with(self, impact_ends_with):
        """Sets the impact_ends_with of this GlobalAlertRuleWhereInput.


        :param impact_ends_with: The impact_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type impact_ends_with: str
        """

        self._impact_ends_with = impact_ends_with

    @property
    def impact_gt(self):
        """Gets the impact_gt of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The impact_gt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._impact_gt

    @impact_gt.setter
    def impact_gt(self, impact_gt):
        """Sets the impact_gt of this GlobalAlertRuleWhereInput.


        :param impact_gt: The impact_gt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type impact_gt: str
        """

        self._impact_gt = impact_gt

    @property
    def impact_gte(self):
        """Gets the impact_gte of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The impact_gte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._impact_gte

    @impact_gte.setter
    def impact_gte(self, impact_gte):
        """Sets the impact_gte of this GlobalAlertRuleWhereInput.


        :param impact_gte: The impact_gte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type impact_gte: str
        """

        self._impact_gte = impact_gte

    @property
    def impact_in(self):
        """Gets the impact_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The impact_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._impact_in

    @impact_in.setter
    def impact_in(self, impact_in):
        """Sets the impact_in of this GlobalAlertRuleWhereInput.


        :param impact_in: The impact_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type impact_in: list[str]
        """

        self._impact_in = impact_in

    @property
    def impact_lt(self):
        """Gets the impact_lt of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The impact_lt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._impact_lt

    @impact_lt.setter
    def impact_lt(self, impact_lt):
        """Sets the impact_lt of this GlobalAlertRuleWhereInput.


        :param impact_lt: The impact_lt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type impact_lt: str
        """

        self._impact_lt = impact_lt

    @property
    def impact_lte(self):
        """Gets the impact_lte of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The impact_lte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._impact_lte

    @impact_lte.setter
    def impact_lte(self, impact_lte):
        """Sets the impact_lte of this GlobalAlertRuleWhereInput.


        :param impact_lte: The impact_lte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type impact_lte: str
        """

        self._impact_lte = impact_lte

    @property
    def impact_not(self):
        """Gets the impact_not of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The impact_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._impact_not

    @impact_not.setter
    def impact_not(self, impact_not):
        """Sets the impact_not of this GlobalAlertRuleWhereInput.


        :param impact_not: The impact_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type impact_not: str
        """

        self._impact_not = impact_not

    @property
    def impact_not_contains(self):
        """Gets the impact_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The impact_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._impact_not_contains

    @impact_not_contains.setter
    def impact_not_contains(self, impact_not_contains):
        """Sets the impact_not_contains of this GlobalAlertRuleWhereInput.


        :param impact_not_contains: The impact_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type impact_not_contains: str
        """

        self._impact_not_contains = impact_not_contains

    @property
    def impact_not_ends_with(self):
        """Gets the impact_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The impact_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._impact_not_ends_with

    @impact_not_ends_with.setter
    def impact_not_ends_with(self, impact_not_ends_with):
        """Sets the impact_not_ends_with of this GlobalAlertRuleWhereInput.


        :param impact_not_ends_with: The impact_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type impact_not_ends_with: str
        """

        self._impact_not_ends_with = impact_not_ends_with

    @property
    def impact_not_in(self):
        """Gets the impact_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The impact_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._impact_not_in

    @impact_not_in.setter
    def impact_not_in(self, impact_not_in):
        """Sets the impact_not_in of this GlobalAlertRuleWhereInput.


        :param impact_not_in: The impact_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type impact_not_in: list[str]
        """

        self._impact_not_in = impact_not_in

    @property
    def impact_not_starts_with(self):
        """Gets the impact_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The impact_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._impact_not_starts_with

    @impact_not_starts_with.setter
    def impact_not_starts_with(self, impact_not_starts_with):
        """Sets the impact_not_starts_with of this GlobalAlertRuleWhereInput.


        :param impact_not_starts_with: The impact_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type impact_not_starts_with: str
        """

        self._impact_not_starts_with = impact_not_starts_with

    @property
    def impact_starts_with(self):
        """Gets the impact_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The impact_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._impact_starts_with

    @impact_starts_with.setter
    def impact_starts_with(self, impact_starts_with):
        """Sets the impact_starts_with of this GlobalAlertRuleWhereInput.


        :param impact_starts_with: The impact_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type impact_starts_with: str
        """

        self._impact_starts_with = impact_starts_with

    @property
    def message(self):
        """Gets the message of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The message of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GlobalAlertRuleWhereInput.


        :param message: The message of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type message: str
        """

        self._message = message

    @property
    def message_contains(self):
        """Gets the message_contains of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The message_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_contains

    @message_contains.setter
    def message_contains(self, message_contains):
        """Sets the message_contains of this GlobalAlertRuleWhereInput.


        :param message_contains: The message_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type message_contains: str
        """

        self._message_contains = message_contains

    @property
    def message_ends_with(self):
        """Gets the message_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The message_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_ends_with

    @message_ends_with.setter
    def message_ends_with(self, message_ends_with):
        """Sets the message_ends_with of this GlobalAlertRuleWhereInput.


        :param message_ends_with: The message_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type message_ends_with: str
        """

        self._message_ends_with = message_ends_with

    @property
    def message_gt(self):
        """Gets the message_gt of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The message_gt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_gt

    @message_gt.setter
    def message_gt(self, message_gt):
        """Sets the message_gt of this GlobalAlertRuleWhereInput.


        :param message_gt: The message_gt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type message_gt: str
        """

        self._message_gt = message_gt

    @property
    def message_gte(self):
        """Gets the message_gte of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The message_gte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_gte

    @message_gte.setter
    def message_gte(self, message_gte):
        """Sets the message_gte of this GlobalAlertRuleWhereInput.


        :param message_gte: The message_gte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type message_gte: str
        """

        self._message_gte = message_gte

    @property
    def message_in(self):
        """Gets the message_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The message_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._message_in

    @message_in.setter
    def message_in(self, message_in):
        """Sets the message_in of this GlobalAlertRuleWhereInput.


        :param message_in: The message_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type message_in: list[str]
        """

        self._message_in = message_in

    @property
    def message_lt(self):
        """Gets the message_lt of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The message_lt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_lt

    @message_lt.setter
    def message_lt(self, message_lt):
        """Sets the message_lt of this GlobalAlertRuleWhereInput.


        :param message_lt: The message_lt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type message_lt: str
        """

        self._message_lt = message_lt

    @property
    def message_lte(self):
        """Gets the message_lte of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The message_lte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_lte

    @message_lte.setter
    def message_lte(self, message_lte):
        """Sets the message_lte of this GlobalAlertRuleWhereInput.


        :param message_lte: The message_lte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type message_lte: str
        """

        self._message_lte = message_lte

    @property
    def message_not(self):
        """Gets the message_not of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The message_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_not

    @message_not.setter
    def message_not(self, message_not):
        """Sets the message_not of this GlobalAlertRuleWhereInput.


        :param message_not: The message_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type message_not: str
        """

        self._message_not = message_not

    @property
    def message_not_contains(self):
        """Gets the message_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The message_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_not_contains

    @message_not_contains.setter
    def message_not_contains(self, message_not_contains):
        """Sets the message_not_contains of this GlobalAlertRuleWhereInput.


        :param message_not_contains: The message_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type message_not_contains: str
        """

        self._message_not_contains = message_not_contains

    @property
    def message_not_ends_with(self):
        """Gets the message_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The message_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_not_ends_with

    @message_not_ends_with.setter
    def message_not_ends_with(self, message_not_ends_with):
        """Sets the message_not_ends_with of this GlobalAlertRuleWhereInput.


        :param message_not_ends_with: The message_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type message_not_ends_with: str
        """

        self._message_not_ends_with = message_not_ends_with

    @property
    def message_not_in(self):
        """Gets the message_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The message_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._message_not_in

    @message_not_in.setter
    def message_not_in(self, message_not_in):
        """Sets the message_not_in of this GlobalAlertRuleWhereInput.


        :param message_not_in: The message_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type message_not_in: list[str]
        """

        self._message_not_in = message_not_in

    @property
    def message_not_starts_with(self):
        """Gets the message_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The message_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_not_starts_with

    @message_not_starts_with.setter
    def message_not_starts_with(self, message_not_starts_with):
        """Sets the message_not_starts_with of this GlobalAlertRuleWhereInput.


        :param message_not_starts_with: The message_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type message_not_starts_with: str
        """

        self._message_not_starts_with = message_not_starts_with

    @property
    def message_starts_with(self):
        """Gets the message_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The message_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._message_starts_with

    @message_starts_with.setter
    def message_starts_with(self, message_starts_with):
        """Sets the message_starts_with of this GlobalAlertRuleWhereInput.


        :param message_starts_with: The message_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type message_starts_with: str
        """

        self._message_starts_with = message_starts_with

    @property
    def name(self):
        """Gets the name of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The name of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GlobalAlertRuleWhereInput.


        :param name: The name of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def name_contains(self):
        """Gets the name_contains of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The name_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this GlobalAlertRuleWhereInput.


        :param name_contains: The name_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def name_ends_with(self):
        """Gets the name_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The name_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_ends_with

    @name_ends_with.setter
    def name_ends_with(self, name_ends_with):
        """Sets the name_ends_with of this GlobalAlertRuleWhereInput.


        :param name_ends_with: The name_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type name_ends_with: str
        """

        self._name_ends_with = name_ends_with

    @property
    def name_gt(self):
        """Gets the name_gt of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The name_gt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gt

    @name_gt.setter
    def name_gt(self, name_gt):
        """Sets the name_gt of this GlobalAlertRuleWhereInput.


        :param name_gt: The name_gt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type name_gt: str
        """

        self._name_gt = name_gt

    @property
    def name_gte(self):
        """Gets the name_gte of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The name_gte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gte

    @name_gte.setter
    def name_gte(self, name_gte):
        """Sets the name_gte of this GlobalAlertRuleWhereInput.


        :param name_gte: The name_gte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type name_gte: str
        """

        self._name_gte = name_gte

    @property
    def name_in(self):
        """Gets the name_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The name_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_in

    @name_in.setter
    def name_in(self, name_in):
        """Sets the name_in of this GlobalAlertRuleWhereInput.


        :param name_in: The name_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type name_in: list[str]
        """

        self._name_in = name_in

    @property
    def name_lt(self):
        """Gets the name_lt of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The name_lt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lt

    @name_lt.setter
    def name_lt(self, name_lt):
        """Sets the name_lt of this GlobalAlertRuleWhereInput.


        :param name_lt: The name_lt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type name_lt: str
        """

        self._name_lt = name_lt

    @property
    def name_lte(self):
        """Gets the name_lte of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The name_lte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lte

    @name_lte.setter
    def name_lte(self, name_lte):
        """Sets the name_lte of this GlobalAlertRuleWhereInput.


        :param name_lte: The name_lte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type name_lte: str
        """

        self._name_lte = name_lte

    @property
    def name_not(self):
        """Gets the name_not of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The name_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not

    @name_not.setter
    def name_not(self, name_not):
        """Sets the name_not of this GlobalAlertRuleWhereInput.


        :param name_not: The name_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type name_not: str
        """

        self._name_not = name_not

    @property
    def name_not_contains(self):
        """Gets the name_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The name_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_contains

    @name_not_contains.setter
    def name_not_contains(self, name_not_contains):
        """Sets the name_not_contains of this GlobalAlertRuleWhereInput.


        :param name_not_contains: The name_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type name_not_contains: str
        """

        self._name_not_contains = name_not_contains

    @property
    def name_not_ends_with(self):
        """Gets the name_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The name_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_ends_with

    @name_not_ends_with.setter
    def name_not_ends_with(self, name_not_ends_with):
        """Sets the name_not_ends_with of this GlobalAlertRuleWhereInput.


        :param name_not_ends_with: The name_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type name_not_ends_with: str
        """

        self._name_not_ends_with = name_not_ends_with

    @property
    def name_not_in(self):
        """Gets the name_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The name_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_not_in

    @name_not_in.setter
    def name_not_in(self, name_not_in):
        """Sets the name_not_in of this GlobalAlertRuleWhereInput.


        :param name_not_in: The name_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type name_not_in: list[str]
        """

        self._name_not_in = name_not_in

    @property
    def name_not_starts_with(self):
        """Gets the name_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The name_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_starts_with

    @name_not_starts_with.setter
    def name_not_starts_with(self, name_not_starts_with):
        """Sets the name_not_starts_with of this GlobalAlertRuleWhereInput.


        :param name_not_starts_with: The name_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type name_not_starts_with: str
        """

        self._name_not_starts_with = name_not_starts_with

    @property
    def name_starts_with(self):
        """Gets the name_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The name_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_starts_with

    @name_starts_with.setter
    def name_starts_with(self, name_starts_with):
        """Sets the name_starts_with of this GlobalAlertRuleWhereInput.


        :param name_starts_with: The name_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type name_starts_with: str
        """

        self._name_starts_with = name_starts_with

    @property
    def _not(self):
        """Gets the _not of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The _not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[GlobalAlertRuleWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this GlobalAlertRuleWhereInput.


        :param _not: The _not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type _not: list[GlobalAlertRuleWhereInput]
        """

        self.__not = _not

    @property
    def object(self):
        """Gets the object of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The object of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: AlertRuleObject
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this GlobalAlertRuleWhereInput.


        :param object: The object of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type object: AlertRuleObject
        """

        self._object = object

    @property
    def object_in(self):
        """Gets the object_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The object_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[AlertRuleObject]
        """
        return self._object_in

    @object_in.setter
    def object_in(self, object_in):
        """Sets the object_in of this GlobalAlertRuleWhereInput.


        :param object_in: The object_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type object_in: list[AlertRuleObject]
        """

        self._object_in = object_in

    @property
    def object_not(self):
        """Gets the object_not of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The object_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: AlertRuleObject
        """
        return self._object_not

    @object_not.setter
    def object_not(self, object_not):
        """Sets the object_not of this GlobalAlertRuleWhereInput.


        :param object_not: The object_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type object_not: AlertRuleObject
        """

        self._object_not = object_not

    @property
    def object_not_in(self):
        """Gets the object_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The object_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[AlertRuleObject]
        """
        return self._object_not_in

    @object_not_in.setter
    def object_not_in(self, object_not_in):
        """Sets the object_not_in of this GlobalAlertRuleWhereInput.


        :param object_not_in: The object_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type object_not_in: list[AlertRuleObject]
        """

        self._object_not_in = object_not_in

    @property
    def operator(self):
        """Gets the operator of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The operator of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this GlobalAlertRuleWhereInput.


        :param operator: The operator of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type operator: str
        """

        self._operator = operator

    @property
    def operator_contains(self):
        """Gets the operator_contains of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The operator_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._operator_contains

    @operator_contains.setter
    def operator_contains(self, operator_contains):
        """Sets the operator_contains of this GlobalAlertRuleWhereInput.


        :param operator_contains: The operator_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type operator_contains: str
        """

        self._operator_contains = operator_contains

    @property
    def operator_ends_with(self):
        """Gets the operator_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The operator_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._operator_ends_with

    @operator_ends_with.setter
    def operator_ends_with(self, operator_ends_with):
        """Sets the operator_ends_with of this GlobalAlertRuleWhereInput.


        :param operator_ends_with: The operator_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type operator_ends_with: str
        """

        self._operator_ends_with = operator_ends_with

    @property
    def operator_gt(self):
        """Gets the operator_gt of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The operator_gt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._operator_gt

    @operator_gt.setter
    def operator_gt(self, operator_gt):
        """Sets the operator_gt of this GlobalAlertRuleWhereInput.


        :param operator_gt: The operator_gt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type operator_gt: str
        """

        self._operator_gt = operator_gt

    @property
    def operator_gte(self):
        """Gets the operator_gte of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The operator_gte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._operator_gte

    @operator_gte.setter
    def operator_gte(self, operator_gte):
        """Sets the operator_gte of this GlobalAlertRuleWhereInput.


        :param operator_gte: The operator_gte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type operator_gte: str
        """

        self._operator_gte = operator_gte

    @property
    def operator_in(self):
        """Gets the operator_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The operator_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._operator_in

    @operator_in.setter
    def operator_in(self, operator_in):
        """Sets the operator_in of this GlobalAlertRuleWhereInput.


        :param operator_in: The operator_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type operator_in: list[str]
        """

        self._operator_in = operator_in

    @property
    def operator_lt(self):
        """Gets the operator_lt of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The operator_lt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._operator_lt

    @operator_lt.setter
    def operator_lt(self, operator_lt):
        """Sets the operator_lt of this GlobalAlertRuleWhereInput.


        :param operator_lt: The operator_lt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type operator_lt: str
        """

        self._operator_lt = operator_lt

    @property
    def operator_lte(self):
        """Gets the operator_lte of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The operator_lte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._operator_lte

    @operator_lte.setter
    def operator_lte(self, operator_lte):
        """Sets the operator_lte of this GlobalAlertRuleWhereInput.


        :param operator_lte: The operator_lte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type operator_lte: str
        """

        self._operator_lte = operator_lte

    @property
    def operator_not(self):
        """Gets the operator_not of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The operator_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._operator_not

    @operator_not.setter
    def operator_not(self, operator_not):
        """Sets the operator_not of this GlobalAlertRuleWhereInput.


        :param operator_not: The operator_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type operator_not: str
        """

        self._operator_not = operator_not

    @property
    def operator_not_contains(self):
        """Gets the operator_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The operator_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._operator_not_contains

    @operator_not_contains.setter
    def operator_not_contains(self, operator_not_contains):
        """Sets the operator_not_contains of this GlobalAlertRuleWhereInput.


        :param operator_not_contains: The operator_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type operator_not_contains: str
        """

        self._operator_not_contains = operator_not_contains

    @property
    def operator_not_ends_with(self):
        """Gets the operator_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The operator_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._operator_not_ends_with

    @operator_not_ends_with.setter
    def operator_not_ends_with(self, operator_not_ends_with):
        """Sets the operator_not_ends_with of this GlobalAlertRuleWhereInput.


        :param operator_not_ends_with: The operator_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type operator_not_ends_with: str
        """

        self._operator_not_ends_with = operator_not_ends_with

    @property
    def operator_not_in(self):
        """Gets the operator_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The operator_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._operator_not_in

    @operator_not_in.setter
    def operator_not_in(self, operator_not_in):
        """Sets the operator_not_in of this GlobalAlertRuleWhereInput.


        :param operator_not_in: The operator_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type operator_not_in: list[str]
        """

        self._operator_not_in = operator_not_in

    @property
    def operator_not_starts_with(self):
        """Gets the operator_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The operator_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._operator_not_starts_with

    @operator_not_starts_with.setter
    def operator_not_starts_with(self, operator_not_starts_with):
        """Sets the operator_not_starts_with of this GlobalAlertRuleWhereInput.


        :param operator_not_starts_with: The operator_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type operator_not_starts_with: str
        """

        self._operator_not_starts_with = operator_not_starts_with

    @property
    def operator_starts_with(self):
        """Gets the operator_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The operator_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._operator_starts_with

    @operator_starts_with.setter
    def operator_starts_with(self, operator_starts_with):
        """Sets the operator_starts_with of this GlobalAlertRuleWhereInput.


        :param operator_starts_with: The operator_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type operator_starts_with: str
        """

        self._operator_starts_with = operator_starts_with

    @property
    def _or(self):
        """Gets the _or of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The _or of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[GlobalAlertRuleWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this GlobalAlertRuleWhereInput.


        :param _or: The _or of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type _or: list[GlobalAlertRuleWhereInput]
        """

        self.__or = _or

    @property
    def solution(self):
        """Gets the solution of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The solution of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._solution

    @solution.setter
    def solution(self, solution):
        """Sets the solution of this GlobalAlertRuleWhereInput.


        :param solution: The solution of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type solution: str
        """

        self._solution = solution

    @property
    def solution_contains(self):
        """Gets the solution_contains of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The solution_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._solution_contains

    @solution_contains.setter
    def solution_contains(self, solution_contains):
        """Sets the solution_contains of this GlobalAlertRuleWhereInput.


        :param solution_contains: The solution_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type solution_contains: str
        """

        self._solution_contains = solution_contains

    @property
    def solution_ends_with(self):
        """Gets the solution_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The solution_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._solution_ends_with

    @solution_ends_with.setter
    def solution_ends_with(self, solution_ends_with):
        """Sets the solution_ends_with of this GlobalAlertRuleWhereInput.


        :param solution_ends_with: The solution_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type solution_ends_with: str
        """

        self._solution_ends_with = solution_ends_with

    @property
    def solution_gt(self):
        """Gets the solution_gt of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The solution_gt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._solution_gt

    @solution_gt.setter
    def solution_gt(self, solution_gt):
        """Sets the solution_gt of this GlobalAlertRuleWhereInput.


        :param solution_gt: The solution_gt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type solution_gt: str
        """

        self._solution_gt = solution_gt

    @property
    def solution_gte(self):
        """Gets the solution_gte of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The solution_gte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._solution_gte

    @solution_gte.setter
    def solution_gte(self, solution_gte):
        """Sets the solution_gte of this GlobalAlertRuleWhereInput.


        :param solution_gte: The solution_gte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type solution_gte: str
        """

        self._solution_gte = solution_gte

    @property
    def solution_in(self):
        """Gets the solution_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The solution_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._solution_in

    @solution_in.setter
    def solution_in(self, solution_in):
        """Sets the solution_in of this GlobalAlertRuleWhereInput.


        :param solution_in: The solution_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type solution_in: list[str]
        """

        self._solution_in = solution_in

    @property
    def solution_lt(self):
        """Gets the solution_lt of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The solution_lt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._solution_lt

    @solution_lt.setter
    def solution_lt(self, solution_lt):
        """Sets the solution_lt of this GlobalAlertRuleWhereInput.


        :param solution_lt: The solution_lt of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type solution_lt: str
        """

        self._solution_lt = solution_lt

    @property
    def solution_lte(self):
        """Gets the solution_lte of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The solution_lte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._solution_lte

    @solution_lte.setter
    def solution_lte(self, solution_lte):
        """Sets the solution_lte of this GlobalAlertRuleWhereInput.


        :param solution_lte: The solution_lte of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type solution_lte: str
        """

        self._solution_lte = solution_lte

    @property
    def solution_not(self):
        """Gets the solution_not of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The solution_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._solution_not

    @solution_not.setter
    def solution_not(self, solution_not):
        """Sets the solution_not of this GlobalAlertRuleWhereInput.


        :param solution_not: The solution_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type solution_not: str
        """

        self._solution_not = solution_not

    @property
    def solution_not_contains(self):
        """Gets the solution_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The solution_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._solution_not_contains

    @solution_not_contains.setter
    def solution_not_contains(self, solution_not_contains):
        """Sets the solution_not_contains of this GlobalAlertRuleWhereInput.


        :param solution_not_contains: The solution_not_contains of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type solution_not_contains: str
        """

        self._solution_not_contains = solution_not_contains

    @property
    def solution_not_ends_with(self):
        """Gets the solution_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The solution_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._solution_not_ends_with

    @solution_not_ends_with.setter
    def solution_not_ends_with(self, solution_not_ends_with):
        """Sets the solution_not_ends_with of this GlobalAlertRuleWhereInput.


        :param solution_not_ends_with: The solution_not_ends_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type solution_not_ends_with: str
        """

        self._solution_not_ends_with = solution_not_ends_with

    @property
    def solution_not_in(self):
        """Gets the solution_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The solution_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._solution_not_in

    @solution_not_in.setter
    def solution_not_in(self, solution_not_in):
        """Sets the solution_not_in of this GlobalAlertRuleWhereInput.


        :param solution_not_in: The solution_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type solution_not_in: list[str]
        """

        self._solution_not_in = solution_not_in

    @property
    def solution_not_starts_with(self):
        """Gets the solution_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The solution_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._solution_not_starts_with

    @solution_not_starts_with.setter
    def solution_not_starts_with(self, solution_not_starts_with):
        """Sets the solution_not_starts_with of this GlobalAlertRuleWhereInput.


        :param solution_not_starts_with: The solution_not_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type solution_not_starts_with: str
        """

        self._solution_not_starts_with = solution_not_starts_with

    @property
    def solution_starts_with(self):
        """Gets the solution_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The solution_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._solution_starts_with

    @solution_starts_with.setter
    def solution_starts_with(self, solution_starts_with):
        """Sets the solution_starts_with of this GlobalAlertRuleWhereInput.


        :param solution_starts_with: The solution_starts_with of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type solution_starts_with: str
        """

        self._solution_starts_with = solution_starts_with

    @property
    def unit(self):
        """Gets the unit of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The unit of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: AlertRuleUnit
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this GlobalAlertRuleWhereInput.


        :param unit: The unit of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type unit: AlertRuleUnit
        """

        self._unit = unit

    @property
    def unit_in(self):
        """Gets the unit_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The unit_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[AlertRuleUnit]
        """
        return self._unit_in

    @unit_in.setter
    def unit_in(self, unit_in):
        """Sets the unit_in of this GlobalAlertRuleWhereInput.


        :param unit_in: The unit_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type unit_in: list[AlertRuleUnit]
        """

        self._unit_in = unit_in

    @property
    def unit_not(self):
        """Gets the unit_not of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The unit_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: AlertRuleUnit
        """
        return self._unit_not

    @unit_not.setter
    def unit_not(self, unit_not):
        """Sets the unit_not of this GlobalAlertRuleWhereInput.


        :param unit_not: The unit_not of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type unit_not: AlertRuleUnit
        """

        self._unit_not = unit_not

    @property
    def unit_not_in(self):
        """Gets the unit_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501


        :return: The unit_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :rtype: list[AlertRuleUnit]
        """
        return self._unit_not_in

    @unit_not_in.setter
    def unit_not_in(self, unit_not_in):
        """Sets the unit_not_in of this GlobalAlertRuleWhereInput.


        :param unit_not_in: The unit_not_in of this GlobalAlertRuleWhereInput.  # noqa: E501
        :type unit_not_in: list[AlertRuleUnit]
        """

        self._unit_not_in = unit_not_in

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GlobalAlertRuleWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GlobalAlertRuleWhereInput):
            return True

        return self.to_dict() != other.to_dict()
