# coding: utf-8

"""
    CloudTower APIs

    cloudtower operation API and SDK  # noqa: E501

    The version of the OpenAPI document: 1.9.0
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class BackupServiceWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[BackupServiceWhereInput]',
        'backup_clusters_every': 'ClusterWhereInput',
        'backup_clusters_none': 'ClusterWhereInput',
        'backup_clusters_some': 'ClusterWhereInput',
        'backup_package': 'BackupPackageWhereInput',
        'backup_plans_every': 'BackupPlanWhereInput',
        'backup_plans_none': 'BackupPlanWhereInput',
        'backup_plans_some': 'BackupPlanWhereInput',
        'backup_store_repositories_every': 'BackupStoreRepositoryWhereInput',
        'backup_store_repositories_none': 'BackupStoreRepositoryWhereInput',
        'backup_store_repositories_some': 'BackupStoreRepositoryWhereInput',
        'description': 'str',
        'description_contains': 'str',
        'description_ends_with': 'str',
        'description_gt': 'str',
        'description_gte': 'str',
        'description_in': 'list[str]',
        'description_lt': 'str',
        'description_lte': 'str',
        'description_not': 'str',
        'description_not_contains': 'str',
        'description_not_ends_with': 'str',
        'description_not_in': 'list[str]',
        'description_not_starts_with': 'str',
        'description_starts_with': 'str',
        'entity_async_status': 'EntityAsyncStatus',
        'entity_async_status_in': 'list[EntityAsyncStatus]',
        'entity_async_status_not': 'EntityAsyncStatus',
        'entity_async_status_not_in': 'list[EntityAsyncStatus]',
        'gateway': 'str',
        'gateway_contains': 'str',
        'gateway_ends_with': 'str',
        'gateway_gt': 'str',
        'gateway_gte': 'str',
        'gateway_in': 'list[str]',
        'gateway_lt': 'str',
        'gateway_lte': 'str',
        'gateway_not': 'str',
        'gateway_not_contains': 'str',
        'gateway_not_ends_with': 'str',
        'gateway_not_in': 'list[str]',
        'gateway_not_starts_with': 'str',
        'gateway_starts_with': 'str',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'iops_limit': 'int',
        'iops_limit_gt': 'int',
        'iops_limit_gte': 'int',
        'iops_limit_in': 'list[int]',
        'iops_limit_lt': 'int',
        'iops_limit_lte': 'int',
        'iops_limit_not': 'int',
        'iops_limit_not_in': 'list[int]',
        'ip': 'str',
        'ip_contains': 'str',
        'ip_ends_with': 'str',
        'ip_gt': 'str',
        'ip_gte': 'str',
        'ip_in': 'list[str]',
        'ip_lt': 'str',
        'ip_lte': 'str',
        'ip_not': 'str',
        'ip_not_contains': 'str',
        'ip_not_ends_with': 'str',
        'ip_not_in': 'list[str]',
        'ip_not_starts_with': 'str',
        'ip_starts_with': 'str',
        'kube_config': 'str',
        'kube_config_contains': 'str',
        'kube_config_ends_with': 'str',
        'kube_config_gt': 'str',
        'kube_config_gte': 'str',
        'kube_config_in': 'list[str]',
        'kube_config_lt': 'str',
        'kube_config_lte': 'str',
        'kube_config_not': 'str',
        'kube_config_not_contains': 'str',
        'kube_config_not_ends_with': 'str',
        'kube_config_not_in': 'list[str]',
        'kube_config_not_starts_with': 'str',
        'kube_config_starts_with': 'str',
        'max_job_retry_times': 'int',
        'max_job_retry_times_gt': 'int',
        'max_job_retry_times_gte': 'int',
        'max_job_retry_times_in': 'list[int]',
        'max_job_retry_times_lt': 'int',
        'max_job_retry_times_lte': 'int',
        'max_job_retry_times_not': 'int',
        'max_job_retry_times_not_in': 'list[int]',
        'max_parallel_backup_jobs': 'int',
        'max_parallel_backup_jobs_gt': 'int',
        'max_parallel_backup_jobs_gte': 'int',
        'max_parallel_backup_jobs_in': 'list[int]',
        'max_parallel_backup_jobs_lt': 'int',
        'max_parallel_backup_jobs_lte': 'int',
        'max_parallel_backup_jobs_not': 'int',
        'max_parallel_backup_jobs_not_in': 'list[int]',
        'max_parallel_restore_jobs': 'int',
        'max_parallel_restore_jobs_gt': 'int',
        'max_parallel_restore_jobs_gte': 'int',
        'max_parallel_restore_jobs_in': 'list[int]',
        'max_parallel_restore_jobs_lt': 'int',
        'max_parallel_restore_jobs_lte': 'int',
        'max_parallel_restore_jobs_not': 'int',
        'max_parallel_restore_jobs_not_in': 'list[int]',
        'name': 'str',
        'name_contains': 'str',
        'name_ends_with': 'str',
        'name_gt': 'str',
        'name_gte': 'str',
        'name_in': 'list[str]',
        'name_lt': 'str',
        'name_lte': 'str',
        'name_not': 'str',
        'name_not_contains': 'str',
        'name_not_ends_with': 'str',
        'name_not_in': 'list[str]',
        'name_not_starts_with': 'str',
        'name_starts_with': 'str',
        '_not': 'list[BackupServiceWhereInput]',
        '_or': 'list[BackupServiceWhereInput]',
        'resource_version_gt': 'int',
        'resource_version_gte': 'int',
        'resource_version_in': 'list[int]',
        'resource_version_lt': 'int',
        'resource_version_lte': 'int',
        'resource_version_not': 'int',
        'resource_version_not_in': 'list[int]',
        'retry_interval': 'int',
        'retry_interval_gt': 'int',
        'retry_interval_gte': 'int',
        'retry_interval_in': 'list[int]',
        'retry_interval_lt': 'int',
        'retry_interval_lte': 'int',
        'retry_interval_not': 'int',
        'retry_interval_not_in': 'list[int]',
        'running_vm': 'VmWhereInput',
        'status': 'BackupServiceStatus',
        'status_in': 'list[BackupServiceStatus]',
        'status_not': 'BackupServiceStatus',
        'status_not_in': 'list[BackupServiceStatus]',
        'subnet_mask': 'str',
        'subnet_mask_contains': 'str',
        'subnet_mask_ends_with': 'str',
        'subnet_mask_gt': 'str',
        'subnet_mask_gte': 'str',
        'subnet_mask_in': 'list[str]',
        'subnet_mask_lt': 'str',
        'subnet_mask_lte': 'str',
        'subnet_mask_not': 'str',
        'subnet_mask_not_contains': 'str',
        'subnet_mask_not_ends_with': 'str',
        'subnet_mask_not_in': 'list[str]',
        'subnet_mask_not_starts_with': 'str',
        'subnet_mask_starts_with': 'str'
    }

    attribute_map = {
        '_and': 'AND',
        'backup_clusters_every': 'backup_clusters_every',
        'backup_clusters_none': 'backup_clusters_none',
        'backup_clusters_some': 'backup_clusters_some',
        'backup_package': 'backup_package',
        'backup_plans_every': 'backup_plans_every',
        'backup_plans_none': 'backup_plans_none',
        'backup_plans_some': 'backup_plans_some',
        'backup_store_repositories_every': 'backup_store_repositories_every',
        'backup_store_repositories_none': 'backup_store_repositories_none',
        'backup_store_repositories_some': 'backup_store_repositories_some',
        'description': 'description',
        'description_contains': 'description_contains',
        'description_ends_with': 'description_ends_with',
        'description_gt': 'description_gt',
        'description_gte': 'description_gte',
        'description_in': 'description_in',
        'description_lt': 'description_lt',
        'description_lte': 'description_lte',
        'description_not': 'description_not',
        'description_not_contains': 'description_not_contains',
        'description_not_ends_with': 'description_not_ends_with',
        'description_not_in': 'description_not_in',
        'description_not_starts_with': 'description_not_starts_with',
        'description_starts_with': 'description_starts_with',
        'entity_async_status': 'entityAsyncStatus',
        'entity_async_status_in': 'entityAsyncStatus_in',
        'entity_async_status_not': 'entityAsyncStatus_not',
        'entity_async_status_not_in': 'entityAsyncStatus_not_in',
        'gateway': 'gateway',
        'gateway_contains': 'gateway_contains',
        'gateway_ends_with': 'gateway_ends_with',
        'gateway_gt': 'gateway_gt',
        'gateway_gte': 'gateway_gte',
        'gateway_in': 'gateway_in',
        'gateway_lt': 'gateway_lt',
        'gateway_lte': 'gateway_lte',
        'gateway_not': 'gateway_not',
        'gateway_not_contains': 'gateway_not_contains',
        'gateway_not_ends_with': 'gateway_not_ends_with',
        'gateway_not_in': 'gateway_not_in',
        'gateway_not_starts_with': 'gateway_not_starts_with',
        'gateway_starts_with': 'gateway_starts_with',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'iops_limit': 'iops_limit',
        'iops_limit_gt': 'iops_limit_gt',
        'iops_limit_gte': 'iops_limit_gte',
        'iops_limit_in': 'iops_limit_in',
        'iops_limit_lt': 'iops_limit_lt',
        'iops_limit_lte': 'iops_limit_lte',
        'iops_limit_not': 'iops_limit_not',
        'iops_limit_not_in': 'iops_limit_not_in',
        'ip': 'ip',
        'ip_contains': 'ip_contains',
        'ip_ends_with': 'ip_ends_with',
        'ip_gt': 'ip_gt',
        'ip_gte': 'ip_gte',
        'ip_in': 'ip_in',
        'ip_lt': 'ip_lt',
        'ip_lte': 'ip_lte',
        'ip_not': 'ip_not',
        'ip_not_contains': 'ip_not_contains',
        'ip_not_ends_with': 'ip_not_ends_with',
        'ip_not_in': 'ip_not_in',
        'ip_not_starts_with': 'ip_not_starts_with',
        'ip_starts_with': 'ip_starts_with',
        'kube_config': 'kube_config',
        'kube_config_contains': 'kube_config_contains',
        'kube_config_ends_with': 'kube_config_ends_with',
        'kube_config_gt': 'kube_config_gt',
        'kube_config_gte': 'kube_config_gte',
        'kube_config_in': 'kube_config_in',
        'kube_config_lt': 'kube_config_lt',
        'kube_config_lte': 'kube_config_lte',
        'kube_config_not': 'kube_config_not',
        'kube_config_not_contains': 'kube_config_not_contains',
        'kube_config_not_ends_with': 'kube_config_not_ends_with',
        'kube_config_not_in': 'kube_config_not_in',
        'kube_config_not_starts_with': 'kube_config_not_starts_with',
        'kube_config_starts_with': 'kube_config_starts_with',
        'max_job_retry_times': 'max_job_retry_times',
        'max_job_retry_times_gt': 'max_job_retry_times_gt',
        'max_job_retry_times_gte': 'max_job_retry_times_gte',
        'max_job_retry_times_in': 'max_job_retry_times_in',
        'max_job_retry_times_lt': 'max_job_retry_times_lt',
        'max_job_retry_times_lte': 'max_job_retry_times_lte',
        'max_job_retry_times_not': 'max_job_retry_times_not',
        'max_job_retry_times_not_in': 'max_job_retry_times_not_in',
        'max_parallel_backup_jobs': 'max_parallel_backup_jobs',
        'max_parallel_backup_jobs_gt': 'max_parallel_backup_jobs_gt',
        'max_parallel_backup_jobs_gte': 'max_parallel_backup_jobs_gte',
        'max_parallel_backup_jobs_in': 'max_parallel_backup_jobs_in',
        'max_parallel_backup_jobs_lt': 'max_parallel_backup_jobs_lt',
        'max_parallel_backup_jobs_lte': 'max_parallel_backup_jobs_lte',
        'max_parallel_backup_jobs_not': 'max_parallel_backup_jobs_not',
        'max_parallel_backup_jobs_not_in': 'max_parallel_backup_jobs_not_in',
        'max_parallel_restore_jobs': 'max_parallel_restore_jobs',
        'max_parallel_restore_jobs_gt': 'max_parallel_restore_jobs_gt',
        'max_parallel_restore_jobs_gte': 'max_parallel_restore_jobs_gte',
        'max_parallel_restore_jobs_in': 'max_parallel_restore_jobs_in',
        'max_parallel_restore_jobs_lt': 'max_parallel_restore_jobs_lt',
        'max_parallel_restore_jobs_lte': 'max_parallel_restore_jobs_lte',
        'max_parallel_restore_jobs_not': 'max_parallel_restore_jobs_not',
        'max_parallel_restore_jobs_not_in': 'max_parallel_restore_jobs_not_in',
        'name': 'name',
        'name_contains': 'name_contains',
        'name_ends_with': 'name_ends_with',
        'name_gt': 'name_gt',
        'name_gte': 'name_gte',
        'name_in': 'name_in',
        'name_lt': 'name_lt',
        'name_lte': 'name_lte',
        'name_not': 'name_not',
        'name_not_contains': 'name_not_contains',
        'name_not_ends_with': 'name_not_ends_with',
        'name_not_in': 'name_not_in',
        'name_not_starts_with': 'name_not_starts_with',
        'name_starts_with': 'name_starts_with',
        '_not': 'NOT',
        '_or': 'OR',
        'resource_version_gt': 'resource_version_gt',
        'resource_version_gte': 'resource_version_gte',
        'resource_version_in': 'resource_version_in',
        'resource_version_lt': 'resource_version_lt',
        'resource_version_lte': 'resource_version_lte',
        'resource_version_not': 'resource_version_not',
        'resource_version_not_in': 'resource_version_not_in',
        'retry_interval': 'retry_interval',
        'retry_interval_gt': 'retry_interval_gt',
        'retry_interval_gte': 'retry_interval_gte',
        'retry_interval_in': 'retry_interval_in',
        'retry_interval_lt': 'retry_interval_lt',
        'retry_interval_lte': 'retry_interval_lte',
        'retry_interval_not': 'retry_interval_not',
        'retry_interval_not_in': 'retry_interval_not_in',
        'running_vm': 'running_vm',
        'status': 'status',
        'status_in': 'status_in',
        'status_not': 'status_not',
        'status_not_in': 'status_not_in',
        'subnet_mask': 'subnet_mask',
        'subnet_mask_contains': 'subnet_mask_contains',
        'subnet_mask_ends_with': 'subnet_mask_ends_with',
        'subnet_mask_gt': 'subnet_mask_gt',
        'subnet_mask_gte': 'subnet_mask_gte',
        'subnet_mask_in': 'subnet_mask_in',
        'subnet_mask_lt': 'subnet_mask_lt',
        'subnet_mask_lte': 'subnet_mask_lte',
        'subnet_mask_not': 'subnet_mask_not',
        'subnet_mask_not_contains': 'subnet_mask_not_contains',
        'subnet_mask_not_ends_with': 'subnet_mask_not_ends_with',
        'subnet_mask_not_in': 'subnet_mask_not_in',
        'subnet_mask_not_starts_with': 'subnet_mask_not_starts_with',
        'subnet_mask_starts_with': 'subnet_mask_starts_with'
    }

    def __init__(self, _and=None, backup_clusters_every=None, backup_clusters_none=None, backup_clusters_some=None, backup_package=None, backup_plans_every=None, backup_plans_none=None, backup_plans_some=None, backup_store_repositories_every=None, backup_store_repositories_none=None, backup_store_repositories_some=None, description=None, description_contains=None, description_ends_with=None, description_gt=None, description_gte=None, description_in=None, description_lt=None, description_lte=None, description_not=None, description_not_contains=None, description_not_ends_with=None, description_not_in=None, description_not_starts_with=None, description_starts_with=None, entity_async_status=None, entity_async_status_in=None, entity_async_status_not=None, entity_async_status_not_in=None, gateway=None, gateway_contains=None, gateway_ends_with=None, gateway_gt=None, gateway_gte=None, gateway_in=None, gateway_lt=None, gateway_lte=None, gateway_not=None, gateway_not_contains=None, gateway_not_ends_with=None, gateway_not_in=None, gateway_not_starts_with=None, gateway_starts_with=None, id=None, id_contains=None, id_ends_with=None, id_gt=None, id_gte=None, id_in=None, id_lt=None, id_lte=None, id_not=None, id_not_contains=None, id_not_ends_with=None, id_not_in=None, id_not_starts_with=None, id_starts_with=None, iops_limit=None, iops_limit_gt=None, iops_limit_gte=None, iops_limit_in=None, iops_limit_lt=None, iops_limit_lte=None, iops_limit_not=None, iops_limit_not_in=None, ip=None, ip_contains=None, ip_ends_with=None, ip_gt=None, ip_gte=None, ip_in=None, ip_lt=None, ip_lte=None, ip_not=None, ip_not_contains=None, ip_not_ends_with=None, ip_not_in=None, ip_not_starts_with=None, ip_starts_with=None, kube_config=None, kube_config_contains=None, kube_config_ends_with=None, kube_config_gt=None, kube_config_gte=None, kube_config_in=None, kube_config_lt=None, kube_config_lte=None, kube_config_not=None, kube_config_not_contains=None, kube_config_not_ends_with=None, kube_config_not_in=None, kube_config_not_starts_with=None, kube_config_starts_with=None, max_job_retry_times=None, max_job_retry_times_gt=None, max_job_retry_times_gte=None, max_job_retry_times_in=None, max_job_retry_times_lt=None, max_job_retry_times_lte=None, max_job_retry_times_not=None, max_job_retry_times_not_in=None, max_parallel_backup_jobs=None, max_parallel_backup_jobs_gt=None, max_parallel_backup_jobs_gte=None, max_parallel_backup_jobs_in=None, max_parallel_backup_jobs_lt=None, max_parallel_backup_jobs_lte=None, max_parallel_backup_jobs_not=None, max_parallel_backup_jobs_not_in=None, max_parallel_restore_jobs=None, max_parallel_restore_jobs_gt=None, max_parallel_restore_jobs_gte=None, max_parallel_restore_jobs_in=None, max_parallel_restore_jobs_lt=None, max_parallel_restore_jobs_lte=None, max_parallel_restore_jobs_not=None, max_parallel_restore_jobs_not_in=None, name=None, name_contains=None, name_ends_with=None, name_gt=None, name_gte=None, name_in=None, name_lt=None, name_lte=None, name_not=None, name_not_contains=None, name_not_ends_with=None, name_not_in=None, name_not_starts_with=None, name_starts_with=None, _not=None, _or=None, resource_version_gt=None, resource_version_gte=None, resource_version_in=None, resource_version_lt=None, resource_version_lte=None, resource_version_not=None, resource_version_not_in=None, retry_interval=None, retry_interval_gt=None, retry_interval_gte=None, retry_interval_in=None, retry_interval_lt=None, retry_interval_lte=None, retry_interval_not=None, retry_interval_not_in=None, running_vm=None, status=None, status_in=None, status_not=None, status_not_in=None, subnet_mask=None, subnet_mask_contains=None, subnet_mask_ends_with=None, subnet_mask_gt=None, subnet_mask_gte=None, subnet_mask_in=None, subnet_mask_lt=None, subnet_mask_lte=None, subnet_mask_not=None, subnet_mask_not_contains=None, subnet_mask_not_ends_with=None, subnet_mask_not_in=None, subnet_mask_not_starts_with=None, subnet_mask_starts_with=None, local_vars_configuration=None):  # noqa: E501
        """BackupServiceWhereInput - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self.__and = None
        self._backup_clusters_every = None
        self._backup_clusters_none = None
        self._backup_clusters_some = None
        self._backup_package = None
        self._backup_plans_every = None
        self._backup_plans_none = None
        self._backup_plans_some = None
        self._backup_store_repositories_every = None
        self._backup_store_repositories_none = None
        self._backup_store_repositories_some = None
        self._description = None
        self._description_contains = None
        self._description_ends_with = None
        self._description_gt = None
        self._description_gte = None
        self._description_in = None
        self._description_lt = None
        self._description_lte = None
        self._description_not = None
        self._description_not_contains = None
        self._description_not_ends_with = None
        self._description_not_in = None
        self._description_not_starts_with = None
        self._description_starts_with = None
        self._entity_async_status = None
        self._entity_async_status_in = None
        self._entity_async_status_not = None
        self._entity_async_status_not_in = None
        self._gateway = None
        self._gateway_contains = None
        self._gateway_ends_with = None
        self._gateway_gt = None
        self._gateway_gte = None
        self._gateway_in = None
        self._gateway_lt = None
        self._gateway_lte = None
        self._gateway_not = None
        self._gateway_not_contains = None
        self._gateway_not_ends_with = None
        self._gateway_not_in = None
        self._gateway_not_starts_with = None
        self._gateway_starts_with = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._iops_limit = None
        self._iops_limit_gt = None
        self._iops_limit_gte = None
        self._iops_limit_in = None
        self._iops_limit_lt = None
        self._iops_limit_lte = None
        self._iops_limit_not = None
        self._iops_limit_not_in = None
        self._ip = None
        self._ip_contains = None
        self._ip_ends_with = None
        self._ip_gt = None
        self._ip_gte = None
        self._ip_in = None
        self._ip_lt = None
        self._ip_lte = None
        self._ip_not = None
        self._ip_not_contains = None
        self._ip_not_ends_with = None
        self._ip_not_in = None
        self._ip_not_starts_with = None
        self._ip_starts_with = None
        self._kube_config = None
        self._kube_config_contains = None
        self._kube_config_ends_with = None
        self._kube_config_gt = None
        self._kube_config_gte = None
        self._kube_config_in = None
        self._kube_config_lt = None
        self._kube_config_lte = None
        self._kube_config_not = None
        self._kube_config_not_contains = None
        self._kube_config_not_ends_with = None
        self._kube_config_not_in = None
        self._kube_config_not_starts_with = None
        self._kube_config_starts_with = None
        self._max_job_retry_times = None
        self._max_job_retry_times_gt = None
        self._max_job_retry_times_gte = None
        self._max_job_retry_times_in = None
        self._max_job_retry_times_lt = None
        self._max_job_retry_times_lte = None
        self._max_job_retry_times_not = None
        self._max_job_retry_times_not_in = None
        self._max_parallel_backup_jobs = None
        self._max_parallel_backup_jobs_gt = None
        self._max_parallel_backup_jobs_gte = None
        self._max_parallel_backup_jobs_in = None
        self._max_parallel_backup_jobs_lt = None
        self._max_parallel_backup_jobs_lte = None
        self._max_parallel_backup_jobs_not = None
        self._max_parallel_backup_jobs_not_in = None
        self._max_parallel_restore_jobs = None
        self._max_parallel_restore_jobs_gt = None
        self._max_parallel_restore_jobs_gte = None
        self._max_parallel_restore_jobs_in = None
        self._max_parallel_restore_jobs_lt = None
        self._max_parallel_restore_jobs_lte = None
        self._max_parallel_restore_jobs_not = None
        self._max_parallel_restore_jobs_not_in = None
        self._name = None
        self._name_contains = None
        self._name_ends_with = None
        self._name_gt = None
        self._name_gte = None
        self._name_in = None
        self._name_lt = None
        self._name_lte = None
        self._name_not = None
        self._name_not_contains = None
        self._name_not_ends_with = None
        self._name_not_in = None
        self._name_not_starts_with = None
        self._name_starts_with = None
        self.__not = None
        self.__or = None
        self._resource_version_gt = None
        self._resource_version_gte = None
        self._resource_version_in = None
        self._resource_version_lt = None
        self._resource_version_lte = None
        self._resource_version_not = None
        self._resource_version_not_in = None
        self._retry_interval = None
        self._retry_interval_gt = None
        self._retry_interval_gte = None
        self._retry_interval_in = None
        self._retry_interval_lt = None
        self._retry_interval_lte = None
        self._retry_interval_not = None
        self._retry_interval_not_in = None
        self._running_vm = None
        self._status = None
        self._status_in = None
        self._status_not = None
        self._status_not_in = None
        self._subnet_mask = None
        self._subnet_mask_contains = None
        self._subnet_mask_ends_with = None
        self._subnet_mask_gt = None
        self._subnet_mask_gte = None
        self._subnet_mask_in = None
        self._subnet_mask_lt = None
        self._subnet_mask_lte = None
        self._subnet_mask_not = None
        self._subnet_mask_not_contains = None
        self._subnet_mask_not_ends_with = None
        self._subnet_mask_not_in = None
        self._subnet_mask_not_starts_with = None
        self._subnet_mask_starts_with = None
        self.discriminator = None

        self._and = _and
        self.backup_clusters_every = backup_clusters_every
        self.backup_clusters_none = backup_clusters_none
        self.backup_clusters_some = backup_clusters_some
        self.backup_package = backup_package
        self.backup_plans_every = backup_plans_every
        self.backup_plans_none = backup_plans_none
        self.backup_plans_some = backup_plans_some
        self.backup_store_repositories_every = backup_store_repositories_every
        self.backup_store_repositories_none = backup_store_repositories_none
        self.backup_store_repositories_some = backup_store_repositories_some
        self.description = description
        self.description_contains = description_contains
        self.description_ends_with = description_ends_with
        self.description_gt = description_gt
        self.description_gte = description_gte
        self.description_in = description_in
        self.description_lt = description_lt
        self.description_lte = description_lte
        self.description_not = description_not
        self.description_not_contains = description_not_contains
        self.description_not_ends_with = description_not_ends_with
        self.description_not_in = description_not_in
        self.description_not_starts_with = description_not_starts_with
        self.description_starts_with = description_starts_with
        self.entity_async_status = entity_async_status
        self.entity_async_status_in = entity_async_status_in
        self.entity_async_status_not = entity_async_status_not
        self.entity_async_status_not_in = entity_async_status_not_in
        self.gateway = gateway
        self.gateway_contains = gateway_contains
        self.gateway_ends_with = gateway_ends_with
        self.gateway_gt = gateway_gt
        self.gateway_gte = gateway_gte
        self.gateway_in = gateway_in
        self.gateway_lt = gateway_lt
        self.gateway_lte = gateway_lte
        self.gateway_not = gateway_not
        self.gateway_not_contains = gateway_not_contains
        self.gateway_not_ends_with = gateway_not_ends_with
        self.gateway_not_in = gateway_not_in
        self.gateway_not_starts_with = gateway_not_starts_with
        self.gateway_starts_with = gateway_starts_with
        self.id = id
        self.id_contains = id_contains
        self.id_ends_with = id_ends_with
        self.id_gt = id_gt
        self.id_gte = id_gte
        self.id_in = id_in
        self.id_lt = id_lt
        self.id_lte = id_lte
        self.id_not = id_not
        self.id_not_contains = id_not_contains
        self.id_not_ends_with = id_not_ends_with
        self.id_not_in = id_not_in
        self.id_not_starts_with = id_not_starts_with
        self.id_starts_with = id_starts_with
        self.iops_limit = iops_limit
        self.iops_limit_gt = iops_limit_gt
        self.iops_limit_gte = iops_limit_gte
        self.iops_limit_in = iops_limit_in
        self.iops_limit_lt = iops_limit_lt
        self.iops_limit_lte = iops_limit_lte
        self.iops_limit_not = iops_limit_not
        self.iops_limit_not_in = iops_limit_not_in
        self.ip = ip
        self.ip_contains = ip_contains
        self.ip_ends_with = ip_ends_with
        self.ip_gt = ip_gt
        self.ip_gte = ip_gte
        self.ip_in = ip_in
        self.ip_lt = ip_lt
        self.ip_lte = ip_lte
        self.ip_not = ip_not
        self.ip_not_contains = ip_not_contains
        self.ip_not_ends_with = ip_not_ends_with
        self.ip_not_in = ip_not_in
        self.ip_not_starts_with = ip_not_starts_with
        self.ip_starts_with = ip_starts_with
        self.kube_config = kube_config
        self.kube_config_contains = kube_config_contains
        self.kube_config_ends_with = kube_config_ends_with
        self.kube_config_gt = kube_config_gt
        self.kube_config_gte = kube_config_gte
        self.kube_config_in = kube_config_in
        self.kube_config_lt = kube_config_lt
        self.kube_config_lte = kube_config_lte
        self.kube_config_not = kube_config_not
        self.kube_config_not_contains = kube_config_not_contains
        self.kube_config_not_ends_with = kube_config_not_ends_with
        self.kube_config_not_in = kube_config_not_in
        self.kube_config_not_starts_with = kube_config_not_starts_with
        self.kube_config_starts_with = kube_config_starts_with
        self.max_job_retry_times = max_job_retry_times
        self.max_job_retry_times_gt = max_job_retry_times_gt
        self.max_job_retry_times_gte = max_job_retry_times_gte
        self.max_job_retry_times_in = max_job_retry_times_in
        self.max_job_retry_times_lt = max_job_retry_times_lt
        self.max_job_retry_times_lte = max_job_retry_times_lte
        self.max_job_retry_times_not = max_job_retry_times_not
        self.max_job_retry_times_not_in = max_job_retry_times_not_in
        self.max_parallel_backup_jobs = max_parallel_backup_jobs
        self.max_parallel_backup_jobs_gt = max_parallel_backup_jobs_gt
        self.max_parallel_backup_jobs_gte = max_parallel_backup_jobs_gte
        self.max_parallel_backup_jobs_in = max_parallel_backup_jobs_in
        self.max_parallel_backup_jobs_lt = max_parallel_backup_jobs_lt
        self.max_parallel_backup_jobs_lte = max_parallel_backup_jobs_lte
        self.max_parallel_backup_jobs_not = max_parallel_backup_jobs_not
        self.max_parallel_backup_jobs_not_in = max_parallel_backup_jobs_not_in
        self.max_parallel_restore_jobs = max_parallel_restore_jobs
        self.max_parallel_restore_jobs_gt = max_parallel_restore_jobs_gt
        self.max_parallel_restore_jobs_gte = max_parallel_restore_jobs_gte
        self.max_parallel_restore_jobs_in = max_parallel_restore_jobs_in
        self.max_parallel_restore_jobs_lt = max_parallel_restore_jobs_lt
        self.max_parallel_restore_jobs_lte = max_parallel_restore_jobs_lte
        self.max_parallel_restore_jobs_not = max_parallel_restore_jobs_not
        self.max_parallel_restore_jobs_not_in = max_parallel_restore_jobs_not_in
        self.name = name
        self.name_contains = name_contains
        self.name_ends_with = name_ends_with
        self.name_gt = name_gt
        self.name_gte = name_gte
        self.name_in = name_in
        self.name_lt = name_lt
        self.name_lte = name_lte
        self.name_not = name_not
        self.name_not_contains = name_not_contains
        self.name_not_ends_with = name_not_ends_with
        self.name_not_in = name_not_in
        self.name_not_starts_with = name_not_starts_with
        self.name_starts_with = name_starts_with
        self._not = _not
        self._or = _or
        self.resource_version_gt = resource_version_gt
        self.resource_version_gte = resource_version_gte
        self.resource_version_in = resource_version_in
        self.resource_version_lt = resource_version_lt
        self.resource_version_lte = resource_version_lte
        self.resource_version_not = resource_version_not
        self.resource_version_not_in = resource_version_not_in
        self.retry_interval = retry_interval
        self.retry_interval_gt = retry_interval_gt
        self.retry_interval_gte = retry_interval_gte
        self.retry_interval_in = retry_interval_in
        self.retry_interval_lt = retry_interval_lt
        self.retry_interval_lte = retry_interval_lte
        self.retry_interval_not = retry_interval_not
        self.retry_interval_not_in = retry_interval_not_in
        self.running_vm = running_vm
        self.status = status
        self.status_in = status_in
        self.status_not = status_not
        self.status_not_in = status_not_in
        self.subnet_mask = subnet_mask
        self.subnet_mask_contains = subnet_mask_contains
        self.subnet_mask_ends_with = subnet_mask_ends_with
        self.subnet_mask_gt = subnet_mask_gt
        self.subnet_mask_gte = subnet_mask_gte
        self.subnet_mask_in = subnet_mask_in
        self.subnet_mask_lt = subnet_mask_lt
        self.subnet_mask_lte = subnet_mask_lte
        self.subnet_mask_not = subnet_mask_not
        self.subnet_mask_not_contains = subnet_mask_not_contains
        self.subnet_mask_not_ends_with = subnet_mask_not_ends_with
        self.subnet_mask_not_in = subnet_mask_not_in
        self.subnet_mask_not_starts_with = subnet_mask_not_starts_with
        self.subnet_mask_starts_with = subnet_mask_starts_with

    @property
    def _and(self):
        """Gets the _and of this BackupServiceWhereInput.  # noqa: E501


        :return: The _and of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[BackupServiceWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this BackupServiceWhereInput.


        :param _and: The _and of this BackupServiceWhereInput.  # noqa: E501
        :type _and: list[BackupServiceWhereInput]
        """

        self.__and = _and

    @property
    def backup_clusters_every(self):
        """Gets the backup_clusters_every of this BackupServiceWhereInput.  # noqa: E501


        :return: The backup_clusters_every of this BackupServiceWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._backup_clusters_every

    @backup_clusters_every.setter
    def backup_clusters_every(self, backup_clusters_every):
        """Sets the backup_clusters_every of this BackupServiceWhereInput.


        :param backup_clusters_every: The backup_clusters_every of this BackupServiceWhereInput.  # noqa: E501
        :type backup_clusters_every: ClusterWhereInput
        """

        self._backup_clusters_every = backup_clusters_every

    @property
    def backup_clusters_none(self):
        """Gets the backup_clusters_none of this BackupServiceWhereInput.  # noqa: E501


        :return: The backup_clusters_none of this BackupServiceWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._backup_clusters_none

    @backup_clusters_none.setter
    def backup_clusters_none(self, backup_clusters_none):
        """Sets the backup_clusters_none of this BackupServiceWhereInput.


        :param backup_clusters_none: The backup_clusters_none of this BackupServiceWhereInput.  # noqa: E501
        :type backup_clusters_none: ClusterWhereInput
        """

        self._backup_clusters_none = backup_clusters_none

    @property
    def backup_clusters_some(self):
        """Gets the backup_clusters_some of this BackupServiceWhereInput.  # noqa: E501


        :return: The backup_clusters_some of this BackupServiceWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._backup_clusters_some

    @backup_clusters_some.setter
    def backup_clusters_some(self, backup_clusters_some):
        """Sets the backup_clusters_some of this BackupServiceWhereInput.


        :param backup_clusters_some: The backup_clusters_some of this BackupServiceWhereInput.  # noqa: E501
        :type backup_clusters_some: ClusterWhereInput
        """

        self._backup_clusters_some = backup_clusters_some

    @property
    def backup_package(self):
        """Gets the backup_package of this BackupServiceWhereInput.  # noqa: E501


        :return: The backup_package of this BackupServiceWhereInput.  # noqa: E501
        :rtype: BackupPackageWhereInput
        """
        return self._backup_package

    @backup_package.setter
    def backup_package(self, backup_package):
        """Sets the backup_package of this BackupServiceWhereInput.


        :param backup_package: The backup_package of this BackupServiceWhereInput.  # noqa: E501
        :type backup_package: BackupPackageWhereInput
        """

        self._backup_package = backup_package

    @property
    def backup_plans_every(self):
        """Gets the backup_plans_every of this BackupServiceWhereInput.  # noqa: E501


        :return: The backup_plans_every of this BackupServiceWhereInput.  # noqa: E501
        :rtype: BackupPlanWhereInput
        """
        return self._backup_plans_every

    @backup_plans_every.setter
    def backup_plans_every(self, backup_plans_every):
        """Sets the backup_plans_every of this BackupServiceWhereInput.


        :param backup_plans_every: The backup_plans_every of this BackupServiceWhereInput.  # noqa: E501
        :type backup_plans_every: BackupPlanWhereInput
        """

        self._backup_plans_every = backup_plans_every

    @property
    def backup_plans_none(self):
        """Gets the backup_plans_none of this BackupServiceWhereInput.  # noqa: E501


        :return: The backup_plans_none of this BackupServiceWhereInput.  # noqa: E501
        :rtype: BackupPlanWhereInput
        """
        return self._backup_plans_none

    @backup_plans_none.setter
    def backup_plans_none(self, backup_plans_none):
        """Sets the backup_plans_none of this BackupServiceWhereInput.


        :param backup_plans_none: The backup_plans_none of this BackupServiceWhereInput.  # noqa: E501
        :type backup_plans_none: BackupPlanWhereInput
        """

        self._backup_plans_none = backup_plans_none

    @property
    def backup_plans_some(self):
        """Gets the backup_plans_some of this BackupServiceWhereInput.  # noqa: E501


        :return: The backup_plans_some of this BackupServiceWhereInput.  # noqa: E501
        :rtype: BackupPlanWhereInput
        """
        return self._backup_plans_some

    @backup_plans_some.setter
    def backup_plans_some(self, backup_plans_some):
        """Sets the backup_plans_some of this BackupServiceWhereInput.


        :param backup_plans_some: The backup_plans_some of this BackupServiceWhereInput.  # noqa: E501
        :type backup_plans_some: BackupPlanWhereInput
        """

        self._backup_plans_some = backup_plans_some

    @property
    def backup_store_repositories_every(self):
        """Gets the backup_store_repositories_every of this BackupServiceWhereInput.  # noqa: E501


        :return: The backup_store_repositories_every of this BackupServiceWhereInput.  # noqa: E501
        :rtype: BackupStoreRepositoryWhereInput
        """
        return self._backup_store_repositories_every

    @backup_store_repositories_every.setter
    def backup_store_repositories_every(self, backup_store_repositories_every):
        """Sets the backup_store_repositories_every of this BackupServiceWhereInput.


        :param backup_store_repositories_every: The backup_store_repositories_every of this BackupServiceWhereInput.  # noqa: E501
        :type backup_store_repositories_every: BackupStoreRepositoryWhereInput
        """

        self._backup_store_repositories_every = backup_store_repositories_every

    @property
    def backup_store_repositories_none(self):
        """Gets the backup_store_repositories_none of this BackupServiceWhereInput.  # noqa: E501


        :return: The backup_store_repositories_none of this BackupServiceWhereInput.  # noqa: E501
        :rtype: BackupStoreRepositoryWhereInput
        """
        return self._backup_store_repositories_none

    @backup_store_repositories_none.setter
    def backup_store_repositories_none(self, backup_store_repositories_none):
        """Sets the backup_store_repositories_none of this BackupServiceWhereInput.


        :param backup_store_repositories_none: The backup_store_repositories_none of this BackupServiceWhereInput.  # noqa: E501
        :type backup_store_repositories_none: BackupStoreRepositoryWhereInput
        """

        self._backup_store_repositories_none = backup_store_repositories_none

    @property
    def backup_store_repositories_some(self):
        """Gets the backup_store_repositories_some of this BackupServiceWhereInput.  # noqa: E501


        :return: The backup_store_repositories_some of this BackupServiceWhereInput.  # noqa: E501
        :rtype: BackupStoreRepositoryWhereInput
        """
        return self._backup_store_repositories_some

    @backup_store_repositories_some.setter
    def backup_store_repositories_some(self, backup_store_repositories_some):
        """Sets the backup_store_repositories_some of this BackupServiceWhereInput.


        :param backup_store_repositories_some: The backup_store_repositories_some of this BackupServiceWhereInput.  # noqa: E501
        :type backup_store_repositories_some: BackupStoreRepositoryWhereInput
        """

        self._backup_store_repositories_some = backup_store_repositories_some

    @property
    def description(self):
        """Gets the description of this BackupServiceWhereInput.  # noqa: E501


        :return: The description of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BackupServiceWhereInput.


        :param description: The description of this BackupServiceWhereInput.  # noqa: E501
        :type description: str
        """

        self._description = description

    @property
    def description_contains(self):
        """Gets the description_contains of this BackupServiceWhereInput.  # noqa: E501


        :return: The description_contains of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_contains

    @description_contains.setter
    def description_contains(self, description_contains):
        """Sets the description_contains of this BackupServiceWhereInput.


        :param description_contains: The description_contains of this BackupServiceWhereInput.  # noqa: E501
        :type description_contains: str
        """

        self._description_contains = description_contains

    @property
    def description_ends_with(self):
        """Gets the description_ends_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The description_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_ends_with

    @description_ends_with.setter
    def description_ends_with(self, description_ends_with):
        """Sets the description_ends_with of this BackupServiceWhereInput.


        :param description_ends_with: The description_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :type description_ends_with: str
        """

        self._description_ends_with = description_ends_with

    @property
    def description_gt(self):
        """Gets the description_gt of this BackupServiceWhereInput.  # noqa: E501


        :return: The description_gt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_gt

    @description_gt.setter
    def description_gt(self, description_gt):
        """Sets the description_gt of this BackupServiceWhereInput.


        :param description_gt: The description_gt of this BackupServiceWhereInput.  # noqa: E501
        :type description_gt: str
        """

        self._description_gt = description_gt

    @property
    def description_gte(self):
        """Gets the description_gte of this BackupServiceWhereInput.  # noqa: E501


        :return: The description_gte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_gte

    @description_gte.setter
    def description_gte(self, description_gte):
        """Sets the description_gte of this BackupServiceWhereInput.


        :param description_gte: The description_gte of this BackupServiceWhereInput.  # noqa: E501
        :type description_gte: str
        """

        self._description_gte = description_gte

    @property
    def description_in(self):
        """Gets the description_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The description_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._description_in

    @description_in.setter
    def description_in(self, description_in):
        """Sets the description_in of this BackupServiceWhereInput.


        :param description_in: The description_in of this BackupServiceWhereInput.  # noqa: E501
        :type description_in: list[str]
        """

        self._description_in = description_in

    @property
    def description_lt(self):
        """Gets the description_lt of this BackupServiceWhereInput.  # noqa: E501


        :return: The description_lt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_lt

    @description_lt.setter
    def description_lt(self, description_lt):
        """Sets the description_lt of this BackupServiceWhereInput.


        :param description_lt: The description_lt of this BackupServiceWhereInput.  # noqa: E501
        :type description_lt: str
        """

        self._description_lt = description_lt

    @property
    def description_lte(self):
        """Gets the description_lte of this BackupServiceWhereInput.  # noqa: E501


        :return: The description_lte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_lte

    @description_lte.setter
    def description_lte(self, description_lte):
        """Sets the description_lte of this BackupServiceWhereInput.


        :param description_lte: The description_lte of this BackupServiceWhereInput.  # noqa: E501
        :type description_lte: str
        """

        self._description_lte = description_lte

    @property
    def description_not(self):
        """Gets the description_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The description_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not

    @description_not.setter
    def description_not(self, description_not):
        """Sets the description_not of this BackupServiceWhereInput.


        :param description_not: The description_not of this BackupServiceWhereInput.  # noqa: E501
        :type description_not: str
        """

        self._description_not = description_not

    @property
    def description_not_contains(self):
        """Gets the description_not_contains of this BackupServiceWhereInput.  # noqa: E501


        :return: The description_not_contains of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_contains

    @description_not_contains.setter
    def description_not_contains(self, description_not_contains):
        """Sets the description_not_contains of this BackupServiceWhereInput.


        :param description_not_contains: The description_not_contains of this BackupServiceWhereInput.  # noqa: E501
        :type description_not_contains: str
        """

        self._description_not_contains = description_not_contains

    @property
    def description_not_ends_with(self):
        """Gets the description_not_ends_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The description_not_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_ends_with

    @description_not_ends_with.setter
    def description_not_ends_with(self, description_not_ends_with):
        """Sets the description_not_ends_with of this BackupServiceWhereInput.


        :param description_not_ends_with: The description_not_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :type description_not_ends_with: str
        """

        self._description_not_ends_with = description_not_ends_with

    @property
    def description_not_in(self):
        """Gets the description_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The description_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._description_not_in

    @description_not_in.setter
    def description_not_in(self, description_not_in):
        """Sets the description_not_in of this BackupServiceWhereInput.


        :param description_not_in: The description_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type description_not_in: list[str]
        """

        self._description_not_in = description_not_in

    @property
    def description_not_starts_with(self):
        """Gets the description_not_starts_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The description_not_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_not_starts_with

    @description_not_starts_with.setter
    def description_not_starts_with(self, description_not_starts_with):
        """Sets the description_not_starts_with of this BackupServiceWhereInput.


        :param description_not_starts_with: The description_not_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :type description_not_starts_with: str
        """

        self._description_not_starts_with = description_not_starts_with

    @property
    def description_starts_with(self):
        """Gets the description_starts_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The description_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._description_starts_with

    @description_starts_with.setter
    def description_starts_with(self, description_starts_with):
        """Sets the description_starts_with of this BackupServiceWhereInput.


        :param description_starts_with: The description_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :type description_starts_with: str
        """

        self._description_starts_with = description_starts_with

    @property
    def entity_async_status(self):
        """Gets the entity_async_status of this BackupServiceWhereInput.  # noqa: E501


        :return: The entity_async_status of this BackupServiceWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status

    @entity_async_status.setter
    def entity_async_status(self, entity_async_status):
        """Sets the entity_async_status of this BackupServiceWhereInput.


        :param entity_async_status: The entity_async_status of this BackupServiceWhereInput.  # noqa: E501
        :type entity_async_status: EntityAsyncStatus
        """

        self._entity_async_status = entity_async_status

    @property
    def entity_async_status_in(self):
        """Gets the entity_async_status_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The entity_async_status_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_in

    @entity_async_status_in.setter
    def entity_async_status_in(self, entity_async_status_in):
        """Sets the entity_async_status_in of this BackupServiceWhereInput.


        :param entity_async_status_in: The entity_async_status_in of this BackupServiceWhereInput.  # noqa: E501
        :type entity_async_status_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_in = entity_async_status_in

    @property
    def entity_async_status_not(self):
        """Gets the entity_async_status_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The entity_async_status_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status_not

    @entity_async_status_not.setter
    def entity_async_status_not(self, entity_async_status_not):
        """Sets the entity_async_status_not of this BackupServiceWhereInput.


        :param entity_async_status_not: The entity_async_status_not of this BackupServiceWhereInput.  # noqa: E501
        :type entity_async_status_not: EntityAsyncStatus
        """

        self._entity_async_status_not = entity_async_status_not

    @property
    def entity_async_status_not_in(self):
        """Gets the entity_async_status_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The entity_async_status_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_not_in

    @entity_async_status_not_in.setter
    def entity_async_status_not_in(self, entity_async_status_not_in):
        """Sets the entity_async_status_not_in of this BackupServiceWhereInput.


        :param entity_async_status_not_in: The entity_async_status_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type entity_async_status_not_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_not_in = entity_async_status_not_in

    @property
    def gateway(self):
        """Gets the gateway of this BackupServiceWhereInput.  # noqa: E501


        :return: The gateway of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway

    @gateway.setter
    def gateway(self, gateway):
        """Sets the gateway of this BackupServiceWhereInput.


        :param gateway: The gateway of this BackupServiceWhereInput.  # noqa: E501
        :type gateway: str
        """

        self._gateway = gateway

    @property
    def gateway_contains(self):
        """Gets the gateway_contains of this BackupServiceWhereInput.  # noqa: E501


        :return: The gateway_contains of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_contains

    @gateway_contains.setter
    def gateway_contains(self, gateway_contains):
        """Sets the gateway_contains of this BackupServiceWhereInput.


        :param gateway_contains: The gateway_contains of this BackupServiceWhereInput.  # noqa: E501
        :type gateway_contains: str
        """

        self._gateway_contains = gateway_contains

    @property
    def gateway_ends_with(self):
        """Gets the gateway_ends_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The gateway_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_ends_with

    @gateway_ends_with.setter
    def gateway_ends_with(self, gateway_ends_with):
        """Sets the gateway_ends_with of this BackupServiceWhereInput.


        :param gateway_ends_with: The gateway_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :type gateway_ends_with: str
        """

        self._gateway_ends_with = gateway_ends_with

    @property
    def gateway_gt(self):
        """Gets the gateway_gt of this BackupServiceWhereInput.  # noqa: E501


        :return: The gateway_gt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_gt

    @gateway_gt.setter
    def gateway_gt(self, gateway_gt):
        """Sets the gateway_gt of this BackupServiceWhereInput.


        :param gateway_gt: The gateway_gt of this BackupServiceWhereInput.  # noqa: E501
        :type gateway_gt: str
        """

        self._gateway_gt = gateway_gt

    @property
    def gateway_gte(self):
        """Gets the gateway_gte of this BackupServiceWhereInput.  # noqa: E501


        :return: The gateway_gte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_gte

    @gateway_gte.setter
    def gateway_gte(self, gateway_gte):
        """Sets the gateway_gte of this BackupServiceWhereInput.


        :param gateway_gte: The gateway_gte of this BackupServiceWhereInput.  # noqa: E501
        :type gateway_gte: str
        """

        self._gateway_gte = gateway_gte

    @property
    def gateway_in(self):
        """Gets the gateway_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The gateway_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._gateway_in

    @gateway_in.setter
    def gateway_in(self, gateway_in):
        """Sets the gateway_in of this BackupServiceWhereInput.


        :param gateway_in: The gateway_in of this BackupServiceWhereInput.  # noqa: E501
        :type gateway_in: list[str]
        """

        self._gateway_in = gateway_in

    @property
    def gateway_lt(self):
        """Gets the gateway_lt of this BackupServiceWhereInput.  # noqa: E501


        :return: The gateway_lt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_lt

    @gateway_lt.setter
    def gateway_lt(self, gateway_lt):
        """Sets the gateway_lt of this BackupServiceWhereInput.


        :param gateway_lt: The gateway_lt of this BackupServiceWhereInput.  # noqa: E501
        :type gateway_lt: str
        """

        self._gateway_lt = gateway_lt

    @property
    def gateway_lte(self):
        """Gets the gateway_lte of this BackupServiceWhereInput.  # noqa: E501


        :return: The gateway_lte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_lte

    @gateway_lte.setter
    def gateway_lte(self, gateway_lte):
        """Sets the gateway_lte of this BackupServiceWhereInput.


        :param gateway_lte: The gateway_lte of this BackupServiceWhereInput.  # noqa: E501
        :type gateway_lte: str
        """

        self._gateway_lte = gateway_lte

    @property
    def gateway_not(self):
        """Gets the gateway_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The gateway_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_not

    @gateway_not.setter
    def gateway_not(self, gateway_not):
        """Sets the gateway_not of this BackupServiceWhereInput.


        :param gateway_not: The gateway_not of this BackupServiceWhereInput.  # noqa: E501
        :type gateway_not: str
        """

        self._gateway_not = gateway_not

    @property
    def gateway_not_contains(self):
        """Gets the gateway_not_contains of this BackupServiceWhereInput.  # noqa: E501


        :return: The gateway_not_contains of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_not_contains

    @gateway_not_contains.setter
    def gateway_not_contains(self, gateway_not_contains):
        """Sets the gateway_not_contains of this BackupServiceWhereInput.


        :param gateway_not_contains: The gateway_not_contains of this BackupServiceWhereInput.  # noqa: E501
        :type gateway_not_contains: str
        """

        self._gateway_not_contains = gateway_not_contains

    @property
    def gateway_not_ends_with(self):
        """Gets the gateway_not_ends_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The gateway_not_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_not_ends_with

    @gateway_not_ends_with.setter
    def gateway_not_ends_with(self, gateway_not_ends_with):
        """Sets the gateway_not_ends_with of this BackupServiceWhereInput.


        :param gateway_not_ends_with: The gateway_not_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :type gateway_not_ends_with: str
        """

        self._gateway_not_ends_with = gateway_not_ends_with

    @property
    def gateway_not_in(self):
        """Gets the gateway_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The gateway_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._gateway_not_in

    @gateway_not_in.setter
    def gateway_not_in(self, gateway_not_in):
        """Sets the gateway_not_in of this BackupServiceWhereInput.


        :param gateway_not_in: The gateway_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type gateway_not_in: list[str]
        """

        self._gateway_not_in = gateway_not_in

    @property
    def gateway_not_starts_with(self):
        """Gets the gateway_not_starts_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The gateway_not_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_not_starts_with

    @gateway_not_starts_with.setter
    def gateway_not_starts_with(self, gateway_not_starts_with):
        """Sets the gateway_not_starts_with of this BackupServiceWhereInput.


        :param gateway_not_starts_with: The gateway_not_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :type gateway_not_starts_with: str
        """

        self._gateway_not_starts_with = gateway_not_starts_with

    @property
    def gateway_starts_with(self):
        """Gets the gateway_starts_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The gateway_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._gateway_starts_with

    @gateway_starts_with.setter
    def gateway_starts_with(self, gateway_starts_with):
        """Sets the gateway_starts_with of this BackupServiceWhereInput.


        :param gateway_starts_with: The gateway_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :type gateway_starts_with: str
        """

        self._gateway_starts_with = gateway_starts_with

    @property
    def id(self):
        """Gets the id of this BackupServiceWhereInput.  # noqa: E501


        :return: The id of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BackupServiceWhereInput.


        :param id: The id of this BackupServiceWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this BackupServiceWhereInput.  # noqa: E501


        :return: The id_contains of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this BackupServiceWhereInput.


        :param id_contains: The id_contains of this BackupServiceWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The id_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this BackupServiceWhereInput.


        :param id_ends_with: The id_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this BackupServiceWhereInput.  # noqa: E501


        :return: The id_gt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this BackupServiceWhereInput.


        :param id_gt: The id_gt of this BackupServiceWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this BackupServiceWhereInput.  # noqa: E501


        :return: The id_gte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this BackupServiceWhereInput.


        :param id_gte: The id_gte of this BackupServiceWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The id_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this BackupServiceWhereInput.


        :param id_in: The id_in of this BackupServiceWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this BackupServiceWhereInput.  # noqa: E501


        :return: The id_lt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this BackupServiceWhereInput.


        :param id_lt: The id_lt of this BackupServiceWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this BackupServiceWhereInput.  # noqa: E501


        :return: The id_lte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this BackupServiceWhereInput.


        :param id_lte: The id_lte of this BackupServiceWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The id_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this BackupServiceWhereInput.


        :param id_not: The id_not of this BackupServiceWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this BackupServiceWhereInput.  # noqa: E501


        :return: The id_not_contains of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this BackupServiceWhereInput.


        :param id_not_contains: The id_not_contains of this BackupServiceWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this BackupServiceWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The id_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this BackupServiceWhereInput.


        :param id_not_in: The id_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this BackupServiceWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The id_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this BackupServiceWhereInput.


        :param id_starts_with: The id_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def iops_limit(self):
        """Gets the iops_limit of this BackupServiceWhereInput.  # noqa: E501


        :return: The iops_limit of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._iops_limit

    @iops_limit.setter
    def iops_limit(self, iops_limit):
        """Sets the iops_limit of this BackupServiceWhereInput.


        :param iops_limit: The iops_limit of this BackupServiceWhereInput.  # noqa: E501
        :type iops_limit: int
        """

        self._iops_limit = iops_limit

    @property
    def iops_limit_gt(self):
        """Gets the iops_limit_gt of this BackupServiceWhereInput.  # noqa: E501


        :return: The iops_limit_gt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._iops_limit_gt

    @iops_limit_gt.setter
    def iops_limit_gt(self, iops_limit_gt):
        """Sets the iops_limit_gt of this BackupServiceWhereInput.


        :param iops_limit_gt: The iops_limit_gt of this BackupServiceWhereInput.  # noqa: E501
        :type iops_limit_gt: int
        """

        self._iops_limit_gt = iops_limit_gt

    @property
    def iops_limit_gte(self):
        """Gets the iops_limit_gte of this BackupServiceWhereInput.  # noqa: E501


        :return: The iops_limit_gte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._iops_limit_gte

    @iops_limit_gte.setter
    def iops_limit_gte(self, iops_limit_gte):
        """Sets the iops_limit_gte of this BackupServiceWhereInput.


        :param iops_limit_gte: The iops_limit_gte of this BackupServiceWhereInput.  # noqa: E501
        :type iops_limit_gte: int
        """

        self._iops_limit_gte = iops_limit_gte

    @property
    def iops_limit_in(self):
        """Gets the iops_limit_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The iops_limit_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._iops_limit_in

    @iops_limit_in.setter
    def iops_limit_in(self, iops_limit_in):
        """Sets the iops_limit_in of this BackupServiceWhereInput.


        :param iops_limit_in: The iops_limit_in of this BackupServiceWhereInput.  # noqa: E501
        :type iops_limit_in: list[int]
        """

        self._iops_limit_in = iops_limit_in

    @property
    def iops_limit_lt(self):
        """Gets the iops_limit_lt of this BackupServiceWhereInput.  # noqa: E501


        :return: The iops_limit_lt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._iops_limit_lt

    @iops_limit_lt.setter
    def iops_limit_lt(self, iops_limit_lt):
        """Sets the iops_limit_lt of this BackupServiceWhereInput.


        :param iops_limit_lt: The iops_limit_lt of this BackupServiceWhereInput.  # noqa: E501
        :type iops_limit_lt: int
        """

        self._iops_limit_lt = iops_limit_lt

    @property
    def iops_limit_lte(self):
        """Gets the iops_limit_lte of this BackupServiceWhereInput.  # noqa: E501


        :return: The iops_limit_lte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._iops_limit_lte

    @iops_limit_lte.setter
    def iops_limit_lte(self, iops_limit_lte):
        """Sets the iops_limit_lte of this BackupServiceWhereInput.


        :param iops_limit_lte: The iops_limit_lte of this BackupServiceWhereInput.  # noqa: E501
        :type iops_limit_lte: int
        """

        self._iops_limit_lte = iops_limit_lte

    @property
    def iops_limit_not(self):
        """Gets the iops_limit_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The iops_limit_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._iops_limit_not

    @iops_limit_not.setter
    def iops_limit_not(self, iops_limit_not):
        """Sets the iops_limit_not of this BackupServiceWhereInput.


        :param iops_limit_not: The iops_limit_not of this BackupServiceWhereInput.  # noqa: E501
        :type iops_limit_not: int
        """

        self._iops_limit_not = iops_limit_not

    @property
    def iops_limit_not_in(self):
        """Gets the iops_limit_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The iops_limit_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._iops_limit_not_in

    @iops_limit_not_in.setter
    def iops_limit_not_in(self, iops_limit_not_in):
        """Sets the iops_limit_not_in of this BackupServiceWhereInput.


        :param iops_limit_not_in: The iops_limit_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type iops_limit_not_in: list[int]
        """

        self._iops_limit_not_in = iops_limit_not_in

    @property
    def ip(self):
        """Gets the ip of this BackupServiceWhereInput.  # noqa: E501


        :return: The ip of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this BackupServiceWhereInput.


        :param ip: The ip of this BackupServiceWhereInput.  # noqa: E501
        :type ip: str
        """

        self._ip = ip

    @property
    def ip_contains(self):
        """Gets the ip_contains of this BackupServiceWhereInput.  # noqa: E501


        :return: The ip_contains of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_contains

    @ip_contains.setter
    def ip_contains(self, ip_contains):
        """Sets the ip_contains of this BackupServiceWhereInput.


        :param ip_contains: The ip_contains of this BackupServiceWhereInput.  # noqa: E501
        :type ip_contains: str
        """

        self._ip_contains = ip_contains

    @property
    def ip_ends_with(self):
        """Gets the ip_ends_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The ip_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_ends_with

    @ip_ends_with.setter
    def ip_ends_with(self, ip_ends_with):
        """Sets the ip_ends_with of this BackupServiceWhereInput.


        :param ip_ends_with: The ip_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :type ip_ends_with: str
        """

        self._ip_ends_with = ip_ends_with

    @property
    def ip_gt(self):
        """Gets the ip_gt of this BackupServiceWhereInput.  # noqa: E501


        :return: The ip_gt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_gt

    @ip_gt.setter
    def ip_gt(self, ip_gt):
        """Sets the ip_gt of this BackupServiceWhereInput.


        :param ip_gt: The ip_gt of this BackupServiceWhereInput.  # noqa: E501
        :type ip_gt: str
        """

        self._ip_gt = ip_gt

    @property
    def ip_gte(self):
        """Gets the ip_gte of this BackupServiceWhereInput.  # noqa: E501


        :return: The ip_gte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_gte

    @ip_gte.setter
    def ip_gte(self, ip_gte):
        """Sets the ip_gte of this BackupServiceWhereInput.


        :param ip_gte: The ip_gte of this BackupServiceWhereInput.  # noqa: E501
        :type ip_gte: str
        """

        self._ip_gte = ip_gte

    @property
    def ip_in(self):
        """Gets the ip_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The ip_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ip_in

    @ip_in.setter
    def ip_in(self, ip_in):
        """Sets the ip_in of this BackupServiceWhereInput.


        :param ip_in: The ip_in of this BackupServiceWhereInput.  # noqa: E501
        :type ip_in: list[str]
        """

        self._ip_in = ip_in

    @property
    def ip_lt(self):
        """Gets the ip_lt of this BackupServiceWhereInput.  # noqa: E501


        :return: The ip_lt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_lt

    @ip_lt.setter
    def ip_lt(self, ip_lt):
        """Sets the ip_lt of this BackupServiceWhereInput.


        :param ip_lt: The ip_lt of this BackupServiceWhereInput.  # noqa: E501
        :type ip_lt: str
        """

        self._ip_lt = ip_lt

    @property
    def ip_lte(self):
        """Gets the ip_lte of this BackupServiceWhereInput.  # noqa: E501


        :return: The ip_lte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_lte

    @ip_lte.setter
    def ip_lte(self, ip_lte):
        """Sets the ip_lte of this BackupServiceWhereInput.


        :param ip_lte: The ip_lte of this BackupServiceWhereInput.  # noqa: E501
        :type ip_lte: str
        """

        self._ip_lte = ip_lte

    @property
    def ip_not(self):
        """Gets the ip_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The ip_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_not

    @ip_not.setter
    def ip_not(self, ip_not):
        """Sets the ip_not of this BackupServiceWhereInput.


        :param ip_not: The ip_not of this BackupServiceWhereInput.  # noqa: E501
        :type ip_not: str
        """

        self._ip_not = ip_not

    @property
    def ip_not_contains(self):
        """Gets the ip_not_contains of this BackupServiceWhereInput.  # noqa: E501


        :return: The ip_not_contains of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_not_contains

    @ip_not_contains.setter
    def ip_not_contains(self, ip_not_contains):
        """Sets the ip_not_contains of this BackupServiceWhereInput.


        :param ip_not_contains: The ip_not_contains of this BackupServiceWhereInput.  # noqa: E501
        :type ip_not_contains: str
        """

        self._ip_not_contains = ip_not_contains

    @property
    def ip_not_ends_with(self):
        """Gets the ip_not_ends_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The ip_not_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_not_ends_with

    @ip_not_ends_with.setter
    def ip_not_ends_with(self, ip_not_ends_with):
        """Sets the ip_not_ends_with of this BackupServiceWhereInput.


        :param ip_not_ends_with: The ip_not_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :type ip_not_ends_with: str
        """

        self._ip_not_ends_with = ip_not_ends_with

    @property
    def ip_not_in(self):
        """Gets the ip_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The ip_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ip_not_in

    @ip_not_in.setter
    def ip_not_in(self, ip_not_in):
        """Sets the ip_not_in of this BackupServiceWhereInput.


        :param ip_not_in: The ip_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type ip_not_in: list[str]
        """

        self._ip_not_in = ip_not_in

    @property
    def ip_not_starts_with(self):
        """Gets the ip_not_starts_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The ip_not_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_not_starts_with

    @ip_not_starts_with.setter
    def ip_not_starts_with(self, ip_not_starts_with):
        """Sets the ip_not_starts_with of this BackupServiceWhereInput.


        :param ip_not_starts_with: The ip_not_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :type ip_not_starts_with: str
        """

        self._ip_not_starts_with = ip_not_starts_with

    @property
    def ip_starts_with(self):
        """Gets the ip_starts_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The ip_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_starts_with

    @ip_starts_with.setter
    def ip_starts_with(self, ip_starts_with):
        """Sets the ip_starts_with of this BackupServiceWhereInput.


        :param ip_starts_with: The ip_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :type ip_starts_with: str
        """

        self._ip_starts_with = ip_starts_with

    @property
    def kube_config(self):
        """Gets the kube_config of this BackupServiceWhereInput.  # noqa: E501


        :return: The kube_config of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kube_config

    @kube_config.setter
    def kube_config(self, kube_config):
        """Sets the kube_config of this BackupServiceWhereInput.


        :param kube_config: The kube_config of this BackupServiceWhereInput.  # noqa: E501
        :type kube_config: str
        """

        self._kube_config = kube_config

    @property
    def kube_config_contains(self):
        """Gets the kube_config_contains of this BackupServiceWhereInput.  # noqa: E501


        :return: The kube_config_contains of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kube_config_contains

    @kube_config_contains.setter
    def kube_config_contains(self, kube_config_contains):
        """Sets the kube_config_contains of this BackupServiceWhereInput.


        :param kube_config_contains: The kube_config_contains of this BackupServiceWhereInput.  # noqa: E501
        :type kube_config_contains: str
        """

        self._kube_config_contains = kube_config_contains

    @property
    def kube_config_ends_with(self):
        """Gets the kube_config_ends_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The kube_config_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kube_config_ends_with

    @kube_config_ends_with.setter
    def kube_config_ends_with(self, kube_config_ends_with):
        """Sets the kube_config_ends_with of this BackupServiceWhereInput.


        :param kube_config_ends_with: The kube_config_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :type kube_config_ends_with: str
        """

        self._kube_config_ends_with = kube_config_ends_with

    @property
    def kube_config_gt(self):
        """Gets the kube_config_gt of this BackupServiceWhereInput.  # noqa: E501


        :return: The kube_config_gt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kube_config_gt

    @kube_config_gt.setter
    def kube_config_gt(self, kube_config_gt):
        """Sets the kube_config_gt of this BackupServiceWhereInput.


        :param kube_config_gt: The kube_config_gt of this BackupServiceWhereInput.  # noqa: E501
        :type kube_config_gt: str
        """

        self._kube_config_gt = kube_config_gt

    @property
    def kube_config_gte(self):
        """Gets the kube_config_gte of this BackupServiceWhereInput.  # noqa: E501


        :return: The kube_config_gte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kube_config_gte

    @kube_config_gte.setter
    def kube_config_gte(self, kube_config_gte):
        """Sets the kube_config_gte of this BackupServiceWhereInput.


        :param kube_config_gte: The kube_config_gte of this BackupServiceWhereInput.  # noqa: E501
        :type kube_config_gte: str
        """

        self._kube_config_gte = kube_config_gte

    @property
    def kube_config_in(self):
        """Gets the kube_config_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The kube_config_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._kube_config_in

    @kube_config_in.setter
    def kube_config_in(self, kube_config_in):
        """Sets the kube_config_in of this BackupServiceWhereInput.


        :param kube_config_in: The kube_config_in of this BackupServiceWhereInput.  # noqa: E501
        :type kube_config_in: list[str]
        """

        self._kube_config_in = kube_config_in

    @property
    def kube_config_lt(self):
        """Gets the kube_config_lt of this BackupServiceWhereInput.  # noqa: E501


        :return: The kube_config_lt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kube_config_lt

    @kube_config_lt.setter
    def kube_config_lt(self, kube_config_lt):
        """Sets the kube_config_lt of this BackupServiceWhereInput.


        :param kube_config_lt: The kube_config_lt of this BackupServiceWhereInput.  # noqa: E501
        :type kube_config_lt: str
        """

        self._kube_config_lt = kube_config_lt

    @property
    def kube_config_lte(self):
        """Gets the kube_config_lte of this BackupServiceWhereInput.  # noqa: E501


        :return: The kube_config_lte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kube_config_lte

    @kube_config_lte.setter
    def kube_config_lte(self, kube_config_lte):
        """Sets the kube_config_lte of this BackupServiceWhereInput.


        :param kube_config_lte: The kube_config_lte of this BackupServiceWhereInput.  # noqa: E501
        :type kube_config_lte: str
        """

        self._kube_config_lte = kube_config_lte

    @property
    def kube_config_not(self):
        """Gets the kube_config_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The kube_config_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kube_config_not

    @kube_config_not.setter
    def kube_config_not(self, kube_config_not):
        """Sets the kube_config_not of this BackupServiceWhereInput.


        :param kube_config_not: The kube_config_not of this BackupServiceWhereInput.  # noqa: E501
        :type kube_config_not: str
        """

        self._kube_config_not = kube_config_not

    @property
    def kube_config_not_contains(self):
        """Gets the kube_config_not_contains of this BackupServiceWhereInput.  # noqa: E501


        :return: The kube_config_not_contains of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kube_config_not_contains

    @kube_config_not_contains.setter
    def kube_config_not_contains(self, kube_config_not_contains):
        """Sets the kube_config_not_contains of this BackupServiceWhereInput.


        :param kube_config_not_contains: The kube_config_not_contains of this BackupServiceWhereInput.  # noqa: E501
        :type kube_config_not_contains: str
        """

        self._kube_config_not_contains = kube_config_not_contains

    @property
    def kube_config_not_ends_with(self):
        """Gets the kube_config_not_ends_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The kube_config_not_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kube_config_not_ends_with

    @kube_config_not_ends_with.setter
    def kube_config_not_ends_with(self, kube_config_not_ends_with):
        """Sets the kube_config_not_ends_with of this BackupServiceWhereInput.


        :param kube_config_not_ends_with: The kube_config_not_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :type kube_config_not_ends_with: str
        """

        self._kube_config_not_ends_with = kube_config_not_ends_with

    @property
    def kube_config_not_in(self):
        """Gets the kube_config_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The kube_config_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._kube_config_not_in

    @kube_config_not_in.setter
    def kube_config_not_in(self, kube_config_not_in):
        """Sets the kube_config_not_in of this BackupServiceWhereInput.


        :param kube_config_not_in: The kube_config_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type kube_config_not_in: list[str]
        """

        self._kube_config_not_in = kube_config_not_in

    @property
    def kube_config_not_starts_with(self):
        """Gets the kube_config_not_starts_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The kube_config_not_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kube_config_not_starts_with

    @kube_config_not_starts_with.setter
    def kube_config_not_starts_with(self, kube_config_not_starts_with):
        """Sets the kube_config_not_starts_with of this BackupServiceWhereInput.


        :param kube_config_not_starts_with: The kube_config_not_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :type kube_config_not_starts_with: str
        """

        self._kube_config_not_starts_with = kube_config_not_starts_with

    @property
    def kube_config_starts_with(self):
        """Gets the kube_config_starts_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The kube_config_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._kube_config_starts_with

    @kube_config_starts_with.setter
    def kube_config_starts_with(self, kube_config_starts_with):
        """Sets the kube_config_starts_with of this BackupServiceWhereInput.


        :param kube_config_starts_with: The kube_config_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :type kube_config_starts_with: str
        """

        self._kube_config_starts_with = kube_config_starts_with

    @property
    def max_job_retry_times(self):
        """Gets the max_job_retry_times of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_job_retry_times of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_job_retry_times

    @max_job_retry_times.setter
    def max_job_retry_times(self, max_job_retry_times):
        """Sets the max_job_retry_times of this BackupServiceWhereInput.


        :param max_job_retry_times: The max_job_retry_times of this BackupServiceWhereInput.  # noqa: E501
        :type max_job_retry_times: int
        """

        self._max_job_retry_times = max_job_retry_times

    @property
    def max_job_retry_times_gt(self):
        """Gets the max_job_retry_times_gt of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_job_retry_times_gt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_job_retry_times_gt

    @max_job_retry_times_gt.setter
    def max_job_retry_times_gt(self, max_job_retry_times_gt):
        """Sets the max_job_retry_times_gt of this BackupServiceWhereInput.


        :param max_job_retry_times_gt: The max_job_retry_times_gt of this BackupServiceWhereInput.  # noqa: E501
        :type max_job_retry_times_gt: int
        """

        self._max_job_retry_times_gt = max_job_retry_times_gt

    @property
    def max_job_retry_times_gte(self):
        """Gets the max_job_retry_times_gte of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_job_retry_times_gte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_job_retry_times_gte

    @max_job_retry_times_gte.setter
    def max_job_retry_times_gte(self, max_job_retry_times_gte):
        """Sets the max_job_retry_times_gte of this BackupServiceWhereInput.


        :param max_job_retry_times_gte: The max_job_retry_times_gte of this BackupServiceWhereInput.  # noqa: E501
        :type max_job_retry_times_gte: int
        """

        self._max_job_retry_times_gte = max_job_retry_times_gte

    @property
    def max_job_retry_times_in(self):
        """Gets the max_job_retry_times_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_job_retry_times_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._max_job_retry_times_in

    @max_job_retry_times_in.setter
    def max_job_retry_times_in(self, max_job_retry_times_in):
        """Sets the max_job_retry_times_in of this BackupServiceWhereInput.


        :param max_job_retry_times_in: The max_job_retry_times_in of this BackupServiceWhereInput.  # noqa: E501
        :type max_job_retry_times_in: list[int]
        """

        self._max_job_retry_times_in = max_job_retry_times_in

    @property
    def max_job_retry_times_lt(self):
        """Gets the max_job_retry_times_lt of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_job_retry_times_lt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_job_retry_times_lt

    @max_job_retry_times_lt.setter
    def max_job_retry_times_lt(self, max_job_retry_times_lt):
        """Sets the max_job_retry_times_lt of this BackupServiceWhereInput.


        :param max_job_retry_times_lt: The max_job_retry_times_lt of this BackupServiceWhereInput.  # noqa: E501
        :type max_job_retry_times_lt: int
        """

        self._max_job_retry_times_lt = max_job_retry_times_lt

    @property
    def max_job_retry_times_lte(self):
        """Gets the max_job_retry_times_lte of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_job_retry_times_lte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_job_retry_times_lte

    @max_job_retry_times_lte.setter
    def max_job_retry_times_lte(self, max_job_retry_times_lte):
        """Sets the max_job_retry_times_lte of this BackupServiceWhereInput.


        :param max_job_retry_times_lte: The max_job_retry_times_lte of this BackupServiceWhereInput.  # noqa: E501
        :type max_job_retry_times_lte: int
        """

        self._max_job_retry_times_lte = max_job_retry_times_lte

    @property
    def max_job_retry_times_not(self):
        """Gets the max_job_retry_times_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_job_retry_times_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_job_retry_times_not

    @max_job_retry_times_not.setter
    def max_job_retry_times_not(self, max_job_retry_times_not):
        """Sets the max_job_retry_times_not of this BackupServiceWhereInput.


        :param max_job_retry_times_not: The max_job_retry_times_not of this BackupServiceWhereInput.  # noqa: E501
        :type max_job_retry_times_not: int
        """

        self._max_job_retry_times_not = max_job_retry_times_not

    @property
    def max_job_retry_times_not_in(self):
        """Gets the max_job_retry_times_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_job_retry_times_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._max_job_retry_times_not_in

    @max_job_retry_times_not_in.setter
    def max_job_retry_times_not_in(self, max_job_retry_times_not_in):
        """Sets the max_job_retry_times_not_in of this BackupServiceWhereInput.


        :param max_job_retry_times_not_in: The max_job_retry_times_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type max_job_retry_times_not_in: list[int]
        """

        self._max_job_retry_times_not_in = max_job_retry_times_not_in

    @property
    def max_parallel_backup_jobs(self):
        """Gets the max_parallel_backup_jobs of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_backup_jobs of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_parallel_backup_jobs

    @max_parallel_backup_jobs.setter
    def max_parallel_backup_jobs(self, max_parallel_backup_jobs):
        """Sets the max_parallel_backup_jobs of this BackupServiceWhereInput.


        :param max_parallel_backup_jobs: The max_parallel_backup_jobs of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_backup_jobs: int
        """

        self._max_parallel_backup_jobs = max_parallel_backup_jobs

    @property
    def max_parallel_backup_jobs_gt(self):
        """Gets the max_parallel_backup_jobs_gt of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_backup_jobs_gt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_parallel_backup_jobs_gt

    @max_parallel_backup_jobs_gt.setter
    def max_parallel_backup_jobs_gt(self, max_parallel_backup_jobs_gt):
        """Sets the max_parallel_backup_jobs_gt of this BackupServiceWhereInput.


        :param max_parallel_backup_jobs_gt: The max_parallel_backup_jobs_gt of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_backup_jobs_gt: int
        """

        self._max_parallel_backup_jobs_gt = max_parallel_backup_jobs_gt

    @property
    def max_parallel_backup_jobs_gte(self):
        """Gets the max_parallel_backup_jobs_gte of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_backup_jobs_gte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_parallel_backup_jobs_gte

    @max_parallel_backup_jobs_gte.setter
    def max_parallel_backup_jobs_gte(self, max_parallel_backup_jobs_gte):
        """Sets the max_parallel_backup_jobs_gte of this BackupServiceWhereInput.


        :param max_parallel_backup_jobs_gte: The max_parallel_backup_jobs_gte of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_backup_jobs_gte: int
        """

        self._max_parallel_backup_jobs_gte = max_parallel_backup_jobs_gte

    @property
    def max_parallel_backup_jobs_in(self):
        """Gets the max_parallel_backup_jobs_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_backup_jobs_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._max_parallel_backup_jobs_in

    @max_parallel_backup_jobs_in.setter
    def max_parallel_backup_jobs_in(self, max_parallel_backup_jobs_in):
        """Sets the max_parallel_backup_jobs_in of this BackupServiceWhereInput.


        :param max_parallel_backup_jobs_in: The max_parallel_backup_jobs_in of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_backup_jobs_in: list[int]
        """

        self._max_parallel_backup_jobs_in = max_parallel_backup_jobs_in

    @property
    def max_parallel_backup_jobs_lt(self):
        """Gets the max_parallel_backup_jobs_lt of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_backup_jobs_lt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_parallel_backup_jobs_lt

    @max_parallel_backup_jobs_lt.setter
    def max_parallel_backup_jobs_lt(self, max_parallel_backup_jobs_lt):
        """Sets the max_parallel_backup_jobs_lt of this BackupServiceWhereInput.


        :param max_parallel_backup_jobs_lt: The max_parallel_backup_jobs_lt of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_backup_jobs_lt: int
        """

        self._max_parallel_backup_jobs_lt = max_parallel_backup_jobs_lt

    @property
    def max_parallel_backup_jobs_lte(self):
        """Gets the max_parallel_backup_jobs_lte of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_backup_jobs_lte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_parallel_backup_jobs_lte

    @max_parallel_backup_jobs_lte.setter
    def max_parallel_backup_jobs_lte(self, max_parallel_backup_jobs_lte):
        """Sets the max_parallel_backup_jobs_lte of this BackupServiceWhereInput.


        :param max_parallel_backup_jobs_lte: The max_parallel_backup_jobs_lte of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_backup_jobs_lte: int
        """

        self._max_parallel_backup_jobs_lte = max_parallel_backup_jobs_lte

    @property
    def max_parallel_backup_jobs_not(self):
        """Gets the max_parallel_backup_jobs_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_backup_jobs_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_parallel_backup_jobs_not

    @max_parallel_backup_jobs_not.setter
    def max_parallel_backup_jobs_not(self, max_parallel_backup_jobs_not):
        """Sets the max_parallel_backup_jobs_not of this BackupServiceWhereInput.


        :param max_parallel_backup_jobs_not: The max_parallel_backup_jobs_not of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_backup_jobs_not: int
        """

        self._max_parallel_backup_jobs_not = max_parallel_backup_jobs_not

    @property
    def max_parallel_backup_jobs_not_in(self):
        """Gets the max_parallel_backup_jobs_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_backup_jobs_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._max_parallel_backup_jobs_not_in

    @max_parallel_backup_jobs_not_in.setter
    def max_parallel_backup_jobs_not_in(self, max_parallel_backup_jobs_not_in):
        """Sets the max_parallel_backup_jobs_not_in of this BackupServiceWhereInput.


        :param max_parallel_backup_jobs_not_in: The max_parallel_backup_jobs_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_backup_jobs_not_in: list[int]
        """

        self._max_parallel_backup_jobs_not_in = max_parallel_backup_jobs_not_in

    @property
    def max_parallel_restore_jobs(self):
        """Gets the max_parallel_restore_jobs of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_restore_jobs of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_parallel_restore_jobs

    @max_parallel_restore_jobs.setter
    def max_parallel_restore_jobs(self, max_parallel_restore_jobs):
        """Sets the max_parallel_restore_jobs of this BackupServiceWhereInput.


        :param max_parallel_restore_jobs: The max_parallel_restore_jobs of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_restore_jobs: int
        """

        self._max_parallel_restore_jobs = max_parallel_restore_jobs

    @property
    def max_parallel_restore_jobs_gt(self):
        """Gets the max_parallel_restore_jobs_gt of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_restore_jobs_gt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_parallel_restore_jobs_gt

    @max_parallel_restore_jobs_gt.setter
    def max_parallel_restore_jobs_gt(self, max_parallel_restore_jobs_gt):
        """Sets the max_parallel_restore_jobs_gt of this BackupServiceWhereInput.


        :param max_parallel_restore_jobs_gt: The max_parallel_restore_jobs_gt of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_restore_jobs_gt: int
        """

        self._max_parallel_restore_jobs_gt = max_parallel_restore_jobs_gt

    @property
    def max_parallel_restore_jobs_gte(self):
        """Gets the max_parallel_restore_jobs_gte of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_restore_jobs_gte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_parallel_restore_jobs_gte

    @max_parallel_restore_jobs_gte.setter
    def max_parallel_restore_jobs_gte(self, max_parallel_restore_jobs_gte):
        """Sets the max_parallel_restore_jobs_gte of this BackupServiceWhereInput.


        :param max_parallel_restore_jobs_gte: The max_parallel_restore_jobs_gte of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_restore_jobs_gte: int
        """

        self._max_parallel_restore_jobs_gte = max_parallel_restore_jobs_gte

    @property
    def max_parallel_restore_jobs_in(self):
        """Gets the max_parallel_restore_jobs_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_restore_jobs_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._max_parallel_restore_jobs_in

    @max_parallel_restore_jobs_in.setter
    def max_parallel_restore_jobs_in(self, max_parallel_restore_jobs_in):
        """Sets the max_parallel_restore_jobs_in of this BackupServiceWhereInput.


        :param max_parallel_restore_jobs_in: The max_parallel_restore_jobs_in of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_restore_jobs_in: list[int]
        """

        self._max_parallel_restore_jobs_in = max_parallel_restore_jobs_in

    @property
    def max_parallel_restore_jobs_lt(self):
        """Gets the max_parallel_restore_jobs_lt of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_restore_jobs_lt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_parallel_restore_jobs_lt

    @max_parallel_restore_jobs_lt.setter
    def max_parallel_restore_jobs_lt(self, max_parallel_restore_jobs_lt):
        """Sets the max_parallel_restore_jobs_lt of this BackupServiceWhereInput.


        :param max_parallel_restore_jobs_lt: The max_parallel_restore_jobs_lt of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_restore_jobs_lt: int
        """

        self._max_parallel_restore_jobs_lt = max_parallel_restore_jobs_lt

    @property
    def max_parallel_restore_jobs_lte(self):
        """Gets the max_parallel_restore_jobs_lte of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_restore_jobs_lte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_parallel_restore_jobs_lte

    @max_parallel_restore_jobs_lte.setter
    def max_parallel_restore_jobs_lte(self, max_parallel_restore_jobs_lte):
        """Sets the max_parallel_restore_jobs_lte of this BackupServiceWhereInput.


        :param max_parallel_restore_jobs_lte: The max_parallel_restore_jobs_lte of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_restore_jobs_lte: int
        """

        self._max_parallel_restore_jobs_lte = max_parallel_restore_jobs_lte

    @property
    def max_parallel_restore_jobs_not(self):
        """Gets the max_parallel_restore_jobs_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_restore_jobs_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._max_parallel_restore_jobs_not

    @max_parallel_restore_jobs_not.setter
    def max_parallel_restore_jobs_not(self, max_parallel_restore_jobs_not):
        """Sets the max_parallel_restore_jobs_not of this BackupServiceWhereInput.


        :param max_parallel_restore_jobs_not: The max_parallel_restore_jobs_not of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_restore_jobs_not: int
        """

        self._max_parallel_restore_jobs_not = max_parallel_restore_jobs_not

    @property
    def max_parallel_restore_jobs_not_in(self):
        """Gets the max_parallel_restore_jobs_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The max_parallel_restore_jobs_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._max_parallel_restore_jobs_not_in

    @max_parallel_restore_jobs_not_in.setter
    def max_parallel_restore_jobs_not_in(self, max_parallel_restore_jobs_not_in):
        """Sets the max_parallel_restore_jobs_not_in of this BackupServiceWhereInput.


        :param max_parallel_restore_jobs_not_in: The max_parallel_restore_jobs_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type max_parallel_restore_jobs_not_in: list[int]
        """

        self._max_parallel_restore_jobs_not_in = max_parallel_restore_jobs_not_in

    @property
    def name(self):
        """Gets the name of this BackupServiceWhereInput.  # noqa: E501


        :return: The name of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BackupServiceWhereInput.


        :param name: The name of this BackupServiceWhereInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def name_contains(self):
        """Gets the name_contains of this BackupServiceWhereInput.  # noqa: E501


        :return: The name_contains of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this BackupServiceWhereInput.


        :param name_contains: The name_contains of this BackupServiceWhereInput.  # noqa: E501
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def name_ends_with(self):
        """Gets the name_ends_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The name_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_ends_with

    @name_ends_with.setter
    def name_ends_with(self, name_ends_with):
        """Sets the name_ends_with of this BackupServiceWhereInput.


        :param name_ends_with: The name_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :type name_ends_with: str
        """

        self._name_ends_with = name_ends_with

    @property
    def name_gt(self):
        """Gets the name_gt of this BackupServiceWhereInput.  # noqa: E501


        :return: The name_gt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gt

    @name_gt.setter
    def name_gt(self, name_gt):
        """Sets the name_gt of this BackupServiceWhereInput.


        :param name_gt: The name_gt of this BackupServiceWhereInput.  # noqa: E501
        :type name_gt: str
        """

        self._name_gt = name_gt

    @property
    def name_gte(self):
        """Gets the name_gte of this BackupServiceWhereInput.  # noqa: E501


        :return: The name_gte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gte

    @name_gte.setter
    def name_gte(self, name_gte):
        """Sets the name_gte of this BackupServiceWhereInput.


        :param name_gte: The name_gte of this BackupServiceWhereInput.  # noqa: E501
        :type name_gte: str
        """

        self._name_gte = name_gte

    @property
    def name_in(self):
        """Gets the name_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The name_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_in

    @name_in.setter
    def name_in(self, name_in):
        """Sets the name_in of this BackupServiceWhereInput.


        :param name_in: The name_in of this BackupServiceWhereInput.  # noqa: E501
        :type name_in: list[str]
        """

        self._name_in = name_in

    @property
    def name_lt(self):
        """Gets the name_lt of this BackupServiceWhereInput.  # noqa: E501


        :return: The name_lt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lt

    @name_lt.setter
    def name_lt(self, name_lt):
        """Sets the name_lt of this BackupServiceWhereInput.


        :param name_lt: The name_lt of this BackupServiceWhereInput.  # noqa: E501
        :type name_lt: str
        """

        self._name_lt = name_lt

    @property
    def name_lte(self):
        """Gets the name_lte of this BackupServiceWhereInput.  # noqa: E501


        :return: The name_lte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lte

    @name_lte.setter
    def name_lte(self, name_lte):
        """Sets the name_lte of this BackupServiceWhereInput.


        :param name_lte: The name_lte of this BackupServiceWhereInput.  # noqa: E501
        :type name_lte: str
        """

        self._name_lte = name_lte

    @property
    def name_not(self):
        """Gets the name_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The name_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not

    @name_not.setter
    def name_not(self, name_not):
        """Sets the name_not of this BackupServiceWhereInput.


        :param name_not: The name_not of this BackupServiceWhereInput.  # noqa: E501
        :type name_not: str
        """

        self._name_not = name_not

    @property
    def name_not_contains(self):
        """Gets the name_not_contains of this BackupServiceWhereInput.  # noqa: E501


        :return: The name_not_contains of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_contains

    @name_not_contains.setter
    def name_not_contains(self, name_not_contains):
        """Sets the name_not_contains of this BackupServiceWhereInput.


        :param name_not_contains: The name_not_contains of this BackupServiceWhereInput.  # noqa: E501
        :type name_not_contains: str
        """

        self._name_not_contains = name_not_contains

    @property
    def name_not_ends_with(self):
        """Gets the name_not_ends_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The name_not_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_ends_with

    @name_not_ends_with.setter
    def name_not_ends_with(self, name_not_ends_with):
        """Sets the name_not_ends_with of this BackupServiceWhereInput.


        :param name_not_ends_with: The name_not_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :type name_not_ends_with: str
        """

        self._name_not_ends_with = name_not_ends_with

    @property
    def name_not_in(self):
        """Gets the name_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The name_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_not_in

    @name_not_in.setter
    def name_not_in(self, name_not_in):
        """Sets the name_not_in of this BackupServiceWhereInput.


        :param name_not_in: The name_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type name_not_in: list[str]
        """

        self._name_not_in = name_not_in

    @property
    def name_not_starts_with(self):
        """Gets the name_not_starts_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The name_not_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_starts_with

    @name_not_starts_with.setter
    def name_not_starts_with(self, name_not_starts_with):
        """Sets the name_not_starts_with of this BackupServiceWhereInput.


        :param name_not_starts_with: The name_not_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :type name_not_starts_with: str
        """

        self._name_not_starts_with = name_not_starts_with

    @property
    def name_starts_with(self):
        """Gets the name_starts_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The name_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_starts_with

    @name_starts_with.setter
    def name_starts_with(self, name_starts_with):
        """Sets the name_starts_with of this BackupServiceWhereInput.


        :param name_starts_with: The name_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :type name_starts_with: str
        """

        self._name_starts_with = name_starts_with

    @property
    def _not(self):
        """Gets the _not of this BackupServiceWhereInput.  # noqa: E501


        :return: The _not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[BackupServiceWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this BackupServiceWhereInput.


        :param _not: The _not of this BackupServiceWhereInput.  # noqa: E501
        :type _not: list[BackupServiceWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this BackupServiceWhereInput.  # noqa: E501


        :return: The _or of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[BackupServiceWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this BackupServiceWhereInput.


        :param _or: The _or of this BackupServiceWhereInput.  # noqa: E501
        :type _or: list[BackupServiceWhereInput]
        """

        self.__or = _or

    @property
    def resource_version_gt(self):
        """Gets the resource_version_gt of this BackupServiceWhereInput.  # noqa: E501


        :return: The resource_version_gt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._resource_version_gt

    @resource_version_gt.setter
    def resource_version_gt(self, resource_version_gt):
        """Sets the resource_version_gt of this BackupServiceWhereInput.


        :param resource_version_gt: The resource_version_gt of this BackupServiceWhereInput.  # noqa: E501
        :type resource_version_gt: int
        """

        self._resource_version_gt = resource_version_gt

    @property
    def resource_version_gte(self):
        """Gets the resource_version_gte of this BackupServiceWhereInput.  # noqa: E501


        :return: The resource_version_gte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._resource_version_gte

    @resource_version_gte.setter
    def resource_version_gte(self, resource_version_gte):
        """Sets the resource_version_gte of this BackupServiceWhereInput.


        :param resource_version_gte: The resource_version_gte of this BackupServiceWhereInput.  # noqa: E501
        :type resource_version_gte: int
        """

        self._resource_version_gte = resource_version_gte

    @property
    def resource_version_in(self):
        """Gets the resource_version_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The resource_version_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._resource_version_in

    @resource_version_in.setter
    def resource_version_in(self, resource_version_in):
        """Sets the resource_version_in of this BackupServiceWhereInput.


        :param resource_version_in: The resource_version_in of this BackupServiceWhereInput.  # noqa: E501
        :type resource_version_in: list[int]
        """

        self._resource_version_in = resource_version_in

    @property
    def resource_version_lt(self):
        """Gets the resource_version_lt of this BackupServiceWhereInput.  # noqa: E501


        :return: The resource_version_lt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._resource_version_lt

    @resource_version_lt.setter
    def resource_version_lt(self, resource_version_lt):
        """Sets the resource_version_lt of this BackupServiceWhereInput.


        :param resource_version_lt: The resource_version_lt of this BackupServiceWhereInput.  # noqa: E501
        :type resource_version_lt: int
        """

        self._resource_version_lt = resource_version_lt

    @property
    def resource_version_lte(self):
        """Gets the resource_version_lte of this BackupServiceWhereInput.  # noqa: E501


        :return: The resource_version_lte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._resource_version_lte

    @resource_version_lte.setter
    def resource_version_lte(self, resource_version_lte):
        """Sets the resource_version_lte of this BackupServiceWhereInput.


        :param resource_version_lte: The resource_version_lte of this BackupServiceWhereInput.  # noqa: E501
        :type resource_version_lte: int
        """

        self._resource_version_lte = resource_version_lte

    @property
    def resource_version_not(self):
        """Gets the resource_version_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The resource_version_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._resource_version_not

    @resource_version_not.setter
    def resource_version_not(self, resource_version_not):
        """Sets the resource_version_not of this BackupServiceWhereInput.


        :param resource_version_not: The resource_version_not of this BackupServiceWhereInput.  # noqa: E501
        :type resource_version_not: int
        """

        self._resource_version_not = resource_version_not

    @property
    def resource_version_not_in(self):
        """Gets the resource_version_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The resource_version_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._resource_version_not_in

    @resource_version_not_in.setter
    def resource_version_not_in(self, resource_version_not_in):
        """Sets the resource_version_not_in of this BackupServiceWhereInput.


        :param resource_version_not_in: The resource_version_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type resource_version_not_in: list[int]
        """

        self._resource_version_not_in = resource_version_not_in

    @property
    def retry_interval(self):
        """Gets the retry_interval of this BackupServiceWhereInput.  # noqa: E501


        :return: The retry_interval of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._retry_interval

    @retry_interval.setter
    def retry_interval(self, retry_interval):
        """Sets the retry_interval of this BackupServiceWhereInput.


        :param retry_interval: The retry_interval of this BackupServiceWhereInput.  # noqa: E501
        :type retry_interval: int
        """

        self._retry_interval = retry_interval

    @property
    def retry_interval_gt(self):
        """Gets the retry_interval_gt of this BackupServiceWhereInput.  # noqa: E501


        :return: The retry_interval_gt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._retry_interval_gt

    @retry_interval_gt.setter
    def retry_interval_gt(self, retry_interval_gt):
        """Sets the retry_interval_gt of this BackupServiceWhereInput.


        :param retry_interval_gt: The retry_interval_gt of this BackupServiceWhereInput.  # noqa: E501
        :type retry_interval_gt: int
        """

        self._retry_interval_gt = retry_interval_gt

    @property
    def retry_interval_gte(self):
        """Gets the retry_interval_gte of this BackupServiceWhereInput.  # noqa: E501


        :return: The retry_interval_gte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._retry_interval_gte

    @retry_interval_gte.setter
    def retry_interval_gte(self, retry_interval_gte):
        """Sets the retry_interval_gte of this BackupServiceWhereInput.


        :param retry_interval_gte: The retry_interval_gte of this BackupServiceWhereInput.  # noqa: E501
        :type retry_interval_gte: int
        """

        self._retry_interval_gte = retry_interval_gte

    @property
    def retry_interval_in(self):
        """Gets the retry_interval_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The retry_interval_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._retry_interval_in

    @retry_interval_in.setter
    def retry_interval_in(self, retry_interval_in):
        """Sets the retry_interval_in of this BackupServiceWhereInput.


        :param retry_interval_in: The retry_interval_in of this BackupServiceWhereInput.  # noqa: E501
        :type retry_interval_in: list[int]
        """

        self._retry_interval_in = retry_interval_in

    @property
    def retry_interval_lt(self):
        """Gets the retry_interval_lt of this BackupServiceWhereInput.  # noqa: E501


        :return: The retry_interval_lt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._retry_interval_lt

    @retry_interval_lt.setter
    def retry_interval_lt(self, retry_interval_lt):
        """Sets the retry_interval_lt of this BackupServiceWhereInput.


        :param retry_interval_lt: The retry_interval_lt of this BackupServiceWhereInput.  # noqa: E501
        :type retry_interval_lt: int
        """

        self._retry_interval_lt = retry_interval_lt

    @property
    def retry_interval_lte(self):
        """Gets the retry_interval_lte of this BackupServiceWhereInput.  # noqa: E501


        :return: The retry_interval_lte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._retry_interval_lte

    @retry_interval_lte.setter
    def retry_interval_lte(self, retry_interval_lte):
        """Sets the retry_interval_lte of this BackupServiceWhereInput.


        :param retry_interval_lte: The retry_interval_lte of this BackupServiceWhereInput.  # noqa: E501
        :type retry_interval_lte: int
        """

        self._retry_interval_lte = retry_interval_lte

    @property
    def retry_interval_not(self):
        """Gets the retry_interval_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The retry_interval_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: int
        """
        return self._retry_interval_not

    @retry_interval_not.setter
    def retry_interval_not(self, retry_interval_not):
        """Sets the retry_interval_not of this BackupServiceWhereInput.


        :param retry_interval_not: The retry_interval_not of this BackupServiceWhereInput.  # noqa: E501
        :type retry_interval_not: int
        """

        self._retry_interval_not = retry_interval_not

    @property
    def retry_interval_not_in(self):
        """Gets the retry_interval_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The retry_interval_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[int]
        """
        return self._retry_interval_not_in

    @retry_interval_not_in.setter
    def retry_interval_not_in(self, retry_interval_not_in):
        """Sets the retry_interval_not_in of this BackupServiceWhereInput.


        :param retry_interval_not_in: The retry_interval_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type retry_interval_not_in: list[int]
        """

        self._retry_interval_not_in = retry_interval_not_in

    @property
    def running_vm(self):
        """Gets the running_vm of this BackupServiceWhereInput.  # noqa: E501


        :return: The running_vm of this BackupServiceWhereInput.  # noqa: E501
        :rtype: VmWhereInput
        """
        return self._running_vm

    @running_vm.setter
    def running_vm(self, running_vm):
        """Sets the running_vm of this BackupServiceWhereInput.


        :param running_vm: The running_vm of this BackupServiceWhereInput.  # noqa: E501
        :type running_vm: VmWhereInput
        """

        self._running_vm = running_vm

    @property
    def status(self):
        """Gets the status of this BackupServiceWhereInput.  # noqa: E501


        :return: The status of this BackupServiceWhereInput.  # noqa: E501
        :rtype: BackupServiceStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BackupServiceWhereInput.


        :param status: The status of this BackupServiceWhereInput.  # noqa: E501
        :type status: BackupServiceStatus
        """

        self._status = status

    @property
    def status_in(self):
        """Gets the status_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The status_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[BackupServiceStatus]
        """
        return self._status_in

    @status_in.setter
    def status_in(self, status_in):
        """Sets the status_in of this BackupServiceWhereInput.


        :param status_in: The status_in of this BackupServiceWhereInput.  # noqa: E501
        :type status_in: list[BackupServiceStatus]
        """

        self._status_in = status_in

    @property
    def status_not(self):
        """Gets the status_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The status_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: BackupServiceStatus
        """
        return self._status_not

    @status_not.setter
    def status_not(self, status_not):
        """Sets the status_not of this BackupServiceWhereInput.


        :param status_not: The status_not of this BackupServiceWhereInput.  # noqa: E501
        :type status_not: BackupServiceStatus
        """

        self._status_not = status_not

    @property
    def status_not_in(self):
        """Gets the status_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The status_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[BackupServiceStatus]
        """
        return self._status_not_in

    @status_not_in.setter
    def status_not_in(self, status_not_in):
        """Sets the status_not_in of this BackupServiceWhereInput.


        :param status_not_in: The status_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type status_not_in: list[BackupServiceStatus]
        """

        self._status_not_in = status_not_in

    @property
    def subnet_mask(self):
        """Gets the subnet_mask of this BackupServiceWhereInput.  # noqa: E501


        :return: The subnet_mask of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask

    @subnet_mask.setter
    def subnet_mask(self, subnet_mask):
        """Sets the subnet_mask of this BackupServiceWhereInput.


        :param subnet_mask: The subnet_mask of this BackupServiceWhereInput.  # noqa: E501
        :type subnet_mask: str
        """

        self._subnet_mask = subnet_mask

    @property
    def subnet_mask_contains(self):
        """Gets the subnet_mask_contains of this BackupServiceWhereInput.  # noqa: E501


        :return: The subnet_mask_contains of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_contains

    @subnet_mask_contains.setter
    def subnet_mask_contains(self, subnet_mask_contains):
        """Sets the subnet_mask_contains of this BackupServiceWhereInput.


        :param subnet_mask_contains: The subnet_mask_contains of this BackupServiceWhereInput.  # noqa: E501
        :type subnet_mask_contains: str
        """

        self._subnet_mask_contains = subnet_mask_contains

    @property
    def subnet_mask_ends_with(self):
        """Gets the subnet_mask_ends_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The subnet_mask_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_ends_with

    @subnet_mask_ends_with.setter
    def subnet_mask_ends_with(self, subnet_mask_ends_with):
        """Sets the subnet_mask_ends_with of this BackupServiceWhereInput.


        :param subnet_mask_ends_with: The subnet_mask_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :type subnet_mask_ends_with: str
        """

        self._subnet_mask_ends_with = subnet_mask_ends_with

    @property
    def subnet_mask_gt(self):
        """Gets the subnet_mask_gt of this BackupServiceWhereInput.  # noqa: E501


        :return: The subnet_mask_gt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_gt

    @subnet_mask_gt.setter
    def subnet_mask_gt(self, subnet_mask_gt):
        """Sets the subnet_mask_gt of this BackupServiceWhereInput.


        :param subnet_mask_gt: The subnet_mask_gt of this BackupServiceWhereInput.  # noqa: E501
        :type subnet_mask_gt: str
        """

        self._subnet_mask_gt = subnet_mask_gt

    @property
    def subnet_mask_gte(self):
        """Gets the subnet_mask_gte of this BackupServiceWhereInput.  # noqa: E501


        :return: The subnet_mask_gte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_gte

    @subnet_mask_gte.setter
    def subnet_mask_gte(self, subnet_mask_gte):
        """Sets the subnet_mask_gte of this BackupServiceWhereInput.


        :param subnet_mask_gte: The subnet_mask_gte of this BackupServiceWhereInput.  # noqa: E501
        :type subnet_mask_gte: str
        """

        self._subnet_mask_gte = subnet_mask_gte

    @property
    def subnet_mask_in(self):
        """Gets the subnet_mask_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The subnet_mask_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._subnet_mask_in

    @subnet_mask_in.setter
    def subnet_mask_in(self, subnet_mask_in):
        """Sets the subnet_mask_in of this BackupServiceWhereInput.


        :param subnet_mask_in: The subnet_mask_in of this BackupServiceWhereInput.  # noqa: E501
        :type subnet_mask_in: list[str]
        """

        self._subnet_mask_in = subnet_mask_in

    @property
    def subnet_mask_lt(self):
        """Gets the subnet_mask_lt of this BackupServiceWhereInput.  # noqa: E501


        :return: The subnet_mask_lt of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_lt

    @subnet_mask_lt.setter
    def subnet_mask_lt(self, subnet_mask_lt):
        """Sets the subnet_mask_lt of this BackupServiceWhereInput.


        :param subnet_mask_lt: The subnet_mask_lt of this BackupServiceWhereInput.  # noqa: E501
        :type subnet_mask_lt: str
        """

        self._subnet_mask_lt = subnet_mask_lt

    @property
    def subnet_mask_lte(self):
        """Gets the subnet_mask_lte of this BackupServiceWhereInput.  # noqa: E501


        :return: The subnet_mask_lte of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_lte

    @subnet_mask_lte.setter
    def subnet_mask_lte(self, subnet_mask_lte):
        """Sets the subnet_mask_lte of this BackupServiceWhereInput.


        :param subnet_mask_lte: The subnet_mask_lte of this BackupServiceWhereInput.  # noqa: E501
        :type subnet_mask_lte: str
        """

        self._subnet_mask_lte = subnet_mask_lte

    @property
    def subnet_mask_not(self):
        """Gets the subnet_mask_not of this BackupServiceWhereInput.  # noqa: E501


        :return: The subnet_mask_not of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_not

    @subnet_mask_not.setter
    def subnet_mask_not(self, subnet_mask_not):
        """Sets the subnet_mask_not of this BackupServiceWhereInput.


        :param subnet_mask_not: The subnet_mask_not of this BackupServiceWhereInput.  # noqa: E501
        :type subnet_mask_not: str
        """

        self._subnet_mask_not = subnet_mask_not

    @property
    def subnet_mask_not_contains(self):
        """Gets the subnet_mask_not_contains of this BackupServiceWhereInput.  # noqa: E501


        :return: The subnet_mask_not_contains of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_not_contains

    @subnet_mask_not_contains.setter
    def subnet_mask_not_contains(self, subnet_mask_not_contains):
        """Sets the subnet_mask_not_contains of this BackupServiceWhereInput.


        :param subnet_mask_not_contains: The subnet_mask_not_contains of this BackupServiceWhereInput.  # noqa: E501
        :type subnet_mask_not_contains: str
        """

        self._subnet_mask_not_contains = subnet_mask_not_contains

    @property
    def subnet_mask_not_ends_with(self):
        """Gets the subnet_mask_not_ends_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The subnet_mask_not_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_not_ends_with

    @subnet_mask_not_ends_with.setter
    def subnet_mask_not_ends_with(self, subnet_mask_not_ends_with):
        """Sets the subnet_mask_not_ends_with of this BackupServiceWhereInput.


        :param subnet_mask_not_ends_with: The subnet_mask_not_ends_with of this BackupServiceWhereInput.  # noqa: E501
        :type subnet_mask_not_ends_with: str
        """

        self._subnet_mask_not_ends_with = subnet_mask_not_ends_with

    @property
    def subnet_mask_not_in(self):
        """Gets the subnet_mask_not_in of this BackupServiceWhereInput.  # noqa: E501


        :return: The subnet_mask_not_in of this BackupServiceWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._subnet_mask_not_in

    @subnet_mask_not_in.setter
    def subnet_mask_not_in(self, subnet_mask_not_in):
        """Sets the subnet_mask_not_in of this BackupServiceWhereInput.


        :param subnet_mask_not_in: The subnet_mask_not_in of this BackupServiceWhereInput.  # noqa: E501
        :type subnet_mask_not_in: list[str]
        """

        self._subnet_mask_not_in = subnet_mask_not_in

    @property
    def subnet_mask_not_starts_with(self):
        """Gets the subnet_mask_not_starts_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The subnet_mask_not_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_not_starts_with

    @subnet_mask_not_starts_with.setter
    def subnet_mask_not_starts_with(self, subnet_mask_not_starts_with):
        """Sets the subnet_mask_not_starts_with of this BackupServiceWhereInput.


        :param subnet_mask_not_starts_with: The subnet_mask_not_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :type subnet_mask_not_starts_with: str
        """

        self._subnet_mask_not_starts_with = subnet_mask_not_starts_with

    @property
    def subnet_mask_starts_with(self):
        """Gets the subnet_mask_starts_with of this BackupServiceWhereInput.  # noqa: E501


        :return: The subnet_mask_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_starts_with

    @subnet_mask_starts_with.setter
    def subnet_mask_starts_with(self, subnet_mask_starts_with):
        """Sets the subnet_mask_starts_with of this BackupServiceWhereInput.


        :param subnet_mask_starts_with: The subnet_mask_starts_with of this BackupServiceWhereInput.  # noqa: E501
        :type subnet_mask_starts_with: str
        """

        self._subnet_mask_starts_with = subnet_mask_starts_with

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BackupServiceWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, BackupServiceWhereInput):
            return True

        return self.to_dict() != other.to_dict()
