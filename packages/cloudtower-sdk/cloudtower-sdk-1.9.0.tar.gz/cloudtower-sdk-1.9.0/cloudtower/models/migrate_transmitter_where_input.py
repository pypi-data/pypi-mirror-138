# coding: utf-8

"""
    CloudTower APIs

    cloudtower operation API and SDK  # noqa: E501

    The version of the OpenAPI document: 1.9.0
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class MigrateTransmitterWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[MigrateTransmitterWhereInput]',
        'created_at': 'str',
        'created_at_gt': 'str',
        'created_at_gte': 'str',
        'created_at_in': 'list[str]',
        'created_at_lt': 'str',
        'created_at_lte': 'str',
        'created_at_not': 'str',
        'created_at_not_in': 'list[str]',
        'entity_async_status': 'EntityAsyncStatus',
        'entity_async_status_in': 'list[EntityAsyncStatus]',
        'entity_async_status_not': 'EntityAsyncStatus',
        'entity_async_status_not_in': 'list[EntityAsyncStatus]',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'ip': 'str',
        'ip_contains': 'str',
        'ip_ends_with': 'str',
        'ip_gt': 'str',
        'ip_gte': 'str',
        'ip_in': 'list[str]',
        'ip_lt': 'str',
        'ip_lte': 'str',
        'ip_not': 'str',
        'ip_not_contains': 'str',
        'ip_not_ends_with': 'str',
        'ip_not_in': 'list[str]',
        'ip_not_starts_with': 'str',
        'ip_starts_with': 'str',
        'name': 'str',
        'name_contains': 'str',
        'name_ends_with': 'str',
        'name_gt': 'str',
        'name_gte': 'str',
        'name_in': 'list[str]',
        'name_lt': 'str',
        'name_lte': 'str',
        'name_not': 'str',
        'name_not_contains': 'str',
        'name_not_ends_with': 'str',
        'name_not_in': 'list[str]',
        'name_not_starts_with': 'str',
        'name_starts_with': 'str',
        '_not': 'list[MigrateTransmitterWhereInput]',
        '_or': 'list[MigrateTransmitterWhereInput]',
        'password': 'str',
        'password_contains': 'str',
        'password_ends_with': 'str',
        'password_gt': 'str',
        'password_gte': 'str',
        'password_in': 'list[str]',
        'password_lt': 'str',
        'password_lte': 'str',
        'password_not': 'str',
        'password_not_contains': 'str',
        'password_not_ends_with': 'str',
        'password_not_in': 'list[str]',
        'password_not_starts_with': 'str',
        'password_starts_with': 'str',
        'username': 'str',
        'username_contains': 'str',
        'username_ends_with': 'str',
        'username_gt': 'str',
        'username_gte': 'str',
        'username_in': 'list[str]',
        'username_lt': 'str',
        'username_lte': 'str',
        'username_not': 'str',
        'username_not_contains': 'str',
        'username_not_ends_with': 'str',
        'username_not_in': 'list[str]',
        'username_not_starts_with': 'str',
        'username_starts_with': 'str'
    }

    attribute_map = {
        '_and': 'AND',
        'created_at': 'createdAt',
        'created_at_gt': 'createdAt_gt',
        'created_at_gte': 'createdAt_gte',
        'created_at_in': 'createdAt_in',
        'created_at_lt': 'createdAt_lt',
        'created_at_lte': 'createdAt_lte',
        'created_at_not': 'createdAt_not',
        'created_at_not_in': 'createdAt_not_in',
        'entity_async_status': 'entityAsyncStatus',
        'entity_async_status_in': 'entityAsyncStatus_in',
        'entity_async_status_not': 'entityAsyncStatus_not',
        'entity_async_status_not_in': 'entityAsyncStatus_not_in',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'ip': 'ip',
        'ip_contains': 'ip_contains',
        'ip_ends_with': 'ip_ends_with',
        'ip_gt': 'ip_gt',
        'ip_gte': 'ip_gte',
        'ip_in': 'ip_in',
        'ip_lt': 'ip_lt',
        'ip_lte': 'ip_lte',
        'ip_not': 'ip_not',
        'ip_not_contains': 'ip_not_contains',
        'ip_not_ends_with': 'ip_not_ends_with',
        'ip_not_in': 'ip_not_in',
        'ip_not_starts_with': 'ip_not_starts_with',
        'ip_starts_with': 'ip_starts_with',
        'name': 'name',
        'name_contains': 'name_contains',
        'name_ends_with': 'name_ends_with',
        'name_gt': 'name_gt',
        'name_gte': 'name_gte',
        'name_in': 'name_in',
        'name_lt': 'name_lt',
        'name_lte': 'name_lte',
        'name_not': 'name_not',
        'name_not_contains': 'name_not_contains',
        'name_not_ends_with': 'name_not_ends_with',
        'name_not_in': 'name_not_in',
        'name_not_starts_with': 'name_not_starts_with',
        'name_starts_with': 'name_starts_with',
        '_not': 'NOT',
        '_or': 'OR',
        'password': 'password',
        'password_contains': 'password_contains',
        'password_ends_with': 'password_ends_with',
        'password_gt': 'password_gt',
        'password_gte': 'password_gte',
        'password_in': 'password_in',
        'password_lt': 'password_lt',
        'password_lte': 'password_lte',
        'password_not': 'password_not',
        'password_not_contains': 'password_not_contains',
        'password_not_ends_with': 'password_not_ends_with',
        'password_not_in': 'password_not_in',
        'password_not_starts_with': 'password_not_starts_with',
        'password_starts_with': 'password_starts_with',
        'username': 'username',
        'username_contains': 'username_contains',
        'username_ends_with': 'username_ends_with',
        'username_gt': 'username_gt',
        'username_gte': 'username_gte',
        'username_in': 'username_in',
        'username_lt': 'username_lt',
        'username_lte': 'username_lte',
        'username_not': 'username_not',
        'username_not_contains': 'username_not_contains',
        'username_not_ends_with': 'username_not_ends_with',
        'username_not_in': 'username_not_in',
        'username_not_starts_with': 'username_not_starts_with',
        'username_starts_with': 'username_starts_with'
    }

    def __init__(self, _and=None, created_at=None, created_at_gt=None, created_at_gte=None, created_at_in=None, created_at_lt=None, created_at_lte=None, created_at_not=None, created_at_not_in=None, entity_async_status=None, entity_async_status_in=None, entity_async_status_not=None, entity_async_status_not_in=None, id=None, id_contains=None, id_ends_with=None, id_gt=None, id_gte=None, id_in=None, id_lt=None, id_lte=None, id_not=None, id_not_contains=None, id_not_ends_with=None, id_not_in=None, id_not_starts_with=None, id_starts_with=None, ip=None, ip_contains=None, ip_ends_with=None, ip_gt=None, ip_gte=None, ip_in=None, ip_lt=None, ip_lte=None, ip_not=None, ip_not_contains=None, ip_not_ends_with=None, ip_not_in=None, ip_not_starts_with=None, ip_starts_with=None, name=None, name_contains=None, name_ends_with=None, name_gt=None, name_gte=None, name_in=None, name_lt=None, name_lte=None, name_not=None, name_not_contains=None, name_not_ends_with=None, name_not_in=None, name_not_starts_with=None, name_starts_with=None, _not=None, _or=None, password=None, password_contains=None, password_ends_with=None, password_gt=None, password_gte=None, password_in=None, password_lt=None, password_lte=None, password_not=None, password_not_contains=None, password_not_ends_with=None, password_not_in=None, password_not_starts_with=None, password_starts_with=None, username=None, username_contains=None, username_ends_with=None, username_gt=None, username_gte=None, username_in=None, username_lt=None, username_lte=None, username_not=None, username_not_contains=None, username_not_ends_with=None, username_not_in=None, username_not_starts_with=None, username_starts_with=None, local_vars_configuration=None):  # noqa: E501
        """MigrateTransmitterWhereInput - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self.__and = None
        self._created_at = None
        self._created_at_gt = None
        self._created_at_gte = None
        self._created_at_in = None
        self._created_at_lt = None
        self._created_at_lte = None
        self._created_at_not = None
        self._created_at_not_in = None
        self._entity_async_status = None
        self._entity_async_status_in = None
        self._entity_async_status_not = None
        self._entity_async_status_not_in = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._ip = None
        self._ip_contains = None
        self._ip_ends_with = None
        self._ip_gt = None
        self._ip_gte = None
        self._ip_in = None
        self._ip_lt = None
        self._ip_lte = None
        self._ip_not = None
        self._ip_not_contains = None
        self._ip_not_ends_with = None
        self._ip_not_in = None
        self._ip_not_starts_with = None
        self._ip_starts_with = None
        self._name = None
        self._name_contains = None
        self._name_ends_with = None
        self._name_gt = None
        self._name_gte = None
        self._name_in = None
        self._name_lt = None
        self._name_lte = None
        self._name_not = None
        self._name_not_contains = None
        self._name_not_ends_with = None
        self._name_not_in = None
        self._name_not_starts_with = None
        self._name_starts_with = None
        self.__not = None
        self.__or = None
        self._password = None
        self._password_contains = None
        self._password_ends_with = None
        self._password_gt = None
        self._password_gte = None
        self._password_in = None
        self._password_lt = None
        self._password_lte = None
        self._password_not = None
        self._password_not_contains = None
        self._password_not_ends_with = None
        self._password_not_in = None
        self._password_not_starts_with = None
        self._password_starts_with = None
        self._username = None
        self._username_contains = None
        self._username_ends_with = None
        self._username_gt = None
        self._username_gte = None
        self._username_in = None
        self._username_lt = None
        self._username_lte = None
        self._username_not = None
        self._username_not_contains = None
        self._username_not_ends_with = None
        self._username_not_in = None
        self._username_not_starts_with = None
        self._username_starts_with = None
        self.discriminator = None

        self._and = _and
        self.created_at = created_at
        self.created_at_gt = created_at_gt
        self.created_at_gte = created_at_gte
        self.created_at_in = created_at_in
        self.created_at_lt = created_at_lt
        self.created_at_lte = created_at_lte
        self.created_at_not = created_at_not
        self.created_at_not_in = created_at_not_in
        self.entity_async_status = entity_async_status
        self.entity_async_status_in = entity_async_status_in
        self.entity_async_status_not = entity_async_status_not
        self.entity_async_status_not_in = entity_async_status_not_in
        self.id = id
        self.id_contains = id_contains
        self.id_ends_with = id_ends_with
        self.id_gt = id_gt
        self.id_gte = id_gte
        self.id_in = id_in
        self.id_lt = id_lt
        self.id_lte = id_lte
        self.id_not = id_not
        self.id_not_contains = id_not_contains
        self.id_not_ends_with = id_not_ends_with
        self.id_not_in = id_not_in
        self.id_not_starts_with = id_not_starts_with
        self.id_starts_with = id_starts_with
        self.ip = ip
        self.ip_contains = ip_contains
        self.ip_ends_with = ip_ends_with
        self.ip_gt = ip_gt
        self.ip_gte = ip_gte
        self.ip_in = ip_in
        self.ip_lt = ip_lt
        self.ip_lte = ip_lte
        self.ip_not = ip_not
        self.ip_not_contains = ip_not_contains
        self.ip_not_ends_with = ip_not_ends_with
        self.ip_not_in = ip_not_in
        self.ip_not_starts_with = ip_not_starts_with
        self.ip_starts_with = ip_starts_with
        self.name = name
        self.name_contains = name_contains
        self.name_ends_with = name_ends_with
        self.name_gt = name_gt
        self.name_gte = name_gte
        self.name_in = name_in
        self.name_lt = name_lt
        self.name_lte = name_lte
        self.name_not = name_not
        self.name_not_contains = name_not_contains
        self.name_not_ends_with = name_not_ends_with
        self.name_not_in = name_not_in
        self.name_not_starts_with = name_not_starts_with
        self.name_starts_with = name_starts_with
        self._not = _not
        self._or = _or
        self.password = password
        self.password_contains = password_contains
        self.password_ends_with = password_ends_with
        self.password_gt = password_gt
        self.password_gte = password_gte
        self.password_in = password_in
        self.password_lt = password_lt
        self.password_lte = password_lte
        self.password_not = password_not
        self.password_not_contains = password_not_contains
        self.password_not_ends_with = password_not_ends_with
        self.password_not_in = password_not_in
        self.password_not_starts_with = password_not_starts_with
        self.password_starts_with = password_starts_with
        self.username = username
        self.username_contains = username_contains
        self.username_ends_with = username_ends_with
        self.username_gt = username_gt
        self.username_gte = username_gte
        self.username_in = username_in
        self.username_lt = username_lt
        self.username_lte = username_lte
        self.username_not = username_not
        self.username_not_contains = username_not_contains
        self.username_not_ends_with = username_not_ends_with
        self.username_not_in = username_not_in
        self.username_not_starts_with = username_not_starts_with
        self.username_starts_with = username_starts_with

    @property
    def _and(self):
        """Gets the _and of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The _and of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[MigrateTransmitterWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this MigrateTransmitterWhereInput.


        :param _and: The _and of this MigrateTransmitterWhereInput.  # noqa: E501
        :type _and: list[MigrateTransmitterWhereInput]
        """

        self.__and = _and

    @property
    def created_at(self):
        """Gets the created_at of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The created_at of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this MigrateTransmitterWhereInput.


        :param created_at: The created_at of this MigrateTransmitterWhereInput.  # noqa: E501
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def created_at_gt(self):
        """Gets the created_at_gt of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The created_at_gt of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_gt

    @created_at_gt.setter
    def created_at_gt(self, created_at_gt):
        """Sets the created_at_gt of this MigrateTransmitterWhereInput.


        :param created_at_gt: The created_at_gt of this MigrateTransmitterWhereInput.  # noqa: E501
        :type created_at_gt: str
        """

        self._created_at_gt = created_at_gt

    @property
    def created_at_gte(self):
        """Gets the created_at_gte of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The created_at_gte of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_gte

    @created_at_gte.setter
    def created_at_gte(self, created_at_gte):
        """Sets the created_at_gte of this MigrateTransmitterWhereInput.


        :param created_at_gte: The created_at_gte of this MigrateTransmitterWhereInput.  # noqa: E501
        :type created_at_gte: str
        """

        self._created_at_gte = created_at_gte

    @property
    def created_at_in(self):
        """Gets the created_at_in of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The created_at_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._created_at_in

    @created_at_in.setter
    def created_at_in(self, created_at_in):
        """Sets the created_at_in of this MigrateTransmitterWhereInput.


        :param created_at_in: The created_at_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :type created_at_in: list[str]
        """

        self._created_at_in = created_at_in

    @property
    def created_at_lt(self):
        """Gets the created_at_lt of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The created_at_lt of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_lt

    @created_at_lt.setter
    def created_at_lt(self, created_at_lt):
        """Sets the created_at_lt of this MigrateTransmitterWhereInput.


        :param created_at_lt: The created_at_lt of this MigrateTransmitterWhereInput.  # noqa: E501
        :type created_at_lt: str
        """

        self._created_at_lt = created_at_lt

    @property
    def created_at_lte(self):
        """Gets the created_at_lte of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The created_at_lte of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_lte

    @created_at_lte.setter
    def created_at_lte(self, created_at_lte):
        """Sets the created_at_lte of this MigrateTransmitterWhereInput.


        :param created_at_lte: The created_at_lte of this MigrateTransmitterWhereInput.  # noqa: E501
        :type created_at_lte: str
        """

        self._created_at_lte = created_at_lte

    @property
    def created_at_not(self):
        """Gets the created_at_not of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The created_at_not of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._created_at_not

    @created_at_not.setter
    def created_at_not(self, created_at_not):
        """Sets the created_at_not of this MigrateTransmitterWhereInput.


        :param created_at_not: The created_at_not of this MigrateTransmitterWhereInput.  # noqa: E501
        :type created_at_not: str
        """

        self._created_at_not = created_at_not

    @property
    def created_at_not_in(self):
        """Gets the created_at_not_in of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The created_at_not_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._created_at_not_in

    @created_at_not_in.setter
    def created_at_not_in(self, created_at_not_in):
        """Sets the created_at_not_in of this MigrateTransmitterWhereInput.


        :param created_at_not_in: The created_at_not_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :type created_at_not_in: list[str]
        """

        self._created_at_not_in = created_at_not_in

    @property
    def entity_async_status(self):
        """Gets the entity_async_status of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The entity_async_status of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status

    @entity_async_status.setter
    def entity_async_status(self, entity_async_status):
        """Sets the entity_async_status of this MigrateTransmitterWhereInput.


        :param entity_async_status: The entity_async_status of this MigrateTransmitterWhereInput.  # noqa: E501
        :type entity_async_status: EntityAsyncStatus
        """

        self._entity_async_status = entity_async_status

    @property
    def entity_async_status_in(self):
        """Gets the entity_async_status_in of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The entity_async_status_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_in

    @entity_async_status_in.setter
    def entity_async_status_in(self, entity_async_status_in):
        """Sets the entity_async_status_in of this MigrateTransmitterWhereInput.


        :param entity_async_status_in: The entity_async_status_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :type entity_async_status_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_in = entity_async_status_in

    @property
    def entity_async_status_not(self):
        """Gets the entity_async_status_not of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The entity_async_status_not of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status_not

    @entity_async_status_not.setter
    def entity_async_status_not(self, entity_async_status_not):
        """Sets the entity_async_status_not of this MigrateTransmitterWhereInput.


        :param entity_async_status_not: The entity_async_status_not of this MigrateTransmitterWhereInput.  # noqa: E501
        :type entity_async_status_not: EntityAsyncStatus
        """

        self._entity_async_status_not = entity_async_status_not

    @property
    def entity_async_status_not_in(self):
        """Gets the entity_async_status_not_in of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The entity_async_status_not_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_not_in

    @entity_async_status_not_in.setter
    def entity_async_status_not_in(self, entity_async_status_not_in):
        """Sets the entity_async_status_not_in of this MigrateTransmitterWhereInput.


        :param entity_async_status_not_in: The entity_async_status_not_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :type entity_async_status_not_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_not_in = entity_async_status_not_in

    @property
    def id(self):
        """Gets the id of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The id of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MigrateTransmitterWhereInput.


        :param id: The id of this MigrateTransmitterWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The id_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this MigrateTransmitterWhereInput.


        :param id_contains: The id_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The id_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this MigrateTransmitterWhereInput.


        :param id_ends_with: The id_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The id_gt of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this MigrateTransmitterWhereInput.


        :param id_gt: The id_gt of this MigrateTransmitterWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The id_gte of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this MigrateTransmitterWhereInput.


        :param id_gte: The id_gte of this MigrateTransmitterWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The id_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this MigrateTransmitterWhereInput.


        :param id_in: The id_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The id_lt of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this MigrateTransmitterWhereInput.


        :param id_lt: The id_lt of this MigrateTransmitterWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The id_lte of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this MigrateTransmitterWhereInput.


        :param id_lte: The id_lte of this MigrateTransmitterWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The id_not of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this MigrateTransmitterWhereInput.


        :param id_not: The id_not of this MigrateTransmitterWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The id_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this MigrateTransmitterWhereInput.


        :param id_not_contains: The id_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this MigrateTransmitterWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The id_not_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this MigrateTransmitterWhereInput.


        :param id_not_in: The id_not_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this MigrateTransmitterWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The id_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this MigrateTransmitterWhereInput.


        :param id_starts_with: The id_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def ip(self):
        """Gets the ip of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The ip of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this MigrateTransmitterWhereInput.


        :param ip: The ip of this MigrateTransmitterWhereInput.  # noqa: E501
        :type ip: str
        """

        self._ip = ip

    @property
    def ip_contains(self):
        """Gets the ip_contains of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The ip_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_contains

    @ip_contains.setter
    def ip_contains(self, ip_contains):
        """Sets the ip_contains of this MigrateTransmitterWhereInput.


        :param ip_contains: The ip_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :type ip_contains: str
        """

        self._ip_contains = ip_contains

    @property
    def ip_ends_with(self):
        """Gets the ip_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The ip_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_ends_with

    @ip_ends_with.setter
    def ip_ends_with(self, ip_ends_with):
        """Sets the ip_ends_with of this MigrateTransmitterWhereInput.


        :param ip_ends_with: The ip_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type ip_ends_with: str
        """

        self._ip_ends_with = ip_ends_with

    @property
    def ip_gt(self):
        """Gets the ip_gt of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The ip_gt of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_gt

    @ip_gt.setter
    def ip_gt(self, ip_gt):
        """Sets the ip_gt of this MigrateTransmitterWhereInput.


        :param ip_gt: The ip_gt of this MigrateTransmitterWhereInput.  # noqa: E501
        :type ip_gt: str
        """

        self._ip_gt = ip_gt

    @property
    def ip_gte(self):
        """Gets the ip_gte of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The ip_gte of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_gte

    @ip_gte.setter
    def ip_gte(self, ip_gte):
        """Sets the ip_gte of this MigrateTransmitterWhereInput.


        :param ip_gte: The ip_gte of this MigrateTransmitterWhereInput.  # noqa: E501
        :type ip_gte: str
        """

        self._ip_gte = ip_gte

    @property
    def ip_in(self):
        """Gets the ip_in of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The ip_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ip_in

    @ip_in.setter
    def ip_in(self, ip_in):
        """Sets the ip_in of this MigrateTransmitterWhereInput.


        :param ip_in: The ip_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :type ip_in: list[str]
        """

        self._ip_in = ip_in

    @property
    def ip_lt(self):
        """Gets the ip_lt of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The ip_lt of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_lt

    @ip_lt.setter
    def ip_lt(self, ip_lt):
        """Sets the ip_lt of this MigrateTransmitterWhereInput.


        :param ip_lt: The ip_lt of this MigrateTransmitterWhereInput.  # noqa: E501
        :type ip_lt: str
        """

        self._ip_lt = ip_lt

    @property
    def ip_lte(self):
        """Gets the ip_lte of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The ip_lte of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_lte

    @ip_lte.setter
    def ip_lte(self, ip_lte):
        """Sets the ip_lte of this MigrateTransmitterWhereInput.


        :param ip_lte: The ip_lte of this MigrateTransmitterWhereInput.  # noqa: E501
        :type ip_lte: str
        """

        self._ip_lte = ip_lte

    @property
    def ip_not(self):
        """Gets the ip_not of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The ip_not of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_not

    @ip_not.setter
    def ip_not(self, ip_not):
        """Sets the ip_not of this MigrateTransmitterWhereInput.


        :param ip_not: The ip_not of this MigrateTransmitterWhereInput.  # noqa: E501
        :type ip_not: str
        """

        self._ip_not = ip_not

    @property
    def ip_not_contains(self):
        """Gets the ip_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The ip_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_not_contains

    @ip_not_contains.setter
    def ip_not_contains(self, ip_not_contains):
        """Sets the ip_not_contains of this MigrateTransmitterWhereInput.


        :param ip_not_contains: The ip_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :type ip_not_contains: str
        """

        self._ip_not_contains = ip_not_contains

    @property
    def ip_not_ends_with(self):
        """Gets the ip_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The ip_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_not_ends_with

    @ip_not_ends_with.setter
    def ip_not_ends_with(self, ip_not_ends_with):
        """Sets the ip_not_ends_with of this MigrateTransmitterWhereInput.


        :param ip_not_ends_with: The ip_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type ip_not_ends_with: str
        """

        self._ip_not_ends_with = ip_not_ends_with

    @property
    def ip_not_in(self):
        """Gets the ip_not_in of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The ip_not_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._ip_not_in

    @ip_not_in.setter
    def ip_not_in(self, ip_not_in):
        """Sets the ip_not_in of this MigrateTransmitterWhereInput.


        :param ip_not_in: The ip_not_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :type ip_not_in: list[str]
        """

        self._ip_not_in = ip_not_in

    @property
    def ip_not_starts_with(self):
        """Gets the ip_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The ip_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_not_starts_with

    @ip_not_starts_with.setter
    def ip_not_starts_with(self, ip_not_starts_with):
        """Sets the ip_not_starts_with of this MigrateTransmitterWhereInput.


        :param ip_not_starts_with: The ip_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type ip_not_starts_with: str
        """

        self._ip_not_starts_with = ip_not_starts_with

    @property
    def ip_starts_with(self):
        """Gets the ip_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The ip_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._ip_starts_with

    @ip_starts_with.setter
    def ip_starts_with(self, ip_starts_with):
        """Sets the ip_starts_with of this MigrateTransmitterWhereInput.


        :param ip_starts_with: The ip_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type ip_starts_with: str
        """

        self._ip_starts_with = ip_starts_with

    @property
    def name(self):
        """Gets the name of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The name of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MigrateTransmitterWhereInput.


        :param name: The name of this MigrateTransmitterWhereInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def name_contains(self):
        """Gets the name_contains of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The name_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this MigrateTransmitterWhereInput.


        :param name_contains: The name_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def name_ends_with(self):
        """Gets the name_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The name_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_ends_with

    @name_ends_with.setter
    def name_ends_with(self, name_ends_with):
        """Sets the name_ends_with of this MigrateTransmitterWhereInput.


        :param name_ends_with: The name_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type name_ends_with: str
        """

        self._name_ends_with = name_ends_with

    @property
    def name_gt(self):
        """Gets the name_gt of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The name_gt of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gt

    @name_gt.setter
    def name_gt(self, name_gt):
        """Sets the name_gt of this MigrateTransmitterWhereInput.


        :param name_gt: The name_gt of this MigrateTransmitterWhereInput.  # noqa: E501
        :type name_gt: str
        """

        self._name_gt = name_gt

    @property
    def name_gte(self):
        """Gets the name_gte of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The name_gte of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gte

    @name_gte.setter
    def name_gte(self, name_gte):
        """Sets the name_gte of this MigrateTransmitterWhereInput.


        :param name_gte: The name_gte of this MigrateTransmitterWhereInput.  # noqa: E501
        :type name_gte: str
        """

        self._name_gte = name_gte

    @property
    def name_in(self):
        """Gets the name_in of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The name_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_in

    @name_in.setter
    def name_in(self, name_in):
        """Sets the name_in of this MigrateTransmitterWhereInput.


        :param name_in: The name_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :type name_in: list[str]
        """

        self._name_in = name_in

    @property
    def name_lt(self):
        """Gets the name_lt of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The name_lt of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lt

    @name_lt.setter
    def name_lt(self, name_lt):
        """Sets the name_lt of this MigrateTransmitterWhereInput.


        :param name_lt: The name_lt of this MigrateTransmitterWhereInput.  # noqa: E501
        :type name_lt: str
        """

        self._name_lt = name_lt

    @property
    def name_lte(self):
        """Gets the name_lte of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The name_lte of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lte

    @name_lte.setter
    def name_lte(self, name_lte):
        """Sets the name_lte of this MigrateTransmitterWhereInput.


        :param name_lte: The name_lte of this MigrateTransmitterWhereInput.  # noqa: E501
        :type name_lte: str
        """

        self._name_lte = name_lte

    @property
    def name_not(self):
        """Gets the name_not of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The name_not of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not

    @name_not.setter
    def name_not(self, name_not):
        """Sets the name_not of this MigrateTransmitterWhereInput.


        :param name_not: The name_not of this MigrateTransmitterWhereInput.  # noqa: E501
        :type name_not: str
        """

        self._name_not = name_not

    @property
    def name_not_contains(self):
        """Gets the name_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The name_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_contains

    @name_not_contains.setter
    def name_not_contains(self, name_not_contains):
        """Sets the name_not_contains of this MigrateTransmitterWhereInput.


        :param name_not_contains: The name_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :type name_not_contains: str
        """

        self._name_not_contains = name_not_contains

    @property
    def name_not_ends_with(self):
        """Gets the name_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The name_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_ends_with

    @name_not_ends_with.setter
    def name_not_ends_with(self, name_not_ends_with):
        """Sets the name_not_ends_with of this MigrateTransmitterWhereInput.


        :param name_not_ends_with: The name_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type name_not_ends_with: str
        """

        self._name_not_ends_with = name_not_ends_with

    @property
    def name_not_in(self):
        """Gets the name_not_in of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The name_not_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_not_in

    @name_not_in.setter
    def name_not_in(self, name_not_in):
        """Sets the name_not_in of this MigrateTransmitterWhereInput.


        :param name_not_in: The name_not_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :type name_not_in: list[str]
        """

        self._name_not_in = name_not_in

    @property
    def name_not_starts_with(self):
        """Gets the name_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The name_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_starts_with

    @name_not_starts_with.setter
    def name_not_starts_with(self, name_not_starts_with):
        """Sets the name_not_starts_with of this MigrateTransmitterWhereInput.


        :param name_not_starts_with: The name_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type name_not_starts_with: str
        """

        self._name_not_starts_with = name_not_starts_with

    @property
    def name_starts_with(self):
        """Gets the name_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The name_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_starts_with

    @name_starts_with.setter
    def name_starts_with(self, name_starts_with):
        """Sets the name_starts_with of this MigrateTransmitterWhereInput.


        :param name_starts_with: The name_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type name_starts_with: str
        """

        self._name_starts_with = name_starts_with

    @property
    def _not(self):
        """Gets the _not of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The _not of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[MigrateTransmitterWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this MigrateTransmitterWhereInput.


        :param _not: The _not of this MigrateTransmitterWhereInput.  # noqa: E501
        :type _not: list[MigrateTransmitterWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The _or of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[MigrateTransmitterWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this MigrateTransmitterWhereInput.


        :param _or: The _or of this MigrateTransmitterWhereInput.  # noqa: E501
        :type _or: list[MigrateTransmitterWhereInput]
        """

        self.__or = _or

    @property
    def password(self):
        """Gets the password of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The password of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this MigrateTransmitterWhereInput.


        :param password: The password of this MigrateTransmitterWhereInput.  # noqa: E501
        :type password: str
        """

        self._password = password

    @property
    def password_contains(self):
        """Gets the password_contains of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The password_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_contains

    @password_contains.setter
    def password_contains(self, password_contains):
        """Sets the password_contains of this MigrateTransmitterWhereInput.


        :param password_contains: The password_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :type password_contains: str
        """

        self._password_contains = password_contains

    @property
    def password_ends_with(self):
        """Gets the password_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The password_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_ends_with

    @password_ends_with.setter
    def password_ends_with(self, password_ends_with):
        """Sets the password_ends_with of this MigrateTransmitterWhereInput.


        :param password_ends_with: The password_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type password_ends_with: str
        """

        self._password_ends_with = password_ends_with

    @property
    def password_gt(self):
        """Gets the password_gt of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The password_gt of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_gt

    @password_gt.setter
    def password_gt(self, password_gt):
        """Sets the password_gt of this MigrateTransmitterWhereInput.


        :param password_gt: The password_gt of this MigrateTransmitterWhereInput.  # noqa: E501
        :type password_gt: str
        """

        self._password_gt = password_gt

    @property
    def password_gte(self):
        """Gets the password_gte of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The password_gte of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_gte

    @password_gte.setter
    def password_gte(self, password_gte):
        """Sets the password_gte of this MigrateTransmitterWhereInput.


        :param password_gte: The password_gte of this MigrateTransmitterWhereInput.  # noqa: E501
        :type password_gte: str
        """

        self._password_gte = password_gte

    @property
    def password_in(self):
        """Gets the password_in of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The password_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._password_in

    @password_in.setter
    def password_in(self, password_in):
        """Sets the password_in of this MigrateTransmitterWhereInput.


        :param password_in: The password_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :type password_in: list[str]
        """

        self._password_in = password_in

    @property
    def password_lt(self):
        """Gets the password_lt of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The password_lt of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_lt

    @password_lt.setter
    def password_lt(self, password_lt):
        """Sets the password_lt of this MigrateTransmitterWhereInput.


        :param password_lt: The password_lt of this MigrateTransmitterWhereInput.  # noqa: E501
        :type password_lt: str
        """

        self._password_lt = password_lt

    @property
    def password_lte(self):
        """Gets the password_lte of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The password_lte of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_lte

    @password_lte.setter
    def password_lte(self, password_lte):
        """Sets the password_lte of this MigrateTransmitterWhereInput.


        :param password_lte: The password_lte of this MigrateTransmitterWhereInput.  # noqa: E501
        :type password_lte: str
        """

        self._password_lte = password_lte

    @property
    def password_not(self):
        """Gets the password_not of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The password_not of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_not

    @password_not.setter
    def password_not(self, password_not):
        """Sets the password_not of this MigrateTransmitterWhereInput.


        :param password_not: The password_not of this MigrateTransmitterWhereInput.  # noqa: E501
        :type password_not: str
        """

        self._password_not = password_not

    @property
    def password_not_contains(self):
        """Gets the password_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The password_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_not_contains

    @password_not_contains.setter
    def password_not_contains(self, password_not_contains):
        """Sets the password_not_contains of this MigrateTransmitterWhereInput.


        :param password_not_contains: The password_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :type password_not_contains: str
        """

        self._password_not_contains = password_not_contains

    @property
    def password_not_ends_with(self):
        """Gets the password_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The password_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_not_ends_with

    @password_not_ends_with.setter
    def password_not_ends_with(self, password_not_ends_with):
        """Sets the password_not_ends_with of this MigrateTransmitterWhereInput.


        :param password_not_ends_with: The password_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type password_not_ends_with: str
        """

        self._password_not_ends_with = password_not_ends_with

    @property
    def password_not_in(self):
        """Gets the password_not_in of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The password_not_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._password_not_in

    @password_not_in.setter
    def password_not_in(self, password_not_in):
        """Sets the password_not_in of this MigrateTransmitterWhereInput.


        :param password_not_in: The password_not_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :type password_not_in: list[str]
        """

        self._password_not_in = password_not_in

    @property
    def password_not_starts_with(self):
        """Gets the password_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The password_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_not_starts_with

    @password_not_starts_with.setter
    def password_not_starts_with(self, password_not_starts_with):
        """Sets the password_not_starts_with of this MigrateTransmitterWhereInput.


        :param password_not_starts_with: The password_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type password_not_starts_with: str
        """

        self._password_not_starts_with = password_not_starts_with

    @property
    def password_starts_with(self):
        """Gets the password_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The password_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._password_starts_with

    @password_starts_with.setter
    def password_starts_with(self, password_starts_with):
        """Sets the password_starts_with of this MigrateTransmitterWhereInput.


        :param password_starts_with: The password_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type password_starts_with: str
        """

        self._password_starts_with = password_starts_with

    @property
    def username(self):
        """Gets the username of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The username of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this MigrateTransmitterWhereInput.


        :param username: The username of this MigrateTransmitterWhereInput.  # noqa: E501
        :type username: str
        """

        self._username = username

    @property
    def username_contains(self):
        """Gets the username_contains of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The username_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_contains

    @username_contains.setter
    def username_contains(self, username_contains):
        """Sets the username_contains of this MigrateTransmitterWhereInput.


        :param username_contains: The username_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :type username_contains: str
        """

        self._username_contains = username_contains

    @property
    def username_ends_with(self):
        """Gets the username_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The username_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_ends_with

    @username_ends_with.setter
    def username_ends_with(self, username_ends_with):
        """Sets the username_ends_with of this MigrateTransmitterWhereInput.


        :param username_ends_with: The username_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type username_ends_with: str
        """

        self._username_ends_with = username_ends_with

    @property
    def username_gt(self):
        """Gets the username_gt of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The username_gt of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_gt

    @username_gt.setter
    def username_gt(self, username_gt):
        """Sets the username_gt of this MigrateTransmitterWhereInput.


        :param username_gt: The username_gt of this MigrateTransmitterWhereInput.  # noqa: E501
        :type username_gt: str
        """

        self._username_gt = username_gt

    @property
    def username_gte(self):
        """Gets the username_gte of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The username_gte of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_gte

    @username_gte.setter
    def username_gte(self, username_gte):
        """Sets the username_gte of this MigrateTransmitterWhereInput.


        :param username_gte: The username_gte of this MigrateTransmitterWhereInput.  # noqa: E501
        :type username_gte: str
        """

        self._username_gte = username_gte

    @property
    def username_in(self):
        """Gets the username_in of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The username_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._username_in

    @username_in.setter
    def username_in(self, username_in):
        """Sets the username_in of this MigrateTransmitterWhereInput.


        :param username_in: The username_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :type username_in: list[str]
        """

        self._username_in = username_in

    @property
    def username_lt(self):
        """Gets the username_lt of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The username_lt of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_lt

    @username_lt.setter
    def username_lt(self, username_lt):
        """Sets the username_lt of this MigrateTransmitterWhereInput.


        :param username_lt: The username_lt of this MigrateTransmitterWhereInput.  # noqa: E501
        :type username_lt: str
        """

        self._username_lt = username_lt

    @property
    def username_lte(self):
        """Gets the username_lte of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The username_lte of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_lte

    @username_lte.setter
    def username_lte(self, username_lte):
        """Sets the username_lte of this MigrateTransmitterWhereInput.


        :param username_lte: The username_lte of this MigrateTransmitterWhereInput.  # noqa: E501
        :type username_lte: str
        """

        self._username_lte = username_lte

    @property
    def username_not(self):
        """Gets the username_not of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The username_not of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not

    @username_not.setter
    def username_not(self, username_not):
        """Sets the username_not of this MigrateTransmitterWhereInput.


        :param username_not: The username_not of this MigrateTransmitterWhereInput.  # noqa: E501
        :type username_not: str
        """

        self._username_not = username_not

    @property
    def username_not_contains(self):
        """Gets the username_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The username_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_contains

    @username_not_contains.setter
    def username_not_contains(self, username_not_contains):
        """Sets the username_not_contains of this MigrateTransmitterWhereInput.


        :param username_not_contains: The username_not_contains of this MigrateTransmitterWhereInput.  # noqa: E501
        :type username_not_contains: str
        """

        self._username_not_contains = username_not_contains

    @property
    def username_not_ends_with(self):
        """Gets the username_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The username_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_ends_with

    @username_not_ends_with.setter
    def username_not_ends_with(self, username_not_ends_with):
        """Sets the username_not_ends_with of this MigrateTransmitterWhereInput.


        :param username_not_ends_with: The username_not_ends_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type username_not_ends_with: str
        """

        self._username_not_ends_with = username_not_ends_with

    @property
    def username_not_in(self):
        """Gets the username_not_in of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The username_not_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._username_not_in

    @username_not_in.setter
    def username_not_in(self, username_not_in):
        """Sets the username_not_in of this MigrateTransmitterWhereInput.


        :param username_not_in: The username_not_in of this MigrateTransmitterWhereInput.  # noqa: E501
        :type username_not_in: list[str]
        """

        self._username_not_in = username_not_in

    @property
    def username_not_starts_with(self):
        """Gets the username_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The username_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_not_starts_with

    @username_not_starts_with.setter
    def username_not_starts_with(self, username_not_starts_with):
        """Sets the username_not_starts_with of this MigrateTransmitterWhereInput.


        :param username_not_starts_with: The username_not_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type username_not_starts_with: str
        """

        self._username_not_starts_with = username_not_starts_with

    @property
    def username_starts_with(self):
        """Gets the username_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501


        :return: The username_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._username_starts_with

    @username_starts_with.setter
    def username_starts_with(self, username_starts_with):
        """Sets the username_starts_with of this MigrateTransmitterWhereInput.


        :param username_starts_with: The username_starts_with of this MigrateTransmitterWhereInput.  # noqa: E501
        :type username_starts_with: str
        """

        self._username_starts_with = username_starts_with

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MigrateTransmitterWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, MigrateTransmitterWhereInput):
            return True

        return self.to_dict() != other.to_dict()
