# coding: utf-8

"""
    CloudTower APIs

    cloudtower operation API and SDK  # noqa: E501

    The version of the OpenAPI document: 1.9.0
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from cloudtower.configuration import Configuration


class ClusterImageWhereInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        '_and': 'list[ClusterImageWhereInput]',
        'cluster': 'ClusterWhereInput',
        'entity_async_status': 'EntityAsyncStatus',
        'entity_async_status_in': 'list[EntityAsyncStatus]',
        'entity_async_status_not': 'EntityAsyncStatus',
        'entity_async_status_not_in': 'list[EntityAsyncStatus]',
        'id': 'str',
        'id_contains': 'str',
        'id_ends_with': 'str',
        'id_gt': 'str',
        'id_gte': 'str',
        'id_in': 'list[str]',
        'id_lt': 'str',
        'id_lte': 'str',
        'id_not': 'str',
        'id_not_contains': 'str',
        'id_not_ends_with': 'str',
        'id_not_in': 'list[str]',
        'id_not_starts_with': 'str',
        'id_starts_with': 'str',
        'meta_name': 'str',
        'meta_name_contains': 'str',
        'meta_name_ends_with': 'str',
        'meta_name_gt': 'str',
        'meta_name_gte': 'str',
        'meta_name_in': 'list[str]',
        'meta_name_lt': 'str',
        'meta_name_lte': 'str',
        'meta_name_not': 'str',
        'meta_name_not_contains': 'str',
        'meta_name_not_ends_with': 'str',
        'meta_name_not_in': 'list[str]',
        'meta_name_not_starts_with': 'str',
        'meta_name_starts_with': 'str',
        'meta_size': 'float',
        'meta_size_gt': 'float',
        'meta_size_gte': 'float',
        'meta_size_in': 'list[float]',
        'meta_size_lt': 'float',
        'meta_size_lte': 'float',
        'meta_size_not': 'float',
        'meta_size_not_in': 'list[float]',
        'name': 'str',
        'name_contains': 'str',
        'name_ends_with': 'str',
        'name_gt': 'str',
        'name_gte': 'str',
        'name_in': 'list[str]',
        'name_lt': 'str',
        'name_lte': 'str',
        'name_not': 'str',
        'name_not_contains': 'str',
        'name_not_ends_with': 'str',
        'name_not_in': 'list[str]',
        'name_not_starts_with': 'str',
        'name_starts_with': 'str',
        '_not': 'list[ClusterImageWhereInput]',
        '_or': 'list[ClusterImageWhereInput]',
        'size': 'float',
        'size_gt': 'float',
        'size_gte': 'float',
        'size_in': 'list[float]',
        'size_lt': 'float',
        'size_lte': 'float',
        'size_not': 'float',
        'size_not_in': 'list[float]',
        'upgrade_tool_version': 'str',
        'upgrade_tool_version_contains': 'str',
        'upgrade_tool_version_ends_with': 'str',
        'upgrade_tool_version_gt': 'str',
        'upgrade_tool_version_gte': 'str',
        'upgrade_tool_version_in': 'list[str]',
        'upgrade_tool_version_lt': 'str',
        'upgrade_tool_version_lte': 'str',
        'upgrade_tool_version_not': 'str',
        'upgrade_tool_version_not_contains': 'str',
        'upgrade_tool_version_not_ends_with': 'str',
        'upgrade_tool_version_not_in': 'list[str]',
        'upgrade_tool_version_not_starts_with': 'str',
        'upgrade_tool_version_starts_with': 'str',
        'version': 'str',
        'version_contains': 'str',
        'version_ends_with': 'str',
        'version_gt': 'str',
        'version_gte': 'str',
        'version_in': 'list[str]',
        'version_lt': 'str',
        'version_lte': 'str',
        'version_not': 'str',
        'version_not_contains': 'str',
        'version_not_ends_with': 'str',
        'version_not_in': 'list[str]',
        'version_not_starts_with': 'str',
        'version_semantic_gt': 'str',
        'version_semantic_gte': 'str',
        'version_semantic_lt': 'str',
        'version_semantic_lte': 'str',
        'version_starts_with': 'str'
    }

    attribute_map = {
        '_and': 'AND',
        'cluster': 'cluster',
        'entity_async_status': 'entityAsyncStatus',
        'entity_async_status_in': 'entityAsyncStatus_in',
        'entity_async_status_not': 'entityAsyncStatus_not',
        'entity_async_status_not_in': 'entityAsyncStatus_not_in',
        'id': 'id',
        'id_contains': 'id_contains',
        'id_ends_with': 'id_ends_with',
        'id_gt': 'id_gt',
        'id_gte': 'id_gte',
        'id_in': 'id_in',
        'id_lt': 'id_lt',
        'id_lte': 'id_lte',
        'id_not': 'id_not',
        'id_not_contains': 'id_not_contains',
        'id_not_ends_with': 'id_not_ends_with',
        'id_not_in': 'id_not_in',
        'id_not_starts_with': 'id_not_starts_with',
        'id_starts_with': 'id_starts_with',
        'meta_name': 'meta_name',
        'meta_name_contains': 'meta_name_contains',
        'meta_name_ends_with': 'meta_name_ends_with',
        'meta_name_gt': 'meta_name_gt',
        'meta_name_gte': 'meta_name_gte',
        'meta_name_in': 'meta_name_in',
        'meta_name_lt': 'meta_name_lt',
        'meta_name_lte': 'meta_name_lte',
        'meta_name_not': 'meta_name_not',
        'meta_name_not_contains': 'meta_name_not_contains',
        'meta_name_not_ends_with': 'meta_name_not_ends_with',
        'meta_name_not_in': 'meta_name_not_in',
        'meta_name_not_starts_with': 'meta_name_not_starts_with',
        'meta_name_starts_with': 'meta_name_starts_with',
        'meta_size': 'meta_size',
        'meta_size_gt': 'meta_size_gt',
        'meta_size_gte': 'meta_size_gte',
        'meta_size_in': 'meta_size_in',
        'meta_size_lt': 'meta_size_lt',
        'meta_size_lte': 'meta_size_lte',
        'meta_size_not': 'meta_size_not',
        'meta_size_not_in': 'meta_size_not_in',
        'name': 'name',
        'name_contains': 'name_contains',
        'name_ends_with': 'name_ends_with',
        'name_gt': 'name_gt',
        'name_gte': 'name_gte',
        'name_in': 'name_in',
        'name_lt': 'name_lt',
        'name_lte': 'name_lte',
        'name_not': 'name_not',
        'name_not_contains': 'name_not_contains',
        'name_not_ends_with': 'name_not_ends_with',
        'name_not_in': 'name_not_in',
        'name_not_starts_with': 'name_not_starts_with',
        'name_starts_with': 'name_starts_with',
        '_not': 'NOT',
        '_or': 'OR',
        'size': 'size',
        'size_gt': 'size_gt',
        'size_gte': 'size_gte',
        'size_in': 'size_in',
        'size_lt': 'size_lt',
        'size_lte': 'size_lte',
        'size_not': 'size_not',
        'size_not_in': 'size_not_in',
        'upgrade_tool_version': 'upgrade_tool_version',
        'upgrade_tool_version_contains': 'upgrade_tool_version_contains',
        'upgrade_tool_version_ends_with': 'upgrade_tool_version_ends_with',
        'upgrade_tool_version_gt': 'upgrade_tool_version_gt',
        'upgrade_tool_version_gte': 'upgrade_tool_version_gte',
        'upgrade_tool_version_in': 'upgrade_tool_version_in',
        'upgrade_tool_version_lt': 'upgrade_tool_version_lt',
        'upgrade_tool_version_lte': 'upgrade_tool_version_lte',
        'upgrade_tool_version_not': 'upgrade_tool_version_not',
        'upgrade_tool_version_not_contains': 'upgrade_tool_version_not_contains',
        'upgrade_tool_version_not_ends_with': 'upgrade_tool_version_not_ends_with',
        'upgrade_tool_version_not_in': 'upgrade_tool_version_not_in',
        'upgrade_tool_version_not_starts_with': 'upgrade_tool_version_not_starts_with',
        'upgrade_tool_version_starts_with': 'upgrade_tool_version_starts_with',
        'version': 'version',
        'version_contains': 'version_contains',
        'version_ends_with': 'version_ends_with',
        'version_gt': 'version_gt',
        'version_gte': 'version_gte',
        'version_in': 'version_in',
        'version_lt': 'version_lt',
        'version_lte': 'version_lte',
        'version_not': 'version_not',
        'version_not_contains': 'version_not_contains',
        'version_not_ends_with': 'version_not_ends_with',
        'version_not_in': 'version_not_in',
        'version_not_starts_with': 'version_not_starts_with',
        'version_semantic_gt': 'version_semantic_gt',
        'version_semantic_gte': 'version_semantic_gte',
        'version_semantic_lt': 'version_semantic_lt',
        'version_semantic_lte': 'version_semantic_lte',
        'version_starts_with': 'version_starts_with'
    }

    def __init__(self, _and=None, cluster=None, entity_async_status=None, entity_async_status_in=None, entity_async_status_not=None, entity_async_status_not_in=None, id=None, id_contains=None, id_ends_with=None, id_gt=None, id_gte=None, id_in=None, id_lt=None, id_lte=None, id_not=None, id_not_contains=None, id_not_ends_with=None, id_not_in=None, id_not_starts_with=None, id_starts_with=None, meta_name=None, meta_name_contains=None, meta_name_ends_with=None, meta_name_gt=None, meta_name_gte=None, meta_name_in=None, meta_name_lt=None, meta_name_lte=None, meta_name_not=None, meta_name_not_contains=None, meta_name_not_ends_with=None, meta_name_not_in=None, meta_name_not_starts_with=None, meta_name_starts_with=None, meta_size=None, meta_size_gt=None, meta_size_gte=None, meta_size_in=None, meta_size_lt=None, meta_size_lte=None, meta_size_not=None, meta_size_not_in=None, name=None, name_contains=None, name_ends_with=None, name_gt=None, name_gte=None, name_in=None, name_lt=None, name_lte=None, name_not=None, name_not_contains=None, name_not_ends_with=None, name_not_in=None, name_not_starts_with=None, name_starts_with=None, _not=None, _or=None, size=None, size_gt=None, size_gte=None, size_in=None, size_lt=None, size_lte=None, size_not=None, size_not_in=None, upgrade_tool_version=None, upgrade_tool_version_contains=None, upgrade_tool_version_ends_with=None, upgrade_tool_version_gt=None, upgrade_tool_version_gte=None, upgrade_tool_version_in=None, upgrade_tool_version_lt=None, upgrade_tool_version_lte=None, upgrade_tool_version_not=None, upgrade_tool_version_not_contains=None, upgrade_tool_version_not_ends_with=None, upgrade_tool_version_not_in=None, upgrade_tool_version_not_starts_with=None, upgrade_tool_version_starts_with=None, version=None, version_contains=None, version_ends_with=None, version_gt=None, version_gte=None, version_in=None, version_lt=None, version_lte=None, version_not=None, version_not_contains=None, version_not_ends_with=None, version_not_in=None, version_not_starts_with=None, version_semantic_gt=None, version_semantic_gte=None, version_semantic_lt=None, version_semantic_lte=None, version_starts_with=None, local_vars_configuration=None):  # noqa: E501
        """ClusterImageWhereInput - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self.__and = None
        self._cluster = None
        self._entity_async_status = None
        self._entity_async_status_in = None
        self._entity_async_status_not = None
        self._entity_async_status_not_in = None
        self._id = None
        self._id_contains = None
        self._id_ends_with = None
        self._id_gt = None
        self._id_gte = None
        self._id_in = None
        self._id_lt = None
        self._id_lte = None
        self._id_not = None
        self._id_not_contains = None
        self._id_not_ends_with = None
        self._id_not_in = None
        self._id_not_starts_with = None
        self._id_starts_with = None
        self._meta_name = None
        self._meta_name_contains = None
        self._meta_name_ends_with = None
        self._meta_name_gt = None
        self._meta_name_gte = None
        self._meta_name_in = None
        self._meta_name_lt = None
        self._meta_name_lte = None
        self._meta_name_not = None
        self._meta_name_not_contains = None
        self._meta_name_not_ends_with = None
        self._meta_name_not_in = None
        self._meta_name_not_starts_with = None
        self._meta_name_starts_with = None
        self._meta_size = None
        self._meta_size_gt = None
        self._meta_size_gte = None
        self._meta_size_in = None
        self._meta_size_lt = None
        self._meta_size_lte = None
        self._meta_size_not = None
        self._meta_size_not_in = None
        self._name = None
        self._name_contains = None
        self._name_ends_with = None
        self._name_gt = None
        self._name_gte = None
        self._name_in = None
        self._name_lt = None
        self._name_lte = None
        self._name_not = None
        self._name_not_contains = None
        self._name_not_ends_with = None
        self._name_not_in = None
        self._name_not_starts_with = None
        self._name_starts_with = None
        self.__not = None
        self.__or = None
        self._size = None
        self._size_gt = None
        self._size_gte = None
        self._size_in = None
        self._size_lt = None
        self._size_lte = None
        self._size_not = None
        self._size_not_in = None
        self._upgrade_tool_version = None
        self._upgrade_tool_version_contains = None
        self._upgrade_tool_version_ends_with = None
        self._upgrade_tool_version_gt = None
        self._upgrade_tool_version_gte = None
        self._upgrade_tool_version_in = None
        self._upgrade_tool_version_lt = None
        self._upgrade_tool_version_lte = None
        self._upgrade_tool_version_not = None
        self._upgrade_tool_version_not_contains = None
        self._upgrade_tool_version_not_ends_with = None
        self._upgrade_tool_version_not_in = None
        self._upgrade_tool_version_not_starts_with = None
        self._upgrade_tool_version_starts_with = None
        self._version = None
        self._version_contains = None
        self._version_ends_with = None
        self._version_gt = None
        self._version_gte = None
        self._version_in = None
        self._version_lt = None
        self._version_lte = None
        self._version_not = None
        self._version_not_contains = None
        self._version_not_ends_with = None
        self._version_not_in = None
        self._version_not_starts_with = None
        self._version_semantic_gt = None
        self._version_semantic_gte = None
        self._version_semantic_lt = None
        self._version_semantic_lte = None
        self._version_starts_with = None
        self.discriminator = None

        self._and = _and
        self.cluster = cluster
        self.entity_async_status = entity_async_status
        self.entity_async_status_in = entity_async_status_in
        self.entity_async_status_not = entity_async_status_not
        self.entity_async_status_not_in = entity_async_status_not_in
        self.id = id
        self.id_contains = id_contains
        self.id_ends_with = id_ends_with
        self.id_gt = id_gt
        self.id_gte = id_gte
        self.id_in = id_in
        self.id_lt = id_lt
        self.id_lte = id_lte
        self.id_not = id_not
        self.id_not_contains = id_not_contains
        self.id_not_ends_with = id_not_ends_with
        self.id_not_in = id_not_in
        self.id_not_starts_with = id_not_starts_with
        self.id_starts_with = id_starts_with
        self.meta_name = meta_name
        self.meta_name_contains = meta_name_contains
        self.meta_name_ends_with = meta_name_ends_with
        self.meta_name_gt = meta_name_gt
        self.meta_name_gte = meta_name_gte
        self.meta_name_in = meta_name_in
        self.meta_name_lt = meta_name_lt
        self.meta_name_lte = meta_name_lte
        self.meta_name_not = meta_name_not
        self.meta_name_not_contains = meta_name_not_contains
        self.meta_name_not_ends_with = meta_name_not_ends_with
        self.meta_name_not_in = meta_name_not_in
        self.meta_name_not_starts_with = meta_name_not_starts_with
        self.meta_name_starts_with = meta_name_starts_with
        self.meta_size = meta_size
        self.meta_size_gt = meta_size_gt
        self.meta_size_gte = meta_size_gte
        self.meta_size_in = meta_size_in
        self.meta_size_lt = meta_size_lt
        self.meta_size_lte = meta_size_lte
        self.meta_size_not = meta_size_not
        self.meta_size_not_in = meta_size_not_in
        self.name = name
        self.name_contains = name_contains
        self.name_ends_with = name_ends_with
        self.name_gt = name_gt
        self.name_gte = name_gte
        self.name_in = name_in
        self.name_lt = name_lt
        self.name_lte = name_lte
        self.name_not = name_not
        self.name_not_contains = name_not_contains
        self.name_not_ends_with = name_not_ends_with
        self.name_not_in = name_not_in
        self.name_not_starts_with = name_not_starts_with
        self.name_starts_with = name_starts_with
        self._not = _not
        self._or = _or
        self.size = size
        self.size_gt = size_gt
        self.size_gte = size_gte
        self.size_in = size_in
        self.size_lt = size_lt
        self.size_lte = size_lte
        self.size_not = size_not
        self.size_not_in = size_not_in
        self.upgrade_tool_version = upgrade_tool_version
        self.upgrade_tool_version_contains = upgrade_tool_version_contains
        self.upgrade_tool_version_ends_with = upgrade_tool_version_ends_with
        self.upgrade_tool_version_gt = upgrade_tool_version_gt
        self.upgrade_tool_version_gte = upgrade_tool_version_gte
        self.upgrade_tool_version_in = upgrade_tool_version_in
        self.upgrade_tool_version_lt = upgrade_tool_version_lt
        self.upgrade_tool_version_lte = upgrade_tool_version_lte
        self.upgrade_tool_version_not = upgrade_tool_version_not
        self.upgrade_tool_version_not_contains = upgrade_tool_version_not_contains
        self.upgrade_tool_version_not_ends_with = upgrade_tool_version_not_ends_with
        self.upgrade_tool_version_not_in = upgrade_tool_version_not_in
        self.upgrade_tool_version_not_starts_with = upgrade_tool_version_not_starts_with
        self.upgrade_tool_version_starts_with = upgrade_tool_version_starts_with
        self.version = version
        self.version_contains = version_contains
        self.version_ends_with = version_ends_with
        self.version_gt = version_gt
        self.version_gte = version_gte
        self.version_in = version_in
        self.version_lt = version_lt
        self.version_lte = version_lte
        self.version_not = version_not
        self.version_not_contains = version_not_contains
        self.version_not_ends_with = version_not_ends_with
        self.version_not_in = version_not_in
        self.version_not_starts_with = version_not_starts_with
        self.version_semantic_gt = version_semantic_gt
        self.version_semantic_gte = version_semantic_gte
        self.version_semantic_lt = version_semantic_lt
        self.version_semantic_lte = version_semantic_lte
        self.version_starts_with = version_starts_with

    @property
    def _and(self):
        """Gets the _and of this ClusterImageWhereInput.  # noqa: E501


        :return: The _and of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[ClusterImageWhereInput]
        """
        return self.__and

    @_and.setter
    def _and(self, _and):
        """Sets the _and of this ClusterImageWhereInput.


        :param _and: The _and of this ClusterImageWhereInput.  # noqa: E501
        :type _and: list[ClusterImageWhereInput]
        """

        self.__and = _and

    @property
    def cluster(self):
        """Gets the cluster of this ClusterImageWhereInput.  # noqa: E501


        :return: The cluster of this ClusterImageWhereInput.  # noqa: E501
        :rtype: ClusterWhereInput
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this ClusterImageWhereInput.


        :param cluster: The cluster of this ClusterImageWhereInput.  # noqa: E501
        :type cluster: ClusterWhereInput
        """

        self._cluster = cluster

    @property
    def entity_async_status(self):
        """Gets the entity_async_status of this ClusterImageWhereInput.  # noqa: E501


        :return: The entity_async_status of this ClusterImageWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status

    @entity_async_status.setter
    def entity_async_status(self, entity_async_status):
        """Sets the entity_async_status of this ClusterImageWhereInput.


        :param entity_async_status: The entity_async_status of this ClusterImageWhereInput.  # noqa: E501
        :type entity_async_status: EntityAsyncStatus
        """

        self._entity_async_status = entity_async_status

    @property
    def entity_async_status_in(self):
        """Gets the entity_async_status_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The entity_async_status_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_in

    @entity_async_status_in.setter
    def entity_async_status_in(self, entity_async_status_in):
        """Sets the entity_async_status_in of this ClusterImageWhereInput.


        :param entity_async_status_in: The entity_async_status_in of this ClusterImageWhereInput.  # noqa: E501
        :type entity_async_status_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_in = entity_async_status_in

    @property
    def entity_async_status_not(self):
        """Gets the entity_async_status_not of this ClusterImageWhereInput.  # noqa: E501


        :return: The entity_async_status_not of this ClusterImageWhereInput.  # noqa: E501
        :rtype: EntityAsyncStatus
        """
        return self._entity_async_status_not

    @entity_async_status_not.setter
    def entity_async_status_not(self, entity_async_status_not):
        """Sets the entity_async_status_not of this ClusterImageWhereInput.


        :param entity_async_status_not: The entity_async_status_not of this ClusterImageWhereInput.  # noqa: E501
        :type entity_async_status_not: EntityAsyncStatus
        """

        self._entity_async_status_not = entity_async_status_not

    @property
    def entity_async_status_not_in(self):
        """Gets the entity_async_status_not_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The entity_async_status_not_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[EntityAsyncStatus]
        """
        return self._entity_async_status_not_in

    @entity_async_status_not_in.setter
    def entity_async_status_not_in(self, entity_async_status_not_in):
        """Sets the entity_async_status_not_in of this ClusterImageWhereInput.


        :param entity_async_status_not_in: The entity_async_status_not_in of this ClusterImageWhereInput.  # noqa: E501
        :type entity_async_status_not_in: list[EntityAsyncStatus]
        """

        self._entity_async_status_not_in = entity_async_status_not_in

    @property
    def id(self):
        """Gets the id of this ClusterImageWhereInput.  # noqa: E501


        :return: The id of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ClusterImageWhereInput.


        :param id: The id of this ClusterImageWhereInput.  # noqa: E501
        :type id: str
        """

        self._id = id

    @property
    def id_contains(self):
        """Gets the id_contains of this ClusterImageWhereInput.  # noqa: E501


        :return: The id_contains of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_contains

    @id_contains.setter
    def id_contains(self, id_contains):
        """Sets the id_contains of this ClusterImageWhereInput.


        :param id_contains: The id_contains of this ClusterImageWhereInput.  # noqa: E501
        :type id_contains: str
        """

        self._id_contains = id_contains

    @property
    def id_ends_with(self):
        """Gets the id_ends_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The id_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_ends_with

    @id_ends_with.setter
    def id_ends_with(self, id_ends_with):
        """Sets the id_ends_with of this ClusterImageWhereInput.


        :param id_ends_with: The id_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :type id_ends_with: str
        """

        self._id_ends_with = id_ends_with

    @property
    def id_gt(self):
        """Gets the id_gt of this ClusterImageWhereInput.  # noqa: E501


        :return: The id_gt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gt

    @id_gt.setter
    def id_gt(self, id_gt):
        """Sets the id_gt of this ClusterImageWhereInput.


        :param id_gt: The id_gt of this ClusterImageWhereInput.  # noqa: E501
        :type id_gt: str
        """

        self._id_gt = id_gt

    @property
    def id_gte(self):
        """Gets the id_gte of this ClusterImageWhereInput.  # noqa: E501


        :return: The id_gte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_gte

    @id_gte.setter
    def id_gte(self, id_gte):
        """Sets the id_gte of this ClusterImageWhereInput.


        :param id_gte: The id_gte of this ClusterImageWhereInput.  # noqa: E501
        :type id_gte: str
        """

        self._id_gte = id_gte

    @property
    def id_in(self):
        """Gets the id_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The id_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_in

    @id_in.setter
    def id_in(self, id_in):
        """Sets the id_in of this ClusterImageWhereInput.


        :param id_in: The id_in of this ClusterImageWhereInput.  # noqa: E501
        :type id_in: list[str]
        """

        self._id_in = id_in

    @property
    def id_lt(self):
        """Gets the id_lt of this ClusterImageWhereInput.  # noqa: E501


        :return: The id_lt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lt

    @id_lt.setter
    def id_lt(self, id_lt):
        """Sets the id_lt of this ClusterImageWhereInput.


        :param id_lt: The id_lt of this ClusterImageWhereInput.  # noqa: E501
        :type id_lt: str
        """

        self._id_lt = id_lt

    @property
    def id_lte(self):
        """Gets the id_lte of this ClusterImageWhereInput.  # noqa: E501


        :return: The id_lte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_lte

    @id_lte.setter
    def id_lte(self, id_lte):
        """Sets the id_lte of this ClusterImageWhereInput.


        :param id_lte: The id_lte of this ClusterImageWhereInput.  # noqa: E501
        :type id_lte: str
        """

        self._id_lte = id_lte

    @property
    def id_not(self):
        """Gets the id_not of this ClusterImageWhereInput.  # noqa: E501


        :return: The id_not of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not

    @id_not.setter
    def id_not(self, id_not):
        """Sets the id_not of this ClusterImageWhereInput.


        :param id_not: The id_not of this ClusterImageWhereInput.  # noqa: E501
        :type id_not: str
        """

        self._id_not = id_not

    @property
    def id_not_contains(self):
        """Gets the id_not_contains of this ClusterImageWhereInput.  # noqa: E501


        :return: The id_not_contains of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_contains

    @id_not_contains.setter
    def id_not_contains(self, id_not_contains):
        """Sets the id_not_contains of this ClusterImageWhereInput.


        :param id_not_contains: The id_not_contains of this ClusterImageWhereInput.  # noqa: E501
        :type id_not_contains: str
        """

        self._id_not_contains = id_not_contains

    @property
    def id_not_ends_with(self):
        """Gets the id_not_ends_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The id_not_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_ends_with

    @id_not_ends_with.setter
    def id_not_ends_with(self, id_not_ends_with):
        """Sets the id_not_ends_with of this ClusterImageWhereInput.


        :param id_not_ends_with: The id_not_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :type id_not_ends_with: str
        """

        self._id_not_ends_with = id_not_ends_with

    @property
    def id_not_in(self):
        """Gets the id_not_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The id_not_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._id_not_in

    @id_not_in.setter
    def id_not_in(self, id_not_in):
        """Sets the id_not_in of this ClusterImageWhereInput.


        :param id_not_in: The id_not_in of this ClusterImageWhereInput.  # noqa: E501
        :type id_not_in: list[str]
        """

        self._id_not_in = id_not_in

    @property
    def id_not_starts_with(self):
        """Gets the id_not_starts_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The id_not_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_not_starts_with

    @id_not_starts_with.setter
    def id_not_starts_with(self, id_not_starts_with):
        """Sets the id_not_starts_with of this ClusterImageWhereInput.


        :param id_not_starts_with: The id_not_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :type id_not_starts_with: str
        """

        self._id_not_starts_with = id_not_starts_with

    @property
    def id_starts_with(self):
        """Gets the id_starts_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The id_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._id_starts_with

    @id_starts_with.setter
    def id_starts_with(self, id_starts_with):
        """Sets the id_starts_with of this ClusterImageWhereInput.


        :param id_starts_with: The id_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :type id_starts_with: str
        """

        self._id_starts_with = id_starts_with

    @property
    def meta_name(self):
        """Gets the meta_name of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_name of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._meta_name

    @meta_name.setter
    def meta_name(self, meta_name):
        """Sets the meta_name of this ClusterImageWhereInput.


        :param meta_name: The meta_name of this ClusterImageWhereInput.  # noqa: E501
        :type meta_name: str
        """

        self._meta_name = meta_name

    @property
    def meta_name_contains(self):
        """Gets the meta_name_contains of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_name_contains of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._meta_name_contains

    @meta_name_contains.setter
    def meta_name_contains(self, meta_name_contains):
        """Sets the meta_name_contains of this ClusterImageWhereInput.


        :param meta_name_contains: The meta_name_contains of this ClusterImageWhereInput.  # noqa: E501
        :type meta_name_contains: str
        """

        self._meta_name_contains = meta_name_contains

    @property
    def meta_name_ends_with(self):
        """Gets the meta_name_ends_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_name_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._meta_name_ends_with

    @meta_name_ends_with.setter
    def meta_name_ends_with(self, meta_name_ends_with):
        """Sets the meta_name_ends_with of this ClusterImageWhereInput.


        :param meta_name_ends_with: The meta_name_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :type meta_name_ends_with: str
        """

        self._meta_name_ends_with = meta_name_ends_with

    @property
    def meta_name_gt(self):
        """Gets the meta_name_gt of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_name_gt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._meta_name_gt

    @meta_name_gt.setter
    def meta_name_gt(self, meta_name_gt):
        """Sets the meta_name_gt of this ClusterImageWhereInput.


        :param meta_name_gt: The meta_name_gt of this ClusterImageWhereInput.  # noqa: E501
        :type meta_name_gt: str
        """

        self._meta_name_gt = meta_name_gt

    @property
    def meta_name_gte(self):
        """Gets the meta_name_gte of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_name_gte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._meta_name_gte

    @meta_name_gte.setter
    def meta_name_gte(self, meta_name_gte):
        """Sets the meta_name_gte of this ClusterImageWhereInput.


        :param meta_name_gte: The meta_name_gte of this ClusterImageWhereInput.  # noqa: E501
        :type meta_name_gte: str
        """

        self._meta_name_gte = meta_name_gte

    @property
    def meta_name_in(self):
        """Gets the meta_name_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_name_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._meta_name_in

    @meta_name_in.setter
    def meta_name_in(self, meta_name_in):
        """Sets the meta_name_in of this ClusterImageWhereInput.


        :param meta_name_in: The meta_name_in of this ClusterImageWhereInput.  # noqa: E501
        :type meta_name_in: list[str]
        """

        self._meta_name_in = meta_name_in

    @property
    def meta_name_lt(self):
        """Gets the meta_name_lt of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_name_lt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._meta_name_lt

    @meta_name_lt.setter
    def meta_name_lt(self, meta_name_lt):
        """Sets the meta_name_lt of this ClusterImageWhereInput.


        :param meta_name_lt: The meta_name_lt of this ClusterImageWhereInput.  # noqa: E501
        :type meta_name_lt: str
        """

        self._meta_name_lt = meta_name_lt

    @property
    def meta_name_lte(self):
        """Gets the meta_name_lte of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_name_lte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._meta_name_lte

    @meta_name_lte.setter
    def meta_name_lte(self, meta_name_lte):
        """Sets the meta_name_lte of this ClusterImageWhereInput.


        :param meta_name_lte: The meta_name_lte of this ClusterImageWhereInput.  # noqa: E501
        :type meta_name_lte: str
        """

        self._meta_name_lte = meta_name_lte

    @property
    def meta_name_not(self):
        """Gets the meta_name_not of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_name_not of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._meta_name_not

    @meta_name_not.setter
    def meta_name_not(self, meta_name_not):
        """Sets the meta_name_not of this ClusterImageWhereInput.


        :param meta_name_not: The meta_name_not of this ClusterImageWhereInput.  # noqa: E501
        :type meta_name_not: str
        """

        self._meta_name_not = meta_name_not

    @property
    def meta_name_not_contains(self):
        """Gets the meta_name_not_contains of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_name_not_contains of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._meta_name_not_contains

    @meta_name_not_contains.setter
    def meta_name_not_contains(self, meta_name_not_contains):
        """Sets the meta_name_not_contains of this ClusterImageWhereInput.


        :param meta_name_not_contains: The meta_name_not_contains of this ClusterImageWhereInput.  # noqa: E501
        :type meta_name_not_contains: str
        """

        self._meta_name_not_contains = meta_name_not_contains

    @property
    def meta_name_not_ends_with(self):
        """Gets the meta_name_not_ends_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_name_not_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._meta_name_not_ends_with

    @meta_name_not_ends_with.setter
    def meta_name_not_ends_with(self, meta_name_not_ends_with):
        """Sets the meta_name_not_ends_with of this ClusterImageWhereInput.


        :param meta_name_not_ends_with: The meta_name_not_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :type meta_name_not_ends_with: str
        """

        self._meta_name_not_ends_with = meta_name_not_ends_with

    @property
    def meta_name_not_in(self):
        """Gets the meta_name_not_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_name_not_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._meta_name_not_in

    @meta_name_not_in.setter
    def meta_name_not_in(self, meta_name_not_in):
        """Sets the meta_name_not_in of this ClusterImageWhereInput.


        :param meta_name_not_in: The meta_name_not_in of this ClusterImageWhereInput.  # noqa: E501
        :type meta_name_not_in: list[str]
        """

        self._meta_name_not_in = meta_name_not_in

    @property
    def meta_name_not_starts_with(self):
        """Gets the meta_name_not_starts_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_name_not_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._meta_name_not_starts_with

    @meta_name_not_starts_with.setter
    def meta_name_not_starts_with(self, meta_name_not_starts_with):
        """Sets the meta_name_not_starts_with of this ClusterImageWhereInput.


        :param meta_name_not_starts_with: The meta_name_not_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :type meta_name_not_starts_with: str
        """

        self._meta_name_not_starts_with = meta_name_not_starts_with

    @property
    def meta_name_starts_with(self):
        """Gets the meta_name_starts_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_name_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._meta_name_starts_with

    @meta_name_starts_with.setter
    def meta_name_starts_with(self, meta_name_starts_with):
        """Sets the meta_name_starts_with of this ClusterImageWhereInput.


        :param meta_name_starts_with: The meta_name_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :type meta_name_starts_with: str
        """

        self._meta_name_starts_with = meta_name_starts_with

    @property
    def meta_size(self):
        """Gets the meta_size of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_size of this ClusterImageWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._meta_size

    @meta_size.setter
    def meta_size(self, meta_size):
        """Sets the meta_size of this ClusterImageWhereInput.


        :param meta_size: The meta_size of this ClusterImageWhereInput.  # noqa: E501
        :type meta_size: float
        """

        self._meta_size = meta_size

    @property
    def meta_size_gt(self):
        """Gets the meta_size_gt of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_size_gt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._meta_size_gt

    @meta_size_gt.setter
    def meta_size_gt(self, meta_size_gt):
        """Sets the meta_size_gt of this ClusterImageWhereInput.


        :param meta_size_gt: The meta_size_gt of this ClusterImageWhereInput.  # noqa: E501
        :type meta_size_gt: float
        """

        self._meta_size_gt = meta_size_gt

    @property
    def meta_size_gte(self):
        """Gets the meta_size_gte of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_size_gte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._meta_size_gte

    @meta_size_gte.setter
    def meta_size_gte(self, meta_size_gte):
        """Sets the meta_size_gte of this ClusterImageWhereInput.


        :param meta_size_gte: The meta_size_gte of this ClusterImageWhereInput.  # noqa: E501
        :type meta_size_gte: float
        """

        self._meta_size_gte = meta_size_gte

    @property
    def meta_size_in(self):
        """Gets the meta_size_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_size_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._meta_size_in

    @meta_size_in.setter
    def meta_size_in(self, meta_size_in):
        """Sets the meta_size_in of this ClusterImageWhereInput.


        :param meta_size_in: The meta_size_in of this ClusterImageWhereInput.  # noqa: E501
        :type meta_size_in: list[float]
        """

        self._meta_size_in = meta_size_in

    @property
    def meta_size_lt(self):
        """Gets the meta_size_lt of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_size_lt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._meta_size_lt

    @meta_size_lt.setter
    def meta_size_lt(self, meta_size_lt):
        """Sets the meta_size_lt of this ClusterImageWhereInput.


        :param meta_size_lt: The meta_size_lt of this ClusterImageWhereInput.  # noqa: E501
        :type meta_size_lt: float
        """

        self._meta_size_lt = meta_size_lt

    @property
    def meta_size_lte(self):
        """Gets the meta_size_lte of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_size_lte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._meta_size_lte

    @meta_size_lte.setter
    def meta_size_lte(self, meta_size_lte):
        """Sets the meta_size_lte of this ClusterImageWhereInput.


        :param meta_size_lte: The meta_size_lte of this ClusterImageWhereInput.  # noqa: E501
        :type meta_size_lte: float
        """

        self._meta_size_lte = meta_size_lte

    @property
    def meta_size_not(self):
        """Gets the meta_size_not of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_size_not of this ClusterImageWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._meta_size_not

    @meta_size_not.setter
    def meta_size_not(self, meta_size_not):
        """Sets the meta_size_not of this ClusterImageWhereInput.


        :param meta_size_not: The meta_size_not of this ClusterImageWhereInput.  # noqa: E501
        :type meta_size_not: float
        """

        self._meta_size_not = meta_size_not

    @property
    def meta_size_not_in(self):
        """Gets the meta_size_not_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The meta_size_not_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._meta_size_not_in

    @meta_size_not_in.setter
    def meta_size_not_in(self, meta_size_not_in):
        """Sets the meta_size_not_in of this ClusterImageWhereInput.


        :param meta_size_not_in: The meta_size_not_in of this ClusterImageWhereInput.  # noqa: E501
        :type meta_size_not_in: list[float]
        """

        self._meta_size_not_in = meta_size_not_in

    @property
    def name(self):
        """Gets the name of this ClusterImageWhereInput.  # noqa: E501


        :return: The name of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ClusterImageWhereInput.


        :param name: The name of this ClusterImageWhereInput.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def name_contains(self):
        """Gets the name_contains of this ClusterImageWhereInput.  # noqa: E501


        :return: The name_contains of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_contains

    @name_contains.setter
    def name_contains(self, name_contains):
        """Sets the name_contains of this ClusterImageWhereInput.


        :param name_contains: The name_contains of this ClusterImageWhereInput.  # noqa: E501
        :type name_contains: str
        """

        self._name_contains = name_contains

    @property
    def name_ends_with(self):
        """Gets the name_ends_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The name_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_ends_with

    @name_ends_with.setter
    def name_ends_with(self, name_ends_with):
        """Sets the name_ends_with of this ClusterImageWhereInput.


        :param name_ends_with: The name_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :type name_ends_with: str
        """

        self._name_ends_with = name_ends_with

    @property
    def name_gt(self):
        """Gets the name_gt of this ClusterImageWhereInput.  # noqa: E501


        :return: The name_gt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gt

    @name_gt.setter
    def name_gt(self, name_gt):
        """Sets the name_gt of this ClusterImageWhereInput.


        :param name_gt: The name_gt of this ClusterImageWhereInput.  # noqa: E501
        :type name_gt: str
        """

        self._name_gt = name_gt

    @property
    def name_gte(self):
        """Gets the name_gte of this ClusterImageWhereInput.  # noqa: E501


        :return: The name_gte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_gte

    @name_gte.setter
    def name_gte(self, name_gte):
        """Sets the name_gte of this ClusterImageWhereInput.


        :param name_gte: The name_gte of this ClusterImageWhereInput.  # noqa: E501
        :type name_gte: str
        """

        self._name_gte = name_gte

    @property
    def name_in(self):
        """Gets the name_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The name_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_in

    @name_in.setter
    def name_in(self, name_in):
        """Sets the name_in of this ClusterImageWhereInput.


        :param name_in: The name_in of this ClusterImageWhereInput.  # noqa: E501
        :type name_in: list[str]
        """

        self._name_in = name_in

    @property
    def name_lt(self):
        """Gets the name_lt of this ClusterImageWhereInput.  # noqa: E501


        :return: The name_lt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lt

    @name_lt.setter
    def name_lt(self, name_lt):
        """Sets the name_lt of this ClusterImageWhereInput.


        :param name_lt: The name_lt of this ClusterImageWhereInput.  # noqa: E501
        :type name_lt: str
        """

        self._name_lt = name_lt

    @property
    def name_lte(self):
        """Gets the name_lte of this ClusterImageWhereInput.  # noqa: E501


        :return: The name_lte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_lte

    @name_lte.setter
    def name_lte(self, name_lte):
        """Sets the name_lte of this ClusterImageWhereInput.


        :param name_lte: The name_lte of this ClusterImageWhereInput.  # noqa: E501
        :type name_lte: str
        """

        self._name_lte = name_lte

    @property
    def name_not(self):
        """Gets the name_not of this ClusterImageWhereInput.  # noqa: E501


        :return: The name_not of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not

    @name_not.setter
    def name_not(self, name_not):
        """Sets the name_not of this ClusterImageWhereInput.


        :param name_not: The name_not of this ClusterImageWhereInput.  # noqa: E501
        :type name_not: str
        """

        self._name_not = name_not

    @property
    def name_not_contains(self):
        """Gets the name_not_contains of this ClusterImageWhereInput.  # noqa: E501


        :return: The name_not_contains of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_contains

    @name_not_contains.setter
    def name_not_contains(self, name_not_contains):
        """Sets the name_not_contains of this ClusterImageWhereInput.


        :param name_not_contains: The name_not_contains of this ClusterImageWhereInput.  # noqa: E501
        :type name_not_contains: str
        """

        self._name_not_contains = name_not_contains

    @property
    def name_not_ends_with(self):
        """Gets the name_not_ends_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The name_not_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_ends_with

    @name_not_ends_with.setter
    def name_not_ends_with(self, name_not_ends_with):
        """Sets the name_not_ends_with of this ClusterImageWhereInput.


        :param name_not_ends_with: The name_not_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :type name_not_ends_with: str
        """

        self._name_not_ends_with = name_not_ends_with

    @property
    def name_not_in(self):
        """Gets the name_not_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The name_not_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._name_not_in

    @name_not_in.setter
    def name_not_in(self, name_not_in):
        """Sets the name_not_in of this ClusterImageWhereInput.


        :param name_not_in: The name_not_in of this ClusterImageWhereInput.  # noqa: E501
        :type name_not_in: list[str]
        """

        self._name_not_in = name_not_in

    @property
    def name_not_starts_with(self):
        """Gets the name_not_starts_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The name_not_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_not_starts_with

    @name_not_starts_with.setter
    def name_not_starts_with(self, name_not_starts_with):
        """Sets the name_not_starts_with of this ClusterImageWhereInput.


        :param name_not_starts_with: The name_not_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :type name_not_starts_with: str
        """

        self._name_not_starts_with = name_not_starts_with

    @property
    def name_starts_with(self):
        """Gets the name_starts_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The name_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._name_starts_with

    @name_starts_with.setter
    def name_starts_with(self, name_starts_with):
        """Sets the name_starts_with of this ClusterImageWhereInput.


        :param name_starts_with: The name_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :type name_starts_with: str
        """

        self._name_starts_with = name_starts_with

    @property
    def _not(self):
        """Gets the _not of this ClusterImageWhereInput.  # noqa: E501


        :return: The _not of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[ClusterImageWhereInput]
        """
        return self.__not

    @_not.setter
    def _not(self, _not):
        """Sets the _not of this ClusterImageWhereInput.


        :param _not: The _not of this ClusterImageWhereInput.  # noqa: E501
        :type _not: list[ClusterImageWhereInput]
        """

        self.__not = _not

    @property
    def _or(self):
        """Gets the _or of this ClusterImageWhereInput.  # noqa: E501


        :return: The _or of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[ClusterImageWhereInput]
        """
        return self.__or

    @_or.setter
    def _or(self, _or):
        """Sets the _or of this ClusterImageWhereInput.


        :param _or: The _or of this ClusterImageWhereInput.  # noqa: E501
        :type _or: list[ClusterImageWhereInput]
        """

        self.__or = _or

    @property
    def size(self):
        """Gets the size of this ClusterImageWhereInput.  # noqa: E501


        :return: The size of this ClusterImageWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this ClusterImageWhereInput.


        :param size: The size of this ClusterImageWhereInput.  # noqa: E501
        :type size: float
        """

        self._size = size

    @property
    def size_gt(self):
        """Gets the size_gt of this ClusterImageWhereInput.  # noqa: E501


        :return: The size_gt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._size_gt

    @size_gt.setter
    def size_gt(self, size_gt):
        """Sets the size_gt of this ClusterImageWhereInput.


        :param size_gt: The size_gt of this ClusterImageWhereInput.  # noqa: E501
        :type size_gt: float
        """

        self._size_gt = size_gt

    @property
    def size_gte(self):
        """Gets the size_gte of this ClusterImageWhereInput.  # noqa: E501


        :return: The size_gte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._size_gte

    @size_gte.setter
    def size_gte(self, size_gte):
        """Sets the size_gte of this ClusterImageWhereInput.


        :param size_gte: The size_gte of this ClusterImageWhereInput.  # noqa: E501
        :type size_gte: float
        """

        self._size_gte = size_gte

    @property
    def size_in(self):
        """Gets the size_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The size_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._size_in

    @size_in.setter
    def size_in(self, size_in):
        """Sets the size_in of this ClusterImageWhereInput.


        :param size_in: The size_in of this ClusterImageWhereInput.  # noqa: E501
        :type size_in: list[float]
        """

        self._size_in = size_in

    @property
    def size_lt(self):
        """Gets the size_lt of this ClusterImageWhereInput.  # noqa: E501


        :return: The size_lt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._size_lt

    @size_lt.setter
    def size_lt(self, size_lt):
        """Sets the size_lt of this ClusterImageWhereInput.


        :param size_lt: The size_lt of this ClusterImageWhereInput.  # noqa: E501
        :type size_lt: float
        """

        self._size_lt = size_lt

    @property
    def size_lte(self):
        """Gets the size_lte of this ClusterImageWhereInput.  # noqa: E501


        :return: The size_lte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._size_lte

    @size_lte.setter
    def size_lte(self, size_lte):
        """Sets the size_lte of this ClusterImageWhereInput.


        :param size_lte: The size_lte of this ClusterImageWhereInput.  # noqa: E501
        :type size_lte: float
        """

        self._size_lte = size_lte

    @property
    def size_not(self):
        """Gets the size_not of this ClusterImageWhereInput.  # noqa: E501


        :return: The size_not of this ClusterImageWhereInput.  # noqa: E501
        :rtype: float
        """
        return self._size_not

    @size_not.setter
    def size_not(self, size_not):
        """Sets the size_not of this ClusterImageWhereInput.


        :param size_not: The size_not of this ClusterImageWhereInput.  # noqa: E501
        :type size_not: float
        """

        self._size_not = size_not

    @property
    def size_not_in(self):
        """Gets the size_not_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The size_not_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[float]
        """
        return self._size_not_in

    @size_not_in.setter
    def size_not_in(self, size_not_in):
        """Sets the size_not_in of this ClusterImageWhereInput.


        :param size_not_in: The size_not_in of this ClusterImageWhereInput.  # noqa: E501
        :type size_not_in: list[float]
        """

        self._size_not_in = size_not_in

    @property
    def upgrade_tool_version(self):
        """Gets the upgrade_tool_version of this ClusterImageWhereInput.  # noqa: E501


        :return: The upgrade_tool_version of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._upgrade_tool_version

    @upgrade_tool_version.setter
    def upgrade_tool_version(self, upgrade_tool_version):
        """Sets the upgrade_tool_version of this ClusterImageWhereInput.


        :param upgrade_tool_version: The upgrade_tool_version of this ClusterImageWhereInput.  # noqa: E501
        :type upgrade_tool_version: str
        """

        self._upgrade_tool_version = upgrade_tool_version

    @property
    def upgrade_tool_version_contains(self):
        """Gets the upgrade_tool_version_contains of this ClusterImageWhereInput.  # noqa: E501


        :return: The upgrade_tool_version_contains of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._upgrade_tool_version_contains

    @upgrade_tool_version_contains.setter
    def upgrade_tool_version_contains(self, upgrade_tool_version_contains):
        """Sets the upgrade_tool_version_contains of this ClusterImageWhereInput.


        :param upgrade_tool_version_contains: The upgrade_tool_version_contains of this ClusterImageWhereInput.  # noqa: E501
        :type upgrade_tool_version_contains: str
        """

        self._upgrade_tool_version_contains = upgrade_tool_version_contains

    @property
    def upgrade_tool_version_ends_with(self):
        """Gets the upgrade_tool_version_ends_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The upgrade_tool_version_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._upgrade_tool_version_ends_with

    @upgrade_tool_version_ends_with.setter
    def upgrade_tool_version_ends_with(self, upgrade_tool_version_ends_with):
        """Sets the upgrade_tool_version_ends_with of this ClusterImageWhereInput.


        :param upgrade_tool_version_ends_with: The upgrade_tool_version_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :type upgrade_tool_version_ends_with: str
        """

        self._upgrade_tool_version_ends_with = upgrade_tool_version_ends_with

    @property
    def upgrade_tool_version_gt(self):
        """Gets the upgrade_tool_version_gt of this ClusterImageWhereInput.  # noqa: E501


        :return: The upgrade_tool_version_gt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._upgrade_tool_version_gt

    @upgrade_tool_version_gt.setter
    def upgrade_tool_version_gt(self, upgrade_tool_version_gt):
        """Sets the upgrade_tool_version_gt of this ClusterImageWhereInput.


        :param upgrade_tool_version_gt: The upgrade_tool_version_gt of this ClusterImageWhereInput.  # noqa: E501
        :type upgrade_tool_version_gt: str
        """

        self._upgrade_tool_version_gt = upgrade_tool_version_gt

    @property
    def upgrade_tool_version_gte(self):
        """Gets the upgrade_tool_version_gte of this ClusterImageWhereInput.  # noqa: E501


        :return: The upgrade_tool_version_gte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._upgrade_tool_version_gte

    @upgrade_tool_version_gte.setter
    def upgrade_tool_version_gte(self, upgrade_tool_version_gte):
        """Sets the upgrade_tool_version_gte of this ClusterImageWhereInput.


        :param upgrade_tool_version_gte: The upgrade_tool_version_gte of this ClusterImageWhereInput.  # noqa: E501
        :type upgrade_tool_version_gte: str
        """

        self._upgrade_tool_version_gte = upgrade_tool_version_gte

    @property
    def upgrade_tool_version_in(self):
        """Gets the upgrade_tool_version_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The upgrade_tool_version_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._upgrade_tool_version_in

    @upgrade_tool_version_in.setter
    def upgrade_tool_version_in(self, upgrade_tool_version_in):
        """Sets the upgrade_tool_version_in of this ClusterImageWhereInput.


        :param upgrade_tool_version_in: The upgrade_tool_version_in of this ClusterImageWhereInput.  # noqa: E501
        :type upgrade_tool_version_in: list[str]
        """

        self._upgrade_tool_version_in = upgrade_tool_version_in

    @property
    def upgrade_tool_version_lt(self):
        """Gets the upgrade_tool_version_lt of this ClusterImageWhereInput.  # noqa: E501


        :return: The upgrade_tool_version_lt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._upgrade_tool_version_lt

    @upgrade_tool_version_lt.setter
    def upgrade_tool_version_lt(self, upgrade_tool_version_lt):
        """Sets the upgrade_tool_version_lt of this ClusterImageWhereInput.


        :param upgrade_tool_version_lt: The upgrade_tool_version_lt of this ClusterImageWhereInput.  # noqa: E501
        :type upgrade_tool_version_lt: str
        """

        self._upgrade_tool_version_lt = upgrade_tool_version_lt

    @property
    def upgrade_tool_version_lte(self):
        """Gets the upgrade_tool_version_lte of this ClusterImageWhereInput.  # noqa: E501


        :return: The upgrade_tool_version_lte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._upgrade_tool_version_lte

    @upgrade_tool_version_lte.setter
    def upgrade_tool_version_lte(self, upgrade_tool_version_lte):
        """Sets the upgrade_tool_version_lte of this ClusterImageWhereInput.


        :param upgrade_tool_version_lte: The upgrade_tool_version_lte of this ClusterImageWhereInput.  # noqa: E501
        :type upgrade_tool_version_lte: str
        """

        self._upgrade_tool_version_lte = upgrade_tool_version_lte

    @property
    def upgrade_tool_version_not(self):
        """Gets the upgrade_tool_version_not of this ClusterImageWhereInput.  # noqa: E501


        :return: The upgrade_tool_version_not of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._upgrade_tool_version_not

    @upgrade_tool_version_not.setter
    def upgrade_tool_version_not(self, upgrade_tool_version_not):
        """Sets the upgrade_tool_version_not of this ClusterImageWhereInput.


        :param upgrade_tool_version_not: The upgrade_tool_version_not of this ClusterImageWhereInput.  # noqa: E501
        :type upgrade_tool_version_not: str
        """

        self._upgrade_tool_version_not = upgrade_tool_version_not

    @property
    def upgrade_tool_version_not_contains(self):
        """Gets the upgrade_tool_version_not_contains of this ClusterImageWhereInput.  # noqa: E501


        :return: The upgrade_tool_version_not_contains of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._upgrade_tool_version_not_contains

    @upgrade_tool_version_not_contains.setter
    def upgrade_tool_version_not_contains(self, upgrade_tool_version_not_contains):
        """Sets the upgrade_tool_version_not_contains of this ClusterImageWhereInput.


        :param upgrade_tool_version_not_contains: The upgrade_tool_version_not_contains of this ClusterImageWhereInput.  # noqa: E501
        :type upgrade_tool_version_not_contains: str
        """

        self._upgrade_tool_version_not_contains = upgrade_tool_version_not_contains

    @property
    def upgrade_tool_version_not_ends_with(self):
        """Gets the upgrade_tool_version_not_ends_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The upgrade_tool_version_not_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._upgrade_tool_version_not_ends_with

    @upgrade_tool_version_not_ends_with.setter
    def upgrade_tool_version_not_ends_with(self, upgrade_tool_version_not_ends_with):
        """Sets the upgrade_tool_version_not_ends_with of this ClusterImageWhereInput.


        :param upgrade_tool_version_not_ends_with: The upgrade_tool_version_not_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :type upgrade_tool_version_not_ends_with: str
        """

        self._upgrade_tool_version_not_ends_with = upgrade_tool_version_not_ends_with

    @property
    def upgrade_tool_version_not_in(self):
        """Gets the upgrade_tool_version_not_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The upgrade_tool_version_not_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._upgrade_tool_version_not_in

    @upgrade_tool_version_not_in.setter
    def upgrade_tool_version_not_in(self, upgrade_tool_version_not_in):
        """Sets the upgrade_tool_version_not_in of this ClusterImageWhereInput.


        :param upgrade_tool_version_not_in: The upgrade_tool_version_not_in of this ClusterImageWhereInput.  # noqa: E501
        :type upgrade_tool_version_not_in: list[str]
        """

        self._upgrade_tool_version_not_in = upgrade_tool_version_not_in

    @property
    def upgrade_tool_version_not_starts_with(self):
        """Gets the upgrade_tool_version_not_starts_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The upgrade_tool_version_not_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._upgrade_tool_version_not_starts_with

    @upgrade_tool_version_not_starts_with.setter
    def upgrade_tool_version_not_starts_with(self, upgrade_tool_version_not_starts_with):
        """Sets the upgrade_tool_version_not_starts_with of this ClusterImageWhereInput.


        :param upgrade_tool_version_not_starts_with: The upgrade_tool_version_not_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :type upgrade_tool_version_not_starts_with: str
        """

        self._upgrade_tool_version_not_starts_with = upgrade_tool_version_not_starts_with

    @property
    def upgrade_tool_version_starts_with(self):
        """Gets the upgrade_tool_version_starts_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The upgrade_tool_version_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._upgrade_tool_version_starts_with

    @upgrade_tool_version_starts_with.setter
    def upgrade_tool_version_starts_with(self, upgrade_tool_version_starts_with):
        """Sets the upgrade_tool_version_starts_with of this ClusterImageWhereInput.


        :param upgrade_tool_version_starts_with: The upgrade_tool_version_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :type upgrade_tool_version_starts_with: str
        """

        self._upgrade_tool_version_starts_with = upgrade_tool_version_starts_with

    @property
    def version(self):
        """Gets the version of this ClusterImageWhereInput.  # noqa: E501


        :return: The version of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ClusterImageWhereInput.


        :param version: The version of this ClusterImageWhereInput.  # noqa: E501
        :type version: str
        """

        self._version = version

    @property
    def version_contains(self):
        """Gets the version_contains of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_contains of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_contains

    @version_contains.setter
    def version_contains(self, version_contains):
        """Sets the version_contains of this ClusterImageWhereInput.


        :param version_contains: The version_contains of this ClusterImageWhereInput.  # noqa: E501
        :type version_contains: str
        """

        self._version_contains = version_contains

    @property
    def version_ends_with(self):
        """Gets the version_ends_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_ends_with

    @version_ends_with.setter
    def version_ends_with(self, version_ends_with):
        """Sets the version_ends_with of this ClusterImageWhereInput.


        :param version_ends_with: The version_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :type version_ends_with: str
        """

        self._version_ends_with = version_ends_with

    @property
    def version_gt(self):
        """Gets the version_gt of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_gt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_gt

    @version_gt.setter
    def version_gt(self, version_gt):
        """Sets the version_gt of this ClusterImageWhereInput.


        :param version_gt: The version_gt of this ClusterImageWhereInput.  # noqa: E501
        :type version_gt: str
        """

        self._version_gt = version_gt

    @property
    def version_gte(self):
        """Gets the version_gte of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_gte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_gte

    @version_gte.setter
    def version_gte(self, version_gte):
        """Sets the version_gte of this ClusterImageWhereInput.


        :param version_gte: The version_gte of this ClusterImageWhereInput.  # noqa: E501
        :type version_gte: str
        """

        self._version_gte = version_gte

    @property
    def version_in(self):
        """Gets the version_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._version_in

    @version_in.setter
    def version_in(self, version_in):
        """Sets the version_in of this ClusterImageWhereInput.


        :param version_in: The version_in of this ClusterImageWhereInput.  # noqa: E501
        :type version_in: list[str]
        """

        self._version_in = version_in

    @property
    def version_lt(self):
        """Gets the version_lt of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_lt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_lt

    @version_lt.setter
    def version_lt(self, version_lt):
        """Sets the version_lt of this ClusterImageWhereInput.


        :param version_lt: The version_lt of this ClusterImageWhereInput.  # noqa: E501
        :type version_lt: str
        """

        self._version_lt = version_lt

    @property
    def version_lte(self):
        """Gets the version_lte of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_lte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_lte

    @version_lte.setter
    def version_lte(self, version_lte):
        """Sets the version_lte of this ClusterImageWhereInput.


        :param version_lte: The version_lte of this ClusterImageWhereInput.  # noqa: E501
        :type version_lte: str
        """

        self._version_lte = version_lte

    @property
    def version_not(self):
        """Gets the version_not of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_not of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_not

    @version_not.setter
    def version_not(self, version_not):
        """Sets the version_not of this ClusterImageWhereInput.


        :param version_not: The version_not of this ClusterImageWhereInput.  # noqa: E501
        :type version_not: str
        """

        self._version_not = version_not

    @property
    def version_not_contains(self):
        """Gets the version_not_contains of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_not_contains of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_not_contains

    @version_not_contains.setter
    def version_not_contains(self, version_not_contains):
        """Sets the version_not_contains of this ClusterImageWhereInput.


        :param version_not_contains: The version_not_contains of this ClusterImageWhereInput.  # noqa: E501
        :type version_not_contains: str
        """

        self._version_not_contains = version_not_contains

    @property
    def version_not_ends_with(self):
        """Gets the version_not_ends_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_not_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_not_ends_with

    @version_not_ends_with.setter
    def version_not_ends_with(self, version_not_ends_with):
        """Sets the version_not_ends_with of this ClusterImageWhereInput.


        :param version_not_ends_with: The version_not_ends_with of this ClusterImageWhereInput.  # noqa: E501
        :type version_not_ends_with: str
        """

        self._version_not_ends_with = version_not_ends_with

    @property
    def version_not_in(self):
        """Gets the version_not_in of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_not_in of this ClusterImageWhereInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._version_not_in

    @version_not_in.setter
    def version_not_in(self, version_not_in):
        """Sets the version_not_in of this ClusterImageWhereInput.


        :param version_not_in: The version_not_in of this ClusterImageWhereInput.  # noqa: E501
        :type version_not_in: list[str]
        """

        self._version_not_in = version_not_in

    @property
    def version_not_starts_with(self):
        """Gets the version_not_starts_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_not_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_not_starts_with

    @version_not_starts_with.setter
    def version_not_starts_with(self, version_not_starts_with):
        """Sets the version_not_starts_with of this ClusterImageWhereInput.


        :param version_not_starts_with: The version_not_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :type version_not_starts_with: str
        """

        self._version_not_starts_with = version_not_starts_with

    @property
    def version_semantic_gt(self):
        """Gets the version_semantic_gt of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_semantic_gt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_semantic_gt

    @version_semantic_gt.setter
    def version_semantic_gt(self, version_semantic_gt):
        """Sets the version_semantic_gt of this ClusterImageWhereInput.


        :param version_semantic_gt: The version_semantic_gt of this ClusterImageWhereInput.  # noqa: E501
        :type version_semantic_gt: str
        """

        self._version_semantic_gt = version_semantic_gt

    @property
    def version_semantic_gte(self):
        """Gets the version_semantic_gte of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_semantic_gte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_semantic_gte

    @version_semantic_gte.setter
    def version_semantic_gte(self, version_semantic_gte):
        """Sets the version_semantic_gte of this ClusterImageWhereInput.


        :param version_semantic_gte: The version_semantic_gte of this ClusterImageWhereInput.  # noqa: E501
        :type version_semantic_gte: str
        """

        self._version_semantic_gte = version_semantic_gte

    @property
    def version_semantic_lt(self):
        """Gets the version_semantic_lt of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_semantic_lt of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_semantic_lt

    @version_semantic_lt.setter
    def version_semantic_lt(self, version_semantic_lt):
        """Sets the version_semantic_lt of this ClusterImageWhereInput.


        :param version_semantic_lt: The version_semantic_lt of this ClusterImageWhereInput.  # noqa: E501
        :type version_semantic_lt: str
        """

        self._version_semantic_lt = version_semantic_lt

    @property
    def version_semantic_lte(self):
        """Gets the version_semantic_lte of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_semantic_lte of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_semantic_lte

    @version_semantic_lte.setter
    def version_semantic_lte(self, version_semantic_lte):
        """Sets the version_semantic_lte of this ClusterImageWhereInput.


        :param version_semantic_lte: The version_semantic_lte of this ClusterImageWhereInput.  # noqa: E501
        :type version_semantic_lte: str
        """

        self._version_semantic_lte = version_semantic_lte

    @property
    def version_starts_with(self):
        """Gets the version_starts_with of this ClusterImageWhereInput.  # noqa: E501


        :return: The version_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :rtype: str
        """
        return self._version_starts_with

    @version_starts_with.setter
    def version_starts_with(self, version_starts_with):
        """Sets the version_starts_with of this ClusterImageWhereInput.


        :param version_starts_with: The version_starts_with of this ClusterImageWhereInput.  # noqa: E501
        :type version_starts_with: str
        """

        self._version_starts_with = version_starts_with

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ClusterImageWhereInput):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ClusterImageWhereInput):
            return True

        return self.to_dict() != other.to_dict()
