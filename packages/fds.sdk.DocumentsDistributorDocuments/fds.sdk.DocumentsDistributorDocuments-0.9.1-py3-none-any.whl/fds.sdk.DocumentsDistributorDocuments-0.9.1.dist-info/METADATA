Metadata-Version: 2.1
Name: fds.sdk.DocumentsDistributorDocuments
Version: 0.9.1
Summary: Documents Distributor - Documents client library for Python
Home-page: https://github.com/FactSet/enterprise-sdk/tree/main/code/python/DocumentsDistributorDocuments/v1
Author: FactSet Research Systems
License: Apache-2.0
Keywords: FactSet,API,SDK
Platform: UNKNOWN
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: urllib3 (>=1.25.3)
Requires-Dist: python-dateutil
Requires-Dist: fds.sdk.utils (>=0.10.0)

<img alt="FactSet" src="https://www.factset.com/hubfs/Assets/images/factset-logo.svg" height="56" width="290">

# Documents Distributor - Documents client library for Python

[![PyPi](https://img.shields.io/pypi/v/fds.sdk.DocumentsDistributorDocuments)](https://pypi.org/project/fds.sdk.DocumentsDistributorDocuments/)
[![Apache-2 license](https://img.shields.io/badge/license-Apache2-brightgreen.svg)](https://www.apache.org/licenses/LICENSE-2.0)

Documents APIs that provide filings such as Global Filings and XML files such as StreetAccount

  Global Filings API provides the capability to search and download filings documents from various exchanges around the world. The API also provides relevant metadata such as document source, company identifiers and form type around each filings document. Filings providers currently include EDGAR and SYMEX WebDisclosure.
  
  StreetAccount XML API provides access to historical StreetAccount (SA) news. SA provides a summary for various corporate and market news written by journalist with background in financial markets.

  The API delivers SA stories in XML format based on user-specified date input parameters. When the API request is completed, output files will be made available back to the users through a secure URL. This API has three endpoints (1) Request Files (2) Check Status (3) Get Files.

 Files delivered contain both metadata and content body in each file. This eliminates the need to make multiple requests through multiple services to get all the information.
 

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 1.0.0
- Package version: 0.9.1
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements

* Python >= 3.6

## Installation

### Poetry

```python
poetry add fds.sdk.utils fds.sdk.DocumentsDistributorDocuments
```

### pip

```python
pip install fds.sdk.utils fds.sdk.DocumentsDistributorDocuments
```

## Usage

1. [Generate authentication credentials](../../../../README.md#authentication).
2. Setup Python environment.
   1. Install and activate python 3.6+. If you're using [pyenv](https://github.com/pyenv/pyenv):

      ```sh
      pyenv install 3.9.7
      pyenv shell 3.9.7
      ```

   2. (optional) [Install poetry](https://python-poetry.org/docs/#installation).
3. [Install dependencies](#installation).
4. Run the following:

```python

from fds.sdk.utils.authentication import ConfidentialClient
import fds.sdk.DocumentsDistributorDocuments
from fds.sdk.DocumentsDistributorDocuments.api import global_filings_api_api
from fds.sdk.DocumentsDistributorDocuments.model.response import Response
from fds.sdk.DocumentsDistributorDocuments.model.status import Status
from pprint import pprint

# See configuration.py for a list of all supported configuration parameters.

# Examples for each supported authentication method are below,
# choose one that satisfies your use case.

# (Preferred) OAuth 2.0: FactSetOAuth2
# See https://github.com/FactSet/enterprise-sdk#oauth-20
# for information on how to create the app-config.json file
# See https://github.com/FactSet/enterprise-sdk-utils-python#authentication
# for more information on using the ConfidentialClient class
configuration = fds.sdk.DocumentsDistributorDocuments.Configuration(
    fds_oauth_client = ConfidentialClient('/path/to/app-config.json')
)

# Basic authentication: FactSetApiKey
# See https://github.com/FactSet/enterprise-sdk#api-key
# for information how to create an API key
# configuration = fds.sdk.DocumentsDistributorDocuments.Configuration(
#     username = 'USERNAME-SERIAL',
#     password = 'API-KEY'
# )

# Enter a context with an instance of the API client
with fds.sdk.DocumentsDistributorDocuments.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = global_filings_api_api.GlobalFilingsAPIApi(api_client)
    source = "EDG" # str | This parameter filters the results based on the source of the filings document.

    try:
        # Retrieve form types for each available Filings Source
        api_response = api_instance.global_filings_v1_form_types_get(source)
        pprint(api_response)
    except fds.sdk.DocumentsDistributorDocuments.ApiException as e:
        print("Exception when calling GlobalFilingsAPIApi->global_filings_v1_form_types_get: %s\n" % e)
```

## Documentation for API Endpoints

All URIs are relative to *https://api.factset.com/bulk-documents*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*GlobalFilingsAPIApi* | [**global_filings_v1_form_types_get**](docs/GlobalFilingsAPIApi.md#global_filings_v1_form_types_get) | **GET** /global-filings/v1/form-types | Retrieve form types for each available Filings Source
*GlobalFilingsAPIApi* | [**global_filings_v1_list_files_get**](docs/GlobalFilingsAPIApi.md#global_filings_v1_list_files_get) | **GET** /global-filings/v1/list-files | Retrieve filings and metadata within FactSet coverage
*StreetAccountXMLAPIApi* | [**asynch_streetaccount_v1_check_status_get**](docs/StreetAccountXMLAPIApi.md#asynch_streetaccount_v1_check_status_get) | **GET** /asynch/streetaccount/v1/check-status | Returns the status and percentDone of the requested jobID
*StreetAccountXMLAPIApi* | [**asynch_streetaccount_v1_get_files_get**](docs/StreetAccountXMLAPIApi.md#asynch_streetaccount_v1_get_files_get) | **GET** /asynch/streetaccount/v1/get-files | Returns the SA XML files for the specified daterange
*StreetAccountXMLAPIApi* | [**asynch_streetaccount_v1_request_files_get**](docs/StreetAccountXMLAPIApi.md#asynch_streetaccount_v1_request_files_get) | **GET** /asynch/streetaccount/v1/request-files | Returns the jobID


## Documentation For Models

 - [CheckstatusResponse](docs/CheckstatusResponse.md)
 - [ErrorDetail](docs/ErrorDetail.md)
 - [Filings](docs/Filings.md)
 - [GetResponse](docs/GetResponse.md)
 - [GetfilesResponse](docs/GetfilesResponse.md)
 - [IsPartialitems](docs/IsPartialitems.md)
 - [Meta](docs/Meta.md)
 - [PaginationItems](docs/PaginationItems.md)
 - [RequestfilesResponse](docs/RequestfilesResponse.md)
 - [Response](docs/Response.md)
 - [Status](docs/Status.md)
 - [StreetAccountStatus](docs/StreetAccountStatus.md)
 - [ValidParameterDetails](docs/ValidParameterDetails.md)


## Documentation For Authorization


## FactSetApiKey

- **Type**: HTTP basic authentication


## FactSetOAuth2

- **Type**: OAuth
- **Flow**: application
- **Authorization URL**: 
- **Scopes**: N/A


## Notes for Large OpenAPI documents
If the OpenAPI document is large, imports in fds.sdk.DocumentsDistributorDocuments.apis and fds.sdk.DocumentsDistributorDocuments.models may fail with a
RecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:

Solution 1:
Use specific imports for apis and models like:
- `from fds.sdk.DocumentsDistributorDocuments.api.default_api import DefaultApi`
- `from fds.sdk.DocumentsDistributorDocuments.model.pet import Pet`

Solution 2:
Before importing the package, adjust the maximum recursion limit as shown below:
```
import sys
sys.setrecursionlimit(1500)
import fds.sdk.DocumentsDistributorDocuments
from fds.sdk.DocumentsDistributorDocuments.apis import *
from fds.sdk.DocumentsDistributorDocuments.models import *
```

## Contributing

Please refer to the [contributing guide](../../../../CONTRIBUTING.md).

## Copyright

Copyright 2022 FactSet Research Systems Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.



