"""
    Documents Distributor - Documents API

    Documents APIs that provide filings such as Global Filings and XML files such as StreetAccount    Global Filings API provides the capability to search and download filings documents from various exchanges around the world. The API also provides relevant metadata such as document source, company identifiers and form type around each filings document. Filings providers currently include EDGAR and SYMEX WebDisclosure.      StreetAccount XML API provides access to historical StreetAccount (SA) news. SA provides a summary for various corporate and market news written by journalist with background in financial markets.    The API delivers SA stories in XML format based on user-specified date input parameters. When the API request is completed, output files will be made available back to the users through a secure URL. This API has three endpoints (1) Request Files (2) Check Status (3) Get Files.   Files delivered contain both metadata and content body in each file. This eliminates the need to make multiple requests through multiple services to get all the information.    # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from fds.sdk.DocumentsDistributorDocuments.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.DocumentsDistributorDocuments.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.DocumentsDistributorDocuments.model.response import Response
from fds.sdk.DocumentsDistributorDocuments.model.status import Status


class GlobalFilingsAPIApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.global_filings_v1_form_types_get_endpoint = _Endpoint(
            settings={
                'response_type': (Response,),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/global-filings/v1/form-types',
                'operation_id': 'global_filings_v1_form_types_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'source',
                ],
                'required': [
                    'source',
                ],
                'nullable': [
                ],
                'enum': [
                    'source',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('source',): {

                        "EDG": "EDG",
                        "SWD": "SWD"
                    },
                },
                'openapi_types': {
                    'source':
                        (str,),
                },
                'attribute_map': {
                    'source': 'source',
                },
                'location_map': {
                    'source': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.global_filings_v1_list_files_get_endpoint = _Endpoint(
            settings={
                'response_type': (Response,),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/global-filings/v1/list-files',
                'operation_id': 'global_filings_v1_list_files_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'source',
                    'pagination_limit',
                    'pagination_offset',
                    'sort',
                    'start_date',
                    'end_date',
                    'ids',
                    'form_type',
                ],
                'required': [
                    'source',
                    'pagination_limit',
                    'pagination_offset',
                ],
                'nullable': [
                ],
                'enum': [
                    'source',
                    'pagination_limit',
                    'pagination_offset',
                    'sort',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('source',): {

                        "EDG": "EDG",
                        "SWD": "SWD"
                    },
                    ('pagination_limit',): {

                        "5": 5
                    },
                    ('pagination_offset',): {

                        "0": 0
                    },
                    ('sort',): {

                        "STARTDATE": "startDate",
                        "-STARTDATE": "-startDate"
                    },
                },
                'openapi_types': {
                    'source':
                        (str,),
                    'pagination_limit':
                        (int,),
                    'pagination_offset':
                        (int,),
                    'sort':
                        (str,),
                    'start_date':
                        (str,),
                    'end_date':
                        (str,),
                    'ids':
                        (str,),
                    'form_type':
                        (str,),
                },
                'attribute_map': {
                    'source': 'source',
                    'pagination_limit': '_paginationLimit',
                    'pagination_offset': '_paginationOffset',
                    'sort': '_sort',
                    'start_date': 'startDate',
                    'end_date': 'endDate',
                    'ids': 'ids',
                    'form_type': 'formType',
                },
                'location_map': {
                    'source': 'query',
                    'pagination_limit': 'query',
                    'pagination_offset': 'query',
                    'sort': 'query',
                    'start_date': 'query',
                    'end_date': 'query',
                    'ids': 'query',
                    'form_type': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

    def global_filings_v1_form_types_get(
        self,
        source,
        **kwargs
    ):
        """Retrieve form types for each available Filings Source  # noqa: E501

        Gets all available form types for the filings sources. Source parameter can be used to filter the results.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.global_filings_v1_form_types_get(source, async_req=True)
        >>> result = thread.get()

        Args:
            source (str): This parameter filters the results based on the source of the filings document.

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['source'] = \
            source
        return self.global_filings_v1_form_types_get_endpoint.call_with_http_info(**kwargs)

    def global_filings_v1_list_files_get(
        self,
        source,
        pagination_limit=5,
        pagination_offset=0,
        **kwargs
    ):
        """Retrieve filings and metadata within FactSet coverage  # noqa: E501

        Gets the latest 25 filings files. Parameters can be used to filter and narrow down the results  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.global_filings_v1_list_files_get(source, pagination_limit=5, pagination_offset=0, async_req=True)
        >>> result = thread.get()

        Args:
            source (str): This parameter filters the results based on the source of the filings documents.
            pagination_limit (int): Specifies the maximum number of results to return per result (max. 25). defaults to 5, must be one of [5]
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results. defaults to 0, must be one of [0]

        Keyword Args:
            sort (str): Enables to get the data in ascending or descending order based on startTime. Results are in reverse chronological order if this parameter is not used. [optional] if omitted the server will use the default value of "-startDate"
            start_date (str): The earliest date the API should fetch for. Dates can be YYYY-MM-DD format. [optional]
            end_date (str): The latest date the API should fetch for. Dates can be YYYY-MM-DD format. [optional]
            ids (str): This parameter filters the results based on ticker ID.. [optional]
            form_type (str): This parameter filters the results based on filings formType. Use the form-types endpoint to view the formTypes available by filings source.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['source'] = \
            source
        kwargs['pagination_limit'] = \
            pagination_limit
        kwargs['pagination_offset'] = \
            pagination_offset
        return self.global_filings_v1_list_files_get_endpoint.call_with_http_info(**kwargs)

