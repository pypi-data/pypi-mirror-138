# Generated by Django 2.2.16 on 2020-11-03 15:28

from django.db import migrations, models
import djangoldp.fields


class Migration(migrations.Migration):

    dependencies = [
        ('djangoldp_exposition', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('condition', models.CharField(max_length=50, verbose_name='Condition de prêt')),
            ],
        ),
        migrations.CreateModel(
            name='Illustration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('illustrationlink', models.URLField(verbose_name="Illustration de l'exposition")),
            ],
        ),
        migrations.CreateModel(
            name='Pedagogictool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('name', models.CharField(max_length=150, verbose_name="Nom de l'outil pédagogique")),
            ],
        ),
        migrations.CreateModel(
            name='Presslink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('presslink', models.URLField(verbose_name='Lien vers la revue de presse')),
            ],
        ),
        migrations.CreateModel(
            name='Public',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('urlid', djangoldp.fields.LDPUrlField(blank=True, null=True, unique=True)),
                ('is_backlink', models.BooleanField(default=False, help_text='set automatically to indicate the Model is a backlink')),
                ('allow_create_backlink', models.BooleanField(default=True, help_text='set to False to disable backlink creation after Model save')),
                ('public', models.CharField(max_length=50, verbose_name='Public concerné')),
            ],
        ),
        migrations.RenameField(
            model_name='associateddoc',
            old_name='doc',
            new_name='associateddoc',
        ),
        migrations.RemoveField(
            model_name='associatedlink',
            name='link',
        ),
        migrations.AddField(
            model_name='associatedlink',
            name='associatedlink',
            field=models.URLField(null=True, verbose_name='Lien associé'),
        ),
        migrations.AddField(
            model_name='expo',
            name='descriptive',
            field=models.TextField(blank=True, null=True, verbose_name="Descriptif du contenu de l'exposition"),
        ),
        migrations.AddField(
            model_name='expo',
            name='price',
            field=models.IntegerField(blank=True, null=True, verbose_name='Tarif'),
        ),
        migrations.AddField(
            model_name='expo',
            name='publicprecision',
            field=models.CharField(blank=True, max_length=150, null=True, verbose_name='Précision sur le public'),
        ),
        migrations.AlterField(
            model_name='expo',
            name='description',
            field=models.TextField(blank=True, null=True, verbose_name="Description succinte de l'exposition"),
        ),
        migrations.AlterField(
            model_name='expo',
            name='promoteddoc',
            field=models.ManyToManyField(max_length=50, to='djangoldp_exposition.Promoteddoc', verbose_name='Document mis en avant'),
        ),
        migrations.AlterField(
            model_name='expo',
            name='promotedlink',
            field=models.ManyToManyField(max_length=50, to='djangoldp_exposition.Promotedlink', verbose_name='Lien mis en avant'),
        ),
        migrations.AlterField(
            model_name='expo',
            name='promotedvideo',
            field=models.ManyToManyField(max_length=50, to='djangoldp_exposition.Promotedvideo', verbose_name='Vidéo mise en avant'),
        ),
        migrations.AlterField(
            model_name='expo',
            name='thematique',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Thématique'),
        ),
        migrations.AddField(
            model_name='expo',
            name='condition',
            field=models.ManyToManyField(max_length=50, to='djangoldp_exposition.Condition', verbose_name='Condition de prêt'),
        ),
        migrations.AddField(
            model_name='expo',
            name='illustration',
            field=models.ManyToManyField(max_length=150, to='djangoldp_exposition.Illustration', verbose_name="Illustration de l'exposition"),
        ),
        migrations.AddField(
            model_name='expo',
            name='pedagogictool',
            field=models.ManyToManyField(max_length=150, to='djangoldp_exposition.Pedagogictool', verbose_name='Outil pédagogique'),
        ),
        migrations.AddField(
            model_name='expo',
            name='presslink',
            field=models.ManyToManyField(max_length=50, to='djangoldp_exposition.Presslink', verbose_name='Revue de presse'),
        ),
        migrations.AddField(
            model_name='expo',
            name='public',
            field=models.ManyToManyField(max_length=150, to='djangoldp_exposition.Public', verbose_name='Public concerné'),
        ),
    ]
